{
	"id": "ca46d3bc5ebd118c9df5fe4d2bea6d78",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227);\r\n\r\n\r\n  uint256 private K;\r\n  uint256 private fee;\r\n  uint256 private last_balance;\r\n  uint256 private admin;\r\n  event price(uint eth_pool, uint dcf_pool, uint timestamp);\r\n\r\n\r\n\r\n  constructor(uint256 _k, uint256 _fee)payable{\r\n    owner = msg.sender;\r\n    last_balance = msg.value;\r\n    K = _k;\r\n    fee = _fee;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function deposit()external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n\r\n               \r\n  }\r\n\r\n\r\n  function market(address payable seller, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(seller) >= dcf_amount);\r\n\r\n      uint256 eth_amount = DCF_ETH(dcf_amount);\r\n      uint256 _fee = eth_amount.mul(fee).div(1000);\r\n      admin = admin.add(_fee);\r\n      eth_amount = eth_amount.sub(_fee);\r\n    \r\n      seller.transfer(eth_amount);\r\n      dcoff.transferFrom(seller,address(this),dcf_amount);   \r\n\r\n      last_balance = address(this).balance;    \r\n      emit price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp);    \r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n    dcoff.transfer(owner,dcoff.balanceOf(address(this)));\r\n  }\r\n\r\n\r\n  function admin_fee()external onlyOwner{\r\n    payable(owner).transfer(admin);\r\n    admin = 0; \r\n  }\r\n\r\n  function viewAdminFee()external onlyOwner view returns(uint256){\r\n    if(owner == msg.sender){\r\n      return admin;\r\n    }else{\r\n      revert();\r\n    }\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dcf_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "price",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin_fee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewAdminFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":183:2956  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":261:303  0x58d3a4cb28f30d9C87E8F79544f98F358cde6227 */\n  0x58d3a4cb28f30d9c87e8f79544f98f358cde6227\n    /* \"Dcoffer/treasury.sol\":238:304  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":486:622  constructor(uint256 _k, uint256 _fee)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":545:555  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":537:542  owner */\n  0x05\n  0x00\n    /* \"Dcoffer/treasury.sol\":537:555  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":577:586  msg.value */\n  callvalue\n    /* \"Dcoffer/treasury.sol\":562:574  last_balance */\n  0x03\n    /* \"Dcoffer/treasury.sol\":562:586  last_balance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":597:599  _k */\n  dup2\n    /* \"Dcoffer/treasury.sol\":593:594  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":593:599  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":612:616  _fee */\n  dup1\n    /* \"Dcoffer/treasury.sol\":606:609  fee */\n  0x02\n    /* \"Dcoffer/treasury.sol\":606:616  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":486:622  constructor(uint256 _k, uint256 _fee)payable{... */\n  pop\n  pop\n    /* \"Dcoffer/treasury.sol\":183:2956  contract treasury {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_2:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":798:917   */\ntag_23:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_25\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_26\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":183:2956  contract treasury {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":183:2956  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc3c64674\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfee3f7f9\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x1758d6f3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3a23bf49\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":2777:2933  function viewAdminFee()external onlyOwner view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":1659:2122  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":1044:1651  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Dcoffer/treasury.sol\":2130:2490  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":818:920  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Dcoffer/treasury.sol\":928:1036  function deposit()external payable{... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"Dcoffer/treasury.sol\":2503:2665  function Warning_protect()external onlyOwner{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Dcoffer/treasury.sol\":2673:2771  function admin_fee()external onlyOwner{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Dcoffer/treasury.sol\":2777:2933  function viewAdminFee()external onlyOwner view returns(uint256){... */\n    tag_13:\n        /* \"Dcoffer/treasury.sol\":2832:2839  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":745:755  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:741  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":728:792  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"Dcoffer/treasury.sol\":2859:2869  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":2850:2869  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2850:2855  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2850:2869  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/treasury.sol\":2847:2928  if(owner == msg.sender){... */\n      tag_50\n      jumpi\n        /* \"Dcoffer/treasury.sol\":2886:2891  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2879:2891  return admin */\n      swap1\n      pop\n      jump(tag_49)\n        /* \"Dcoffer/treasury.sol\":2847:2928  if(owner == msg.sender){... */\n    tag_50:\n        /* \"Dcoffer/treasury.sol\":2912:2920  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":803:804  _ */\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":2777:2933  function viewAdminFee()external onlyOwner view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1659:2122  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_20:\n        /* \"Dcoffer/treasury.sol\":1715:1722  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1730:1749  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1752:1775  last_balance.sub(admin) */\n      tag_53\n        /* \"Dcoffer/treasury.sol\":1769:1774  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1752:1764  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":1752:1768  last_balance.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":1752:1775  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"Dcoffer/treasury.sol\":1730:1775  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1782:1801  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1804:1809  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1804:1819  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1828:1832  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1804:1834  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"Dcoffer/treasury.sol\":1782:1834  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1845:1865  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1868:1895  _dcf_amount.add(dcf_amount) */\n      tag_61\n        /* \"Dcoffer/treasury.sol\":1884:1894  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1868:1879  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1868:1883  _dcf_amount.add */\n      tag_62\n      swap1\n        /* \"Dcoffer/treasury.sol\":1868:1895  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"Dcoffer/treasury.sol\":1845:1895  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1922:1927  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1922:1939  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1922:1941  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_65:\n        /* \"Dcoffer/treasury.sol\":1907:1919  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1907:1941  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":1904:1993  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_66\n      jumpi\n        /* \"Dcoffer/treasury.sol\":1966:1971  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1966:1983  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1966:1985  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_69:\n        /* \"Dcoffer/treasury.sol\":1951:1985  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1904:1993  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_66:\n        /* \"Dcoffer/treasury.sol\":2001:2021  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2024:2043  K.div(Variable_dcf) */\n      tag_70\n        /* \"Dcoffer/treasury.sol\":2030:2042  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2024:2025  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2024:2029  K.div */\n      tag_71\n      swap1\n        /* \"Dcoffer/treasury.sol\":2024:2043  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Dcoffer/treasury.sol\":2001:2043  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2050:2064  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2067:2096  _eth_amount.sub(Variable_eth) */\n      tag_72\n        /* \"Dcoffer/treasury.sol\":2083:2095  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2067:2078  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":2067:2082  _eth_amount.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":2067:2096  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Dcoffer/treasury.sol\":2050:2096  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2110:2116  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2103:2116  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1659:2122  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1044:1651  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_26:\n        /* \"Dcoffer/treasury.sol\":1156:1160  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1129:1160  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1129:1140  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":1129:1152  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1141:1151  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1129:1152  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1129:1160  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":1121:1161  require(RouterAdmin[msg.sender] == true) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"Dcoffer/treasury.sol\":1205:1215  dcf_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1178:1183  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1178:1193  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1194:1200  seller */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1178:1201  dcoff.balanceOf(seller) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_79:\n        /* \"Dcoffer/treasury.sol\":1178:1215  dcoff.balanceOf(seller) >= dcf_amount */\n      lt\n      iszero\n        /* \"Dcoffer/treasury.sol\":1170:1216  require(dcoff.balanceOf(seller) >= dcf_amount) */\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n        /* \"Dcoffer/treasury.sol\":1227:1245  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1248:1267  DCF_ETH(dcf_amount) */\n      tag_81\n        /* \"Dcoffer/treasury.sol\":1256:1266  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1248:1255  DCF_ETH */\n      tag_20\n        /* \"Dcoffer/treasury.sol\":1248:1267  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_81:\n        /* \"Dcoffer/treasury.sol\":1227:1267  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1276:1288  uint256 _fee */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1291:1320  eth_amount.mul(fee).div(1000) */\n      tag_82\n        /* \"Dcoffer/treasury.sol\":1315:1319  1000 */\n      0x03e8\n        /* \"Dcoffer/treasury.sol\":1291:1310  eth_amount.mul(fee) */\n      tag_83\n        /* \"Dcoffer/treasury.sol\":1306:1309  fee */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1291:1301  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1291:1305  eth_amount.mul */\n      tag_84\n      swap1\n        /* \"Dcoffer/treasury.sol\":1291:1310  eth_amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"Dcoffer/treasury.sol\":1291:1314  eth_amount.mul(fee).div */\n      tag_71\n      swap1\n        /* \"Dcoffer/treasury.sol\":1291:1320  eth_amount.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"Dcoffer/treasury.sol\":1276:1320  uint256 _fee = eth_amount.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1337:1352  admin.add(_fee) */\n      tag_85\n        /* \"Dcoffer/treasury.sol\":1347:1351  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1337:1342  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1337:1346  admin.add */\n      tag_62\n      swap1\n        /* \"Dcoffer/treasury.sol\":1337:1352  admin.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"Dcoffer/treasury.sol\":1329:1334  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":1329:1352  admin = admin.add(_fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1374:1394  eth_amount.sub(_fee) */\n      tag_86\n        /* \"Dcoffer/treasury.sol\":1389:1393  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1374:1384  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1374:1388  eth_amount.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":1374:1394  eth_amount.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"Dcoffer/treasury.sol\":1361:1394  eth_amount = eth_amount.sub(_fee) */\n      swap2\n      pop\n        /* \"Dcoffer/treasury.sol\":1409:1415  seller */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1409:1424  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1409:1436  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1425:1435  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1409:1436  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n        /* \"Dcoffer/treasury.sol\":1445:1450  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1445:1463  dcoff.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Dcoffer/treasury.sol\":1464:1470  seller */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1479:1483  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1485:1495  dcf_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1445:1496  dcoff.transferFrom(seller,address(this),dcf_amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      pop\n        /* \"Dcoffer/treasury.sol\":1525:1546  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1510:1522  last_balance */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1510:1546  last_balance = address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1564:1641  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      0x2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6\n        /* \"Dcoffer/treasury.sol\":1570:1593  last_balance.sub(admin) */\n      tag_95\n        /* \"Dcoffer/treasury.sol\":1587:1592  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1570:1582  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":1570:1586  last_balance.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":1570:1593  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"Dcoffer/treasury.sol\":1594:1599  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1594:1609  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1618:1622  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1594:1624  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_99:\n        /* \"Dcoffer/treasury.sol\":1625:1640  block.timestamp */\n      timestamp\n        /* \"Dcoffer/treasury.sol\":1564:1641  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      mload(0x40)\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Dcoffer/treasury.sol\":1112:1651  {... */\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1044:1651  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2130:2490  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_30:\n        /* \"Dcoffer/treasury.sol\":2186:2193  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2201:2220  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2223:2246  last_balance.sub(admin) */\n      tag_103\n        /* \"Dcoffer/treasury.sol\":2240:2245  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2223:2235  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":2223:2239  last_balance.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":2223:2246  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"Dcoffer/treasury.sol\":2201:2246  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2253:2272  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2275:2280  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2275:2290  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2299:2303  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2275:2305  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_107:\n        /* \"Dcoffer/treasury.sol\":2253:2305  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2312:2332  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2335:2362  _eth_amount.add(eth_amount) */\n      tag_108\n        /* \"Dcoffer/treasury.sol\":2351:2361  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2335:2346  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":2335:2350  _eth_amount.add */\n      tag_62\n      swap1\n        /* \"Dcoffer/treasury.sol\":2335:2362  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"Dcoffer/treasury.sol\":2312:2362  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2369:2389  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2392:2411  K.div(Variable_eth) */\n      tag_109\n        /* \"Dcoffer/treasury.sol\":2398:2410  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2392:2393  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2392:2397  K.div */\n      tag_71\n      swap1\n        /* \"Dcoffer/treasury.sol\":2392:2411  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"Dcoffer/treasury.sol\":2369:2411  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2418:2432  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2435:2464  _dcf_amount.sub(Variable_dcf) */\n      tag_110\n        /* \"Dcoffer/treasury.sol\":2451:2463  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2435:2446  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2435:2450  _dcf_amount.sub */\n      tag_54\n      swap1\n        /* \"Dcoffer/treasury.sol\":2435:2464  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"Dcoffer/treasury.sol\":2418:2464  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2478:2484  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2471:2484  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":2130:2490  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":818:920  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_36:\n        /* \"Dcoffer/treasury.sol\":745:755  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:741  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":728:792  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_48\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Dcoffer/treasury.sol\":909:914  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":889:900  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":889:906  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":901:905  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":889:906  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":889:914  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":818:920  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":928:1036  function deposit()external payable{... */\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":1006:1010  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":979:1010  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":979:990  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":979:1002  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":991:1001  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":979:1002  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":979:1010  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":971:1011  require(RouterAdmin[msg.sender] == true) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"Dcoffer/treasury.sol\":928:1036  function deposit()external payable{... */\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2503:2665  function Warning_protect()external onlyOwner{... */\n    tag_41:\n        /* \"Dcoffer/treasury.sol\":745:755  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:741  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":728:792  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_48\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"Dcoffer/treasury.sol\":2562:2567  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2554:2577  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2554:2600  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":2578:2599  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":2554:2600  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n        /* \"Dcoffer/treasury.sol\":2607:2612  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2607:2621  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":2622:2627  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2628:2633  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2628:2643  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2652:2656  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2628:2658  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_126:\n        /* \"Dcoffer/treasury.sol\":2607:2659  dcoff.transfer(owner,dcoff.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_131:\n      pop\n        /* \"Dcoffer/treasury.sol\":2503:2665  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2673:2771  function admin_fee()external onlyOwner{... */\n    tag_44:\n        /* \"Dcoffer/treasury.sol\":745:755  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:741  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":736:755  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":728:792  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_48\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"Dcoffer/treasury.sol\":2726:2731  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2718:2741  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2718:2748  payable(owner).transfer(admin) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":2742:2747  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2718:2748  payable(owner).transfer(admin) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n        /* \"Dcoffer/treasury.sol\":2763:2764  0 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2755:2760  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":2755:2764  admin = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":2673:2771  function admin_fee()external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_150:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_151:\n        /* \"#utility.yul\":177:201   */\n      tag_183\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_150\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_185\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_151\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_153:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_155:\n        /* \"#utility.yul\":842:866   */\n      tag_190\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_150\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_191:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_156:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_193\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_155\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_19:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_196\n      tag_153\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1118:1237   */\n    tag_195:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_197\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_156\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_157:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1613   */\n    tag_158:\n        /* \"#utility.yul\":1554:1561   */\n      0x00\n        /* \"#utility.yul\":1583:1607   */\n      tag_200\n        /* \"#utility.yul\":1601:1606   */\n      dup3\n        /* \"#utility.yul\":1583:1607   */\n      tag_157\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1572:1607   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1619:1757   */\n    tag_159:\n        /* \"#utility.yul\":1700:1732   */\n      tag_202\n        /* \"#utility.yul\":1726:1731   */\n      dup2\n        /* \"#utility.yul\":1700:1732   */\n      tag_158\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1693:1698   */\n      dup2\n        /* \"#utility.yul\":1690:1733   */\n      eq\n        /* \"#utility.yul\":1680:1751   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1744:1745   */\n      dup1\n        /* \"#utility.yul\":1737:1749   */\n      revert\n        /* \"#utility.yul\":1680:1751   */\n    tag_203:\n        /* \"#utility.yul\":1619:1757   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:1918   */\n    tag_160:\n        /* \"#utility.yul\":1817:1822   */\n      0x00\n        /* \"#utility.yul\":1855:1861   */\n      dup2\n        /* \"#utility.yul\":1842:1862   */\n      calldataload\n        /* \"#utility.yul\":1833:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1912   */\n      tag_205\n        /* \"#utility.yul\":1906:1911   */\n      dup2\n        /* \"#utility.yul\":1871:1912   */\n      tag_159\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1763:1918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1924:2414   */\n    tag_25:\n        /* \"#utility.yul\":2000:2006   */\n      0x00\n        /* \"#utility.yul\":2008:2014   */\n      dup1\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2045:2054   */\n      dup4\n        /* \"#utility.yul\":2036:2043   */\n      dup6\n        /* \"#utility.yul\":2032:2055   */\n      sub\n        /* \"#utility.yul\":2028:2060   */\n      slt\n        /* \"#utility.yul\":2025:2144   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2063:2142   */\n      tag_208\n      tag_153\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2025:2144   */\n    tag_207:\n        /* \"#utility.yul\":2183:2184   */\n      0x00\n        /* \"#utility.yul\":2208:2269   */\n      tag_209\n        /* \"#utility.yul\":2261:2268   */\n      dup6\n        /* \"#utility.yul\":2252:2258   */\n      dup3\n        /* \"#utility.yul\":2241:2250   */\n      dup7\n        /* \"#utility.yul\":2237:2259   */\n      add\n        /* \"#utility.yul\":2208:2269   */\n      tag_160\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2198:2269   */\n      swap3\n      pop\n        /* \"#utility.yul\":2154:2279   */\n      pop\n        /* \"#utility.yul\":2318:2320   */\n      0x20\n        /* \"#utility.yul\":2344:2397   */\n      tag_210\n        /* \"#utility.yul\":2389:2396   */\n      dup6\n        /* \"#utility.yul\":2380:2386   */\n      dup3\n        /* \"#utility.yul\":2369:2378   */\n      dup7\n        /* \"#utility.yul\":2365:2387   */\n      add\n        /* \"#utility.yul\":2344:2397   */\n      tag_156\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2334:2397   */\n      swap2\n      pop\n        /* \"#utility.yul\":2289:2407   */\n      pop\n        /* \"#utility.yul\":1924:2414   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2516   */\n    tag_161:\n        /* \"#utility.yul\":2457:2464   */\n      0x00\n        /* \"#utility.yul\":2486:2510   */\n      tag_212\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2486:2510   */\n      tag_157\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2475:2510   */\n      swap1\n      pop\n        /* \"#utility.yul\":2420:2516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2522:2644   */\n    tag_162:\n        /* \"#utility.yul\":2595:2619   */\n      tag_214\n        /* \"#utility.yul\":2613:2618   */\n      dup2\n        /* \"#utility.yul\":2595:2619   */\n      tag_161\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2585:2620   */\n      eq\n        /* \"#utility.yul\":2575:2638   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2575:2638   */\n    tag_215:\n        /* \"#utility.yul\":2522:2644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2650:2789   */\n    tag_163:\n        /* \"#utility.yul\":2696:2701   */\n      0x00\n        /* \"#utility.yul\":2734:2740   */\n      dup2\n        /* \"#utility.yul\":2721:2741   */\n      calldataload\n        /* \"#utility.yul\":2712:2741   */\n      swap1\n      pop\n        /* \"#utility.yul\":2750:2783   */\n      tag_217\n        /* \"#utility.yul\":2777:2782   */\n      dup2\n        /* \"#utility.yul\":2750:2783   */\n      tag_162\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2650:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2885   */\n    tag_164:\n        /* \"#utility.yul\":2829:2836   */\n      0x00\n        /* \"#utility.yul\":2872:2877   */\n      dup2\n        /* \"#utility.yul\":2865:2878   */\n      iszero\n        /* \"#utility.yul\":2858:2879   */\n      iszero\n        /* \"#utility.yul\":2847:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3007   */\n    tag_165:\n        /* \"#utility.yul\":2961:2982   */\n      tag_220\n        /* \"#utility.yul\":2976:2981   */\n      dup2\n        /* \"#utility.yul\":2961:2982   */\n      tag_164\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2951:2983   */\n      eq\n        /* \"#utility.yul\":2941:3001   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":2994:2995   */\n      dup1\n        /* \"#utility.yul\":2987:2999   */\n      revert\n        /* \"#utility.yul\":2941:3001   */\n    tag_221:\n        /* \"#utility.yul\":2891:3007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3146   */\n    tag_166:\n        /* \"#utility.yul\":3056:3061   */\n      0x00\n        /* \"#utility.yul\":3094:3100   */\n      dup2\n        /* \"#utility.yul\":3081:3101   */\n      calldataload\n        /* \"#utility.yul\":3072:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3110:3140   */\n      tag_223\n        /* \"#utility.yul\":3134:3139   */\n      dup2\n        /* \"#utility.yul\":3110:3140   */\n      tag_165\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3013:3146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3620   */\n    tag_35:\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3225:3231   */\n      dup1\n        /* \"#utility.yul\":3274:3276   */\n      0x40\n        /* \"#utility.yul\":3262:3271   */\n      dup4\n        /* \"#utility.yul\":3253:3260   */\n      dup6\n        /* \"#utility.yul\":3249:3272   */\n      sub\n        /* \"#utility.yul\":3245:3277   */\n      slt\n        /* \"#utility.yul\":3242:3361   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3280:3359   */\n      tag_226\n      tag_153\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3242:3361   */\n    tag_225:\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3425:3478   */\n      tag_227\n        /* \"#utility.yul\":3470:3477   */\n      dup6\n        /* \"#utility.yul\":3461:3467   */\n      dup3\n        /* \"#utility.yul\":3450:3459   */\n      dup7\n        /* \"#utility.yul\":3446:3468   */\n      add\n        /* \"#utility.yul\":3425:3478   */\n      tag_163\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3415:3478   */\n      swap3\n      pop\n        /* \"#utility.yul\":3371:3488   */\n      pop\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3553:3603   */\n      tag_228\n        /* \"#utility.yul\":3595:3602   */\n      dup6\n        /* \"#utility.yul\":3586:3592   */\n      dup3\n        /* \"#utility.yul\":3575:3584   */\n      dup7\n        /* \"#utility.yul\":3571:3593   */\n      add\n        /* \"#utility.yul\":3553:3603   */\n      tag_166\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3543:3603   */\n      swap2\n      pop\n        /* \"#utility.yul\":3498:3613   */\n      pop\n        /* \"#utility.yul\":3152:3620   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3795   */\n    tag_167:\n        /* \"#utility.yul\":3710:3721   */\n      0x00\n        /* \"#utility.yul\":3744:3750   */\n      dup3\n        /* \"#utility.yul\":3739:3742   */\n      dup3\n        /* \"#utility.yul\":3732:3751   */\n      mstore\n        /* \"#utility.yul\":3784:3788   */\n      0x20\n        /* \"#utility.yul\":3779:3782   */\n      dup3\n        /* \"#utility.yul\":3775:3789   */\n      add\n        /* \"#utility.yul\":3760:3789   */\n      swap1\n      pop\n        /* \"#utility.yul\":3626:3795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:3983   */\n    tag_168:\n        /* \"#utility.yul\":3941:3975   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3929:3935   */\n      dup3\n        /* \"#utility.yul\":3925:3939   */\n      add\n        /* \"#utility.yul\":3918:3976   */\n      mstore\n        /* \"#utility.yul\":3801:3983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3989:4355   */\n    tag_169:\n        /* \"#utility.yul\":4131:4134   */\n      0x00\n        /* \"#utility.yul\":4152:4219   */\n      tag_232\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4211:4214   */\n      dup4\n        /* \"#utility.yul\":4152:4219   */\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4145:4219   */\n      swap2\n      pop\n        /* \"#utility.yul\":4228:4321   */\n      tag_233\n        /* \"#utility.yul\":4317:4320   */\n      dup3\n        /* \"#utility.yul\":4228:4321   */\n      tag_168\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4344   */\n      dup3\n        /* \"#utility.yul\":4337:4349   */\n      add\n        /* \"#utility.yul\":4330:4349   */\n      swap1\n      pop\n        /* \"#utility.yul\":3989:4355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4780   */\n    tag_48:\n        /* \"#utility.yul\":4527:4531   */\n      0x00\n        /* \"#utility.yul\":4565:4567   */\n      0x20\n        /* \"#utility.yul\":4554:4563   */\n      dup3\n        /* \"#utility.yul\":4550:4568   */\n      add\n        /* \"#utility.yul\":4542:4568   */\n      swap1\n      pop\n        /* \"#utility.yul\":4614:4623   */\n      dup2\n        /* \"#utility.yul\":4608:4612   */\n      dup2\n        /* \"#utility.yul\":4604:4624   */\n      sub\n        /* \"#utility.yul\":4600:4601   */\n      0x00\n        /* \"#utility.yul\":4589:4598   */\n      dup4\n        /* \"#utility.yul\":4585:4602   */\n      add\n        /* \"#utility.yul\":4578:4625   */\n      mstore\n        /* \"#utility.yul\":4642:4773   */\n      tag_235\n        /* \"#utility.yul\":4768:4772   */\n      dup2\n        /* \"#utility.yul\":4642:4773   */\n      tag_169\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4634:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4361:4780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4904   */\n    tag_170:\n        /* \"#utility.yul\":4873:4897   */\n      tag_237\n        /* \"#utility.yul\":4891:4896   */\n      dup2\n        /* \"#utility.yul\":4873:4897   */\n      tag_161\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4868:4871   */\n      dup3\n        /* \"#utility.yul\":4861:4898   */\n      mstore\n        /* \"#utility.yul\":4786:4904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5132   */\n    tag_56:\n        /* \"#utility.yul\":5003:5007   */\n      0x00\n        /* \"#utility.yul\":5041:5043   */\n      0x20\n        /* \"#utility.yul\":5030:5039   */\n      dup3\n        /* \"#utility.yul\":5026:5044   */\n      add\n        /* \"#utility.yul\":5018:5044   */\n      swap1\n      pop\n        /* \"#utility.yul\":5054:5125   */\n      tag_239\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5111:5120   */\n      dup4\n        /* \"#utility.yul\":5107:5124   */\n      add\n        /* \"#utility.yul\":5098:5104   */\n      dup5\n        /* \"#utility.yul\":5054:5125   */\n      tag_170\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4910:5132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5138:5281   */\n    tag_171:\n        /* \"#utility.yul\":5195:5200   */\n      0x00\n        /* \"#utility.yul\":5226:5232   */\n      dup2\n        /* \"#utility.yul\":5220:5233   */\n      mload\n        /* \"#utility.yul\":5211:5233   */\n      swap1\n      pop\n        /* \"#utility.yul\":5242:5275   */\n      tag_241\n        /* \"#utility.yul\":5269:5274   */\n      dup2\n        /* \"#utility.yul\":5242:5275   */\n      tag_155\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5138:5281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5287:5638   */\n    tag_60:\n        /* \"#utility.yul\":5357:5363   */\n      0x00\n        /* \"#utility.yul\":5406:5408   */\n      0x20\n        /* \"#utility.yul\":5394:5403   */\n      dup3\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5381:5404   */\n      sub\n        /* \"#utility.yul\":5377:5409   */\n      slt\n        /* \"#utility.yul\":5374:5493   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":5412:5491   */\n      tag_244\n      tag_153\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5374:5493   */\n    tag_243:\n        /* \"#utility.yul\":5532:5533   */\n      0x00\n        /* \"#utility.yul\":5557:5621   */\n      tag_245\n        /* \"#utility.yul\":5613:5620   */\n      dup5\n        /* \"#utility.yul\":5604:5610   */\n      dup3\n        /* \"#utility.yul\":5593:5602   */\n      dup6\n        /* \"#utility.yul\":5589:5611   */\n      add\n        /* \"#utility.yul\":5557:5621   */\n      tag_171\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5547:5621   */\n      swap2\n      pop\n        /* \"#utility.yul\":5503:5631   */\n      pop\n        /* \"#utility.yul\":5287:5638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5644:5704   */\n    tag_172:\n        /* \"#utility.yul\":5672:5675   */\n      0x00\n        /* \"#utility.yul\":5693:5698   */\n      dup2\n        /* \"#utility.yul\":5686:5698   */\n      swap1\n      pop\n        /* \"#utility.yul\":5644:5704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5710:5852   */\n    tag_173:\n        /* \"#utility.yul\":5760:5769   */\n      0x00\n        /* \"#utility.yul\":5793:5846   */\n      tag_248\n        /* \"#utility.yul\":5811:5845   */\n      tag_249\n        /* \"#utility.yul\":5820:5844   */\n      tag_250\n        /* \"#utility.yul\":5838:5843   */\n      dup5\n        /* \"#utility.yul\":5820:5844   */\n      tag_157\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5811:5845   */\n      tag_172\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5793:5846   */\n      tag_157\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5780:5846   */\n      swap1\n      pop\n        /* \"#utility.yul\":5710:5852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5858:5984   */\n    tag_174:\n        /* \"#utility.yul\":5908:5917   */\n      0x00\n        /* \"#utility.yul\":5941:5978   */\n      tag_252\n        /* \"#utility.yul\":5972:5977   */\n      dup3\n        /* \"#utility.yul\":5941:5978   */\n      tag_173\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5928:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5858:5984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5990:6124   */\n    tag_175:\n        /* \"#utility.yul\":6048:6057   */\n      0x00\n        /* \"#utility.yul\":6081:6118   */\n      tag_254\n        /* \"#utility.yul\":6112:6117   */\n      dup3\n        /* \"#utility.yul\":6081:6118   */\n      tag_174\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6068:6118   */\n      swap1\n      pop\n        /* \"#utility.yul\":5990:6124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6130:6277   */\n    tag_176:\n        /* \"#utility.yul\":6225:6270   */\n      tag_256\n        /* \"#utility.yul\":6264:6269   */\n      dup2\n        /* \"#utility.yul\":6225:6270   */\n      tag_175\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6220:6223   */\n      dup3\n        /* \"#utility.yul\":6213:6271   */\n      mstore\n        /* \"#utility.yul\":6130:6277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6283:6521   */\n    tag_76:\n        /* \"#utility.yul\":6384:6388   */\n      0x00\n        /* \"#utility.yul\":6422:6424   */\n      0x20\n        /* \"#utility.yul\":6411:6420   */\n      dup3\n        /* \"#utility.yul\":6407:6425   */\n      add\n        /* \"#utility.yul\":6399:6425   */\n      swap1\n      pop\n        /* \"#utility.yul\":6435:6514   */\n      tag_258\n        /* \"#utility.yul\":6511:6512   */\n      0x00\n        /* \"#utility.yul\":6500:6509   */\n      dup4\n        /* \"#utility.yul\":6496:6513   */\n      add\n        /* \"#utility.yul\":6487:6493   */\n      dup5\n        /* \"#utility.yul\":6435:6514   */\n      tag_176\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6283:6521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6527:6985   */\n    tag_90:\n        /* \"#utility.yul\":6684:6688   */\n      0x00\n        /* \"#utility.yul\":6722:6724   */\n      0x60\n        /* \"#utility.yul\":6711:6720   */\n      dup3\n        /* \"#utility.yul\":6707:6725   */\n      add\n        /* \"#utility.yul\":6699:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:6814   */\n      tag_260\n        /* \"#utility.yul\":6811:6812   */\n      0x00\n        /* \"#utility.yul\":6800:6809   */\n      dup4\n        /* \"#utility.yul\":6796:6813   */\n      add\n        /* \"#utility.yul\":6787:6793   */\n      dup7\n        /* \"#utility.yul\":6735:6814   */\n      tag_176\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6824:6896   */\n      tag_261\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup4\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6868:6874   */\n      dup6\n        /* \"#utility.yul\":6824:6896   */\n      tag_170\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6906:6978   */\n      tag_262\n        /* \"#utility.yul\":6974:6976   */\n      0x40\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6959:6977   */\n      add\n        /* \"#utility.yul\":6950:6956   */\n      dup5\n        /* \"#utility.yul\":6906:6978   */\n      tag_151\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6527:6985   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6991:7128   */\n    tag_177:\n        /* \"#utility.yul\":7045:7050   */\n      0x00\n        /* \"#utility.yul\":7076:7082   */\n      dup2\n        /* \"#utility.yul\":7070:7083   */\n      mload\n        /* \"#utility.yul\":7061:7083   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7122   */\n      tag_264\n        /* \"#utility.yul\":7116:7121   */\n      dup2\n        /* \"#utility.yul\":7092:7122   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6991:7128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7134:7479   */\n    tag_94:\n        /* \"#utility.yul\":7201:7207   */\n      0x00\n        /* \"#utility.yul\":7250:7252   */\n      0x20\n        /* \"#utility.yul\":7238:7247   */\n      dup3\n        /* \"#utility.yul\":7229:7236   */\n      dup5\n        /* \"#utility.yul\":7225:7248   */\n      sub\n        /* \"#utility.yul\":7221:7253   */\n      slt\n        /* \"#utility.yul\":7218:7337   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7256:7335   */\n      tag_267\n      tag_153\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7218:7337   */\n    tag_266:\n        /* \"#utility.yul\":7376:7377   */\n      0x00\n        /* \"#utility.yul\":7401:7462   */\n      tag_268\n        /* \"#utility.yul\":7454:7461   */\n      dup5\n        /* \"#utility.yul\":7445:7451   */\n      dup3\n        /* \"#utility.yul\":7434:7443   */\n      dup6\n        /* \"#utility.yul\":7430:7452   */\n      add\n        /* \"#utility.yul\":7401:7462   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7391:7462   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7472   */\n      pop\n        /* \"#utility.yul\":7134:7479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7927   */\n    tag_101:\n        /* \"#utility.yul\":7634:7638   */\n      0x00\n        /* \"#utility.yul\":7672:7674   */\n      0x60\n        /* \"#utility.yul\":7661:7670   */\n      dup3\n        /* \"#utility.yul\":7657:7675   */\n      add\n        /* \"#utility.yul\":7649:7675   */\n      swap1\n      pop\n        /* \"#utility.yul\":7685:7756   */\n      tag_270\n        /* \"#utility.yul\":7753:7754   */\n      0x00\n        /* \"#utility.yul\":7742:7751   */\n      dup4\n        /* \"#utility.yul\":7738:7755   */\n      add\n        /* \"#utility.yul\":7729:7735   */\n      dup7\n        /* \"#utility.yul\":7685:7756   */\n      tag_151\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7766:7838   */\n      tag_271\n        /* \"#utility.yul\":7834:7836   */\n      0x20\n        /* \"#utility.yul\":7823:7832   */\n      dup4\n        /* \"#utility.yul\":7819:7837   */\n      add\n        /* \"#utility.yul\":7810:7816   */\n      dup6\n        /* \"#utility.yul\":7766:7838   */\n      tag_151\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7848:7920   */\n      tag_272\n        /* \"#utility.yul\":7916:7918   */\n      0x40\n        /* \"#utility.yul\":7905:7914   */\n      dup4\n        /* \"#utility.yul\":7901:7919   */\n      add\n        /* \"#utility.yul\":7892:7898   */\n      dup5\n        /* \"#utility.yul\":7848:7920   */\n      tag_151\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7485:7927   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7933:8265   */\n    tag_128:\n        /* \"#utility.yul\":8054:8058   */\n      0x00\n        /* \"#utility.yul\":8092:8094   */\n      0x40\n        /* \"#utility.yul\":8081:8090   */\n      dup3\n        /* \"#utility.yul\":8077:8095   */\n      add\n        /* \"#utility.yul\":8069:8095   */\n      swap1\n      pop\n        /* \"#utility.yul\":8105:8176   */\n      tag_274\n        /* \"#utility.yul\":8173:8174   */\n      0x00\n        /* \"#utility.yul\":8162:8171   */\n      dup4\n        /* \"#utility.yul\":8158:8175   */\n      add\n        /* \"#utility.yul\":8149:8155   */\n      dup6\n        /* \"#utility.yul\":8105:8176   */\n      tag_170\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8186:8258   */\n      tag_275\n        /* \"#utility.yul\":8254:8256   */\n      0x20\n        /* \"#utility.yul\":8243:8252   */\n      dup4\n        /* \"#utility.yul\":8239:8257   */\n      add\n        /* \"#utility.yul\":8230:8236   */\n      dup5\n        /* \"#utility.yul\":8186:8258   */\n      tag_151\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7933:8265   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8271:8451   */\n    tag_178:\n        /* \"#utility.yul\":8319:8396   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8316:8317   */\n      0x00\n        /* \"#utility.yul\":8309:8397   */\n      mstore\n        /* \"#utility.yul\":8416:8420   */\n      0x11\n        /* \"#utility.yul\":8413:8414   */\n      0x04\n        /* \"#utility.yul\":8406:8421   */\n      mstore\n        /* \"#utility.yul\":8440:8444   */\n      0x24\n        /* \"#utility.yul\":8437:8438   */\n      0x00\n        /* \"#utility.yul\":8430:8445   */\n      revert\n        /* \"#utility.yul\":8457:8648   */\n    tag_140:\n        /* \"#utility.yul\":8497:8501   */\n      0x00\n        /* \"#utility.yul\":8517:8537   */\n      tag_278\n        /* \"#utility.yul\":8535:8536   */\n      dup3\n        /* \"#utility.yul\":8517:8537   */\n      tag_150\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8512:8537   */\n      swap2\n      pop\n        /* \"#utility.yul\":8551:8571   */\n      tag_279\n        /* \"#utility.yul\":8569:8570   */\n      dup4\n        /* \"#utility.yul\":8551:8571   */\n      tag_150\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8546:8571   */\n      swap3\n      pop\n        /* \"#utility.yul\":8590:8591   */\n      dup3\n        /* \"#utility.yul\":8587:8588   */\n      dup3\n        /* \"#utility.yul\":8584:8592   */\n      lt\n        /* \"#utility.yul\":8581:8615   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":8595:8613   */\n      tag_281\n      tag_178\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8581:8615   */\n    tag_280:\n        /* \"#utility.yul\":8640:8641   */\n      dup3\n        /* \"#utility.yul\":8637:8638   */\n      dup3\n        /* \"#utility.yul\":8633:8642   */\n      sub\n        /* \"#utility.yul\":8625:8642   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8654:8959   */\n    tag_143:\n        /* \"#utility.yul\":8694:8697   */\n      0x00\n        /* \"#utility.yul\":8713:8733   */\n      tag_283\n        /* \"#utility.yul\":8731:8732   */\n      dup3\n        /* \"#utility.yul\":8713:8733   */\n      tag_150\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8708:8733   */\n      swap2\n      pop\n        /* \"#utility.yul\":8747:8767   */\n      tag_284\n        /* \"#utility.yul\":8765:8766   */\n      dup4\n        /* \"#utility.yul\":8747:8767   */\n      tag_150\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8742:8767   */\n      swap3\n      pop\n        /* \"#utility.yul\":8901:8902   */\n      dup3\n        /* \"#utility.yul\":8833:8899   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8829:8903   */\n      sub\n        /* \"#utility.yul\":8826:8827   */\n      dup3\n        /* \"#utility.yul\":8823:8904   */\n      gt\n        /* \"#utility.yul\":8820:8927   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8907:8925   */\n      tag_286\n      tag_178\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8820:8927   */\n    tag_285:\n        /* \"#utility.yul\":8951:8952   */\n      dup3\n        /* \"#utility.yul\":8948:8949   */\n      dup3\n        /* \"#utility.yul\":8944:8953   */\n      add\n        /* \"#utility.yul\":8937:8953   */\n      swap1\n      pop\n        /* \"#utility.yul\":8654:8959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8965:9145   */\n    tag_179:\n        /* \"#utility.yul\":9013:9090   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9010:9011   */\n      0x00\n        /* \"#utility.yul\":9003:9091   */\n      mstore\n        /* \"#utility.yul\":9110:9114   */\n      0x12\n        /* \"#utility.yul\":9107:9108   */\n      0x04\n        /* \"#utility.yul\":9100:9115   */\n      mstore\n        /* \"#utility.yul\":9134:9138   */\n      0x24\n        /* \"#utility.yul\":9131:9132   */\n      0x00\n        /* \"#utility.yul\":9124:9139   */\n      revert\n        /* \"#utility.yul\":9151:9336   */\n    tag_146:\n        /* \"#utility.yul\":9191:9192   */\n      0x00\n        /* \"#utility.yul\":9208:9228   */\n      tag_289\n        /* \"#utility.yul\":9226:9227   */\n      dup3\n        /* \"#utility.yul\":9208:9228   */\n      tag_150\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9203:9228   */\n      swap2\n      pop\n        /* \"#utility.yul\":9242:9262   */\n      tag_290\n        /* \"#utility.yul\":9260:9261   */\n      dup4\n        /* \"#utility.yul\":9242:9262   */\n      tag_150\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9237:9262   */\n      swap3\n      pop\n        /* \"#utility.yul\":9281:9282   */\n      dup3\n        /* \"#utility.yul\":9271:9306   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":9286:9304   */\n      tag_292\n      tag_179\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9271:9306   */\n    tag_291:\n        /* \"#utility.yul\":9328:9329   */\n      dup3\n        /* \"#utility.yul\":9325:9326   */\n      dup3\n        /* \"#utility.yul\":9321:9330   */\n      div\n        /* \"#utility.yul\":9316:9330   */\n      swap1\n      pop\n        /* \"#utility.yul\":9151:9336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9342:9690   */\n    tag_149:\n        /* \"#utility.yul\":9382:9389   */\n      0x00\n        /* \"#utility.yul\":9405:9425   */\n      tag_294\n        /* \"#utility.yul\":9423:9424   */\n      dup3\n        /* \"#utility.yul\":9405:9425   */\n      tag_150\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9400:9425   */\n      swap2\n      pop\n        /* \"#utility.yul\":9439:9459   */\n      tag_295\n        /* \"#utility.yul\":9457:9458   */\n      dup4\n        /* \"#utility.yul\":9439:9459   */\n      tag_150\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9434:9459   */\n      swap3\n      pop\n        /* \"#utility.yul\":9627:9628   */\n      dup2\n        /* \"#utility.yul\":9559:9625   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9555:9629   */\n      div\n        /* \"#utility.yul\":9552:9553   */\n      dup4\n        /* \"#utility.yul\":9549:9630   */\n      gt\n        /* \"#utility.yul\":9544:9545   */\n      dup3\n        /* \"#utility.yul\":9537:9546   */\n      iszero\n        /* \"#utility.yul\":9530:9547   */\n      iszero\n        /* \"#utility.yul\":9526:9631   */\n      and\n        /* \"#utility.yul\":9523:9654   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":9634:9652   */\n      tag_297\n      tag_178\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9523:9654   */\n    tag_296:\n        /* \"#utility.yul\":9682:9683   */\n      dup3\n        /* \"#utility.yul\":9679:9680   */\n      dup3\n        /* \"#utility.yul\":9675:9684   */\n      mul\n        /* \"#utility.yul\":9664:9684   */\n      swap1\n      pop\n        /* \"#utility.yul\":9342:9690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d130d842492cb3e4571eb49597b92a0d80e868c7d1581100a5189cfe0786ba5d64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1204:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "788:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "834:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:32:3"
															},
															"nodeType": "YulIf",
															"src": "798:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "927:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "956:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "946:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "971:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1065:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1110:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "750:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "761:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "781:6:3",
														"type": ""
													}
												],
												"src": "694:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527358d3a4cb28f30d9c87e8f79544f98f358cde62276000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620015733803806200157383398181016040528101906200007d91906200011b565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055508160018190555080600281905550505062000162565b600080fd5b6000819050919050565b620000f581620000e0565b81146200010157600080fd5b50565b6000815190506200011581620000ea565b92915050565b60008060408385031215620001355762000134620000db565b5b6000620001458582860162000104565b9250506020620001588582860162000104565b9150509250929050565b61140180620001726000396000f3fe60806040526004361061007b5760003560e01c8063c3c646741161004e578063c3c646741461014e578063d0e30db014610177578063dac3fad414610181578063fee3f7f9146101985761007b565b80631758d6f3146100805780633a23bf49146100ab57806394756aa7146100e857806397dedb1d14610111575b600080fd5b34801561008c57600080fd5b506100956101af565b6040516100a29190610e4f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610e9b565b6102a8565b6040516100df9190610e4f565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610f26565b6104df565b005b34801561011d57600080fd5b5061013860048036038101906101339190610e9b565b61082b565b6040516101459190610e4f565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610fdc565b61093a565b005b61017f610a25565b005b34801561018d57600080fd5b50610196610a84565b005b3480156101a457600080fd5b506101ad610cd9565b005b60003373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611079565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102a05760045490506102a5565b600080fd5b90565b6000806102c2600454600354610dde90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161032091906110a8565b602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036191906110d8565b905060006103788583610df490919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040991906110d8565b8111156104a25760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906110d8565b90505b60006104b982600154610e0a90919063ffffffff16565b905060006104d08286610dde90919063ffffffff16565b90508095505050505050919050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461053c57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105969190611164565b602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906110d8565b10156105e257600080fd5b60006105ed826102a8565b9050600061061a6103e861060c60025485610e2090919063ffffffff16565b610e0a90919063ffffffff16565b905061063181600454610df490919063ffffffff16565b60048190555061064a8183610dde90919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610692573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b81526004016106f09392919061117f565b6020604051808303816000875af115801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906111cb565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610773600454600354610dde90919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107cc91906110a8565b602060405180830381865afa1580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906110d8565b4260405161081d939291906111f8565b60405180910390a150505050565b600080610845600454600354610dde90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a391906110a8565b602060405180830381865afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e491906110d8565b905060006108fb8584610df490919063ffffffff16565b9050600061091482600154610e0a90919063ffffffff16565b9050600061092b8285610dde90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611079565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610a8257600080fd5b565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b90611079565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b7c573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3591906110a8565b602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7691906110d8565b6040518363ffffffff1660e01b8152600401610c9392919061122f565b6020604051808303816000875af1158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd691906111cb565b50565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090611079565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610dd3573d6000803e3d6000fd5b506000600481905550565b60008183610dec9190611287565b905092915050565b60008183610e0291906112bb565b905092915050565b60008183610e189190611340565b905092915050565b60008183610e2e9190611371565b905092915050565b6000819050919050565b610e4981610e36565b82525050565b6000602082019050610e646000830184610e40565b92915050565b600080fd5b610e7881610e36565b8114610e8357600080fd5b50565b600081359050610e9581610e6f565b92915050565b600060208284031215610eb157610eb0610e6a565b5b6000610ebf84828501610e86565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef382610ec8565b9050919050565b610f0381610ee8565b8114610f0e57600080fd5b50565b600081359050610f2081610efa565b92915050565b60008060408385031215610f3d57610f3c610e6a565b5b6000610f4b85828601610f11565b9250506020610f5c85828601610e86565b9150509250929050565b6000610f7182610ec8565b9050919050565b610f8181610f66565b8114610f8c57600080fd5b50565b600081359050610f9e81610f78565b92915050565b60008115159050919050565b610fb981610fa4565b8114610fc457600080fd5b50565b600081359050610fd681610fb0565b92915050565b60008060408385031215610ff357610ff2610e6a565b5b600061100185828601610f8f565b925050602061101285828601610fc7565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061106360208361101c565b915061106e8261102d565b602082019050919050565b6000602082019050818103600083015261109281611056565b9050919050565b6110a281610f66565b82525050565b60006020820190506110bd6000830184611099565b92915050565b6000815190506110d281610e6f565b92915050565b6000602082840312156110ee576110ed610e6a565b5b60006110fc848285016110c3565b91505092915050565b6000819050919050565b600061112a61112561112084610ec8565b611105565b610ec8565b9050919050565b600061113c8261110f565b9050919050565b600061114e82611131565b9050919050565b61115e81611143565b82525050565b60006020820190506111796000830184611155565b92915050565b60006060820190506111946000830186611155565b6111a16020830185611099565b6111ae6040830184610e40565b949350505050565b6000815190506111c581610fb0565b92915050565b6000602082840312156111e1576111e0610e6a565b5b60006111ef848285016111b6565b91505092915050565b600060608201905061120d6000830186610e40565b61121a6020830185610e40565b6112276040830184610e40565b949350505050565b60006040820190506112446000830185611099565b6112516020830184610e40565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129282610e36565b915061129d83610e36565b9250828210156112b0576112af611258565b5b828203905092915050565b60006112c682610e36565b91506112d183610e36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561130657611305611258565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061134b82610e36565b915061135683610e36565b92508261136657611365611311565b5b828204905092915050565b600061137c82610e36565b915061138783610e36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c0576113bf611258565b5b82820290509291505056fea2646970667358221220d130d842492cb3e4571eb49597b92a0d80e868c7d1581100a5189cfe0786ba5d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x58D3A4CB28F30D9C87E8F79544F98F358CDE6227 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH3 0x1573 CODESIZE SUB DUP1 PUSH3 0x1573 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x7D SWAP2 SWAP1 PUSH3 0x11B JUMP JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x162 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF5 DUP2 PUSH3 0xE0 JUMP JUMPDEST DUP2 EQ PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x115 DUP2 PUSH3 0xEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0xDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x145 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x158 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1401 DUP1 PUSH3 0x172 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x198 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1758D6F3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xA25 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A0 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C2 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 DUP6 DUP4 PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 DUP3 PUSH1 0x1 SLOAD PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D0 DUP3 DUP7 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST LT ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61A PUSH2 0x3E8 PUSH2 0x60C PUSH1 0x2 SLOAD DUP6 PUSH2 0xE20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x631 DUP2 PUSH1 0x4 SLOAD PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x64A DUP2 DUP4 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0x773 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x81D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x845 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FB DUP6 DUP5 PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x914 DUP3 PUSH1 0x1 SLOAD PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x92B DUP3 DUP6 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP3 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE95 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBF DUP5 DUP3 DUP6 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF3 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF03 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF20 DUP2 PUSH2 0xEFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP6 DUP3 DUP7 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF5C DUP6 DUP3 DUP7 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9E DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB9 DUP2 PUSH2 0xFA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD6 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP6 DUP3 DUP7 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1012 DUP6 DUP3 DUP7 ADD PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1063 PUSH1 0x20 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0x106E DUP3 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1092 DUP2 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A2 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10D2 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FC DUP5 DUP3 DUP6 ADD PUSH2 0x10C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH2 0x1125 PUSH2 0x1120 DUP5 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114E DUP3 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115E DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1194 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x11A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x11AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C5 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP5 DUP3 DUP6 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x120D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1244 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1292 DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x129D DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x12B0 JUMPI PUSH2 0x12AF PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C6 DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D1 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1356 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1311 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137C DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1387 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13BF PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 ADDRESS 0xD8 TIMESTAMP 0x49 0x2C 0xB3 0xE4 JUMPI 0x1E 0xB4 SWAP6 SWAP8 0xB9 0x2A 0xD DUP1 0xE8 PUSH9 0xC7D1581100A5189CFE SMOD DUP7 0xBA 0x5D PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "183:2773:2:-:0;;;261:42;238:66;;;;;;;;;;;;;;;;;;;;486:136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;545:10;537:5;;:18;;;;;;;;;;;;;;;;;;577:9;562:12;:24;;;;597:2;593:1;:6;;;;612:4;606:3;:10;;;;486:136;;183:2773;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;183:2773:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_649": {
									"entryPoint": 680,
									"id": 649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_697": {
									"entryPoint": 2091,
									"id": 697,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_728": {
									"entryPoint": 2692,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 3572,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@admin_fee_746": {
									"entryPoint": 3289,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_491": {
									"entryPoint": 2597,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 3594,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_588": {
									"entryPoint": 1247,
									"id": 588,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 3616,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRouter_478": {
									"entryPoint": 2362,
									"id": 478,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 3550,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewAdminFee_766": {
									"entryPoint": 431,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9693:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:3"
															},
															"nodeType": "YulIf",
															"src": "822:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:3",
														"type": ""
													}
												],
												"src": "769:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:3",
														"type": ""
													}
												],
												"src": "897:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:3"
															},
															"nodeType": "YulIf",
															"src": "1118:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:3",
														"type": ""
													}
												],
												"src": "1042:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1601:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1583:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1572:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1554:7:3",
														"type": ""
													}
												],
												"src": "1509:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1735:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1737:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1693:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1726:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1700:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1690:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:51:3"
															},
															"nodeType": "YulIf",
															"src": "1680:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1663:5:3",
														"type": ""
													}
												],
												"src": "1619:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1855:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1842:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1833:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1906:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1871:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1801:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1809:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1817:5:3",
														"type": ""
													}
												],
												"src": "1763:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2063:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:3"
															},
															"nodeType": "YulIf",
															"src": "2025:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2154:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2169:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2173:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2198:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2241:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2252:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2237:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2237:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2261:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2208:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2198:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2289:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2304:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2308:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2334:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2369:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2380:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2365:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2389:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2344:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2344:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2334:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1977:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1988:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2000:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2008:6:3",
														"type": ""
													}
												],
												"src": "1924:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2465:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2475:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2504:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2486:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2475:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2447:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2457:7:3",
														"type": ""
													}
												],
												"src": "2420:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2588:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2613:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2595:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2595:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2585:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:43:3"
															},
															"nodeType": "YulIf",
															"src": "2575:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2558:5:3",
														"type": ""
													}
												],
												"src": "2522:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2712:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2734:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2721:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2712:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2750:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2680:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2688:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:3",
														"type": ""
													}
												],
												"src": "2650:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2837:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2847:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2872:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2865:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2847:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2819:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2829:7:3",
														"type": ""
													}
												],
												"src": "2795:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2985:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2994:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2987:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2987:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2987:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2954:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2976:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2961:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2961:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2951:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2951:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:40:3"
															},
															"nodeType": "YulIf",
															"src": "2941:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2924:5:3",
														"type": ""
													}
												],
												"src": "2891:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3081:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3072:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3110:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3040:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3048:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3056:5:3",
														"type": ""
													}
												],
												"src": "3013:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3232:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3278:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3280:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3253:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:32:3"
															},
															"nodeType": "YulIf",
															"src": "3242:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3371:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3386:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3390:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3415:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3450:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3461:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3446:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3470:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3425:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3498:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3513:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3517:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3543:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3586:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3553:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3194:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3205:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3217:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3225:6:3",
														"type": ""
													}
												],
												"src": "3152:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3722:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3739:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3744:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3760:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3779:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3775:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3760:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3694:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3699:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3710:11:3",
														"type": ""
													}
												],
												"src": "3626:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3907:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3929:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3941:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3918:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3899:6:3",
														"type": ""
													}
												],
												"src": "3801:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4135:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4145:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4211:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4152:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4317:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4228:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4228:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4330:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4341:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4123:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4131:3:3",
														"type": ""
													}
												],
												"src": "3989:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4532:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4542:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4554:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4565:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4550:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4542:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4589:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4608:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4604:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4578:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4634:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4768:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4642:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4634:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4512:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4527:4:3",
														"type": ""
													}
												],
												"src": "4361:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4868:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4891:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4873:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4839:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4846:3:3",
														"type": ""
													}
												],
												"src": "4786:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5008:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5018:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5030:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5018:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5111:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5122:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5107:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5054:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5054:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4980:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4992:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5003:4:3",
														"type": ""
													}
												],
												"src": "4910:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5201:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5211:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5220:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5211:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5269:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5242:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5242:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5179:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5187:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5195:5:3",
														"type": ""
													}
												],
												"src": "5138:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5364:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5410:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5412:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5412:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5412:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5394:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5377:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:32:3"
															},
															"nodeType": "YulIf",
															"src": "5374:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5503:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5518:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5532:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5522:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5547:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5593:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5604:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5589:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5589:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5613:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5557:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5547:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5334:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5345:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5357:6:3",
														"type": ""
													}
												],
												"src": "5287:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5676:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5686:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5693:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5662:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5672:3:3",
														"type": ""
													}
												],
												"src": "5644:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5780:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5838:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5820:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5811:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5811:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5793:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5780:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5750:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5760:9:3",
														"type": ""
													}
												],
												"src": "5710:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5918:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5928:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5972:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5941:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5928:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5898:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5908:9:3",
														"type": ""
													}
												],
												"src": "5858:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6058:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6068:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6112:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6081:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6068:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6038:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6048:9:3",
														"type": ""
													}
												],
												"src": "5990:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6220:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6264:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6225:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6225:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6213:58:3"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6191:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6198:3:3",
														"type": ""
													}
												],
												"src": "6130:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6389:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6399:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6411:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6407:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6399:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6487:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6500:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6511:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6496:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6496:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6435:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6435:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6361:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6373:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6384:4:3",
														"type": ""
													}
												],
												"src": "6283:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6689:296:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6699:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6711:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6722:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6699:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6787:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6800:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6811:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6796:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6735:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6735:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6868:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6881:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6892:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6877:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6877:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6824:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6824:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6950:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6963:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6974:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6959:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6906:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6906:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6645:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6657:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6665:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6673:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6684:4:3",
														"type": ""
													}
												],
												"src": "6527:458:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7051:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7061:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7076:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7070:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7061:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7092:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7029:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7037:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7045:5:3",
														"type": ""
													}
												],
												"src": "6991:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7208:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7254:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7256:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7256:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7256:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7229:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7238:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7225:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7225:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7221:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:32:3"
															},
															"nodeType": "YulIf",
															"src": "7218:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7347:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7362:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7366:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7391:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7434:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7445:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7430:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7430:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7454:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7401:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7391:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7178:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7189:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7201:6:3",
														"type": ""
													}
												],
												"src": "7134:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7639:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7649:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7661:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7657:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7649:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7729:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7753:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7685:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7685:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7810:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7823:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7834:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7766:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7766:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7892:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7848:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7848:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7848:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7595:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7607:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7615:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7623:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7634:4:3",
														"type": ""
													}
												],
												"src": "7485:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8059:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8069:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8081:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8092:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8077:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8069:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8149:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8162:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8173:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8158:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8158:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8105:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8105:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8105:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8230:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8254:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8186:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8186:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8186:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8023:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8035:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8043:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8054:4:3",
														"type": ""
													}
												],
												"src": "7933:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8299:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8316:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8319:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8413:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8416:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8406:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8437:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8440:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8271:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8502:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8512:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8535:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8517:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8512:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8546:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8569:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8551:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8551:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8546:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8593:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8595:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8595:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8595:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8587:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8590:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8584:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:8:3"
															},
															"nodeType": "YulIf",
															"src": "8581:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8625:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8637:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8640:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8488:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8491:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8497:4:3",
														"type": ""
													}
												],
												"src": "8457:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8698:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8708:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8731:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8713:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8713:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8708:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8742:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8765:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8747:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8742:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8905:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8907:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8907:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8907:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8826:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8833:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8901:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8829:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8823:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:81:3"
															},
															"nodeType": "YulIf",
															"src": "8820:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8937:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8948:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8951:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8937:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8685:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8688:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8694:3:3",
														"type": ""
													}
												],
												"src": "8654:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8993:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9010:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9013:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9003:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9003:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9003:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9107:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9110:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9100:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9100:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9131:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9134:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8965:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9193:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9203:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9226:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9208:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9203:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9237:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9260:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9242:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9237:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9284:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9286:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9286:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9286:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9281:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9274:9:3"
															},
															"nodeType": "YulIf",
															"src": "9271:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9316:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9325:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9328:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9321:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9321:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9316:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9182:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9185:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9191:1:3",
														"type": ""
													}
												],
												"src": "9151:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9390:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9400:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9423:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9405:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9400:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9434:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9457:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9439:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9439:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9434:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9632:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9634:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9634:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9634:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9544:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9537:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9537:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9530:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9530:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9552:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9559:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9627:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9555:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9549:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:105:3"
															},
															"nodeType": "YulIf",
															"src": "9523:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9664:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9679:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9682:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9675:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9664:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9373:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9376:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9382:7:3",
														"type": ""
													}
												],
												"src": "9342:348:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063c3c646741161004e578063c3c646741461014e578063d0e30db014610177578063dac3fad414610181578063fee3f7f9146101985761007b565b80631758d6f3146100805780633a23bf49146100ab57806394756aa7146100e857806397dedb1d14610111575b600080fd5b34801561008c57600080fd5b506100956101af565b6040516100a29190610e4f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610e9b565b6102a8565b6040516100df9190610e4f565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190610f26565b6104df565b005b34801561011d57600080fd5b5061013860048036038101906101339190610e9b565b61082b565b6040516101459190610e4f565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610fdc565b61093a565b005b61017f610a25565b005b34801561018d57600080fd5b50610196610a84565b005b3480156101a457600080fd5b506101ad610cd9565b005b60003373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611079565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102a05760045490506102a5565b600080fd5b90565b6000806102c2600454600354610dde90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161032091906110a8565b602060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036191906110d8565b905060006103788583610df490919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040991906110d8565b8111156104a25760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906110d8565b90505b60006104b982600154610e0a90919063ffffffff16565b905060006104d08286610dde90919063ffffffff16565b90508095505050505050919050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461053c57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105969190611164565b602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906110d8565b10156105e257600080fd5b60006105ed826102a8565b9050600061061a6103e861060c60025485610e2090919063ffffffff16565b610e0a90919063ffffffff16565b905061063181600454610df490919063ffffffff16565b60048190555061064a8183610dde90919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610692573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b81526004016106f09392919061117f565b6020604051808303816000875af115801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906111cb565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610773600454600354610dde90919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107cc91906110a8565b602060405180830381865afa1580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d91906110d8565b4260405161081d939291906111f8565b60405180910390a150505050565b600080610845600454600354610dde90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a391906110a8565b602060405180830381865afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e491906110d8565b905060006108fb8584610df490919063ffffffff16565b9050600061091482600154610e0a90919063ffffffff16565b9050600061092b8285610dde90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611079565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610a8257600080fd5b565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b90611079565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b7c573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3591906110a8565b602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7691906110d8565b6040518363ffffffff1660e01b8152600401610c9392919061122f565b6020604051808303816000875af1158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd691906111cb565b50565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090611079565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610dd3573d6000803e3d6000fd5b506000600481905550565b60008183610dec9190611287565b905092915050565b60008183610e0291906112bb565b905092915050565b60008183610e189190611340565b905092915050565b60008183610e2e9190611371565b905092915050565b6000819050919050565b610e4981610e36565b82525050565b6000602082019050610e646000830184610e40565b92915050565b600080fd5b610e7881610e36565b8114610e8357600080fd5b50565b600081359050610e9581610e6f565b92915050565b600060208284031215610eb157610eb0610e6a565b5b6000610ebf84828501610e86565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef382610ec8565b9050919050565b610f0381610ee8565b8114610f0e57600080fd5b50565b600081359050610f2081610efa565b92915050565b60008060408385031215610f3d57610f3c610e6a565b5b6000610f4b85828601610f11565b9250506020610f5c85828601610e86565b9150509250929050565b6000610f7182610ec8565b9050919050565b610f8181610f66565b8114610f8c57600080fd5b50565b600081359050610f9e81610f78565b92915050565b60008115159050919050565b610fb981610fa4565b8114610fc457600080fd5b50565b600081359050610fd681610fb0565b92915050565b60008060408385031215610ff357610ff2610e6a565b5b600061100185828601610f8f565b925050602061101285828601610fc7565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061106360208361101c565b915061106e8261102d565b602082019050919050565b6000602082019050818103600083015261109281611056565b9050919050565b6110a281610f66565b82525050565b60006020820190506110bd6000830184611099565b92915050565b6000815190506110d281610e6f565b92915050565b6000602082840312156110ee576110ed610e6a565b5b60006110fc848285016110c3565b91505092915050565b6000819050919050565b600061112a61112561112084610ec8565b611105565b610ec8565b9050919050565b600061113c8261110f565b9050919050565b600061114e82611131565b9050919050565b61115e81611143565b82525050565b60006020820190506111796000830184611155565b92915050565b60006060820190506111946000830186611155565b6111a16020830185611099565b6111ae6040830184610e40565b949350505050565b6000815190506111c581610fb0565b92915050565b6000602082840312156111e1576111e0610e6a565b5b60006111ef848285016111b6565b91505092915050565b600060608201905061120d6000830186610e40565b61121a6020830185610e40565b6112276040830184610e40565b949350505050565b60006040820190506112446000830185611099565b6112516020830184610e40565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129282610e36565b915061129d83610e36565b9250828210156112b0576112af611258565b5b828203905092915050565b60006112c682610e36565b91506112d183610e36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561130657611305611258565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061134b82610e36565b915061135683610e36565b92508261136657611365611311565b5b828204905092915050565b600061137c82610e36565b915061138783610e36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c0576113bf611258565b5b82820290509291505056fea2646970667358221220d130d842492cb3e4571eb49597b92a0d80e868c7d1581100a5189cfe0786ba5d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x198 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1758D6F3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xA25 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0xA84 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A0 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C2 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 DUP6 DUP4 PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 DUP3 PUSH1 0x1 SLOAD PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D0 DUP3 DUP7 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST LT ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61A PUSH2 0x3E8 PUSH2 0x60C PUSH1 0x2 SLOAD DUP6 PUSH2 0xE20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x631 DUP2 PUSH1 0x4 SLOAD PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x64A DUP2 DUP4 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0x773 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x81D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x845 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FB DUP6 DUP5 PUSH2 0xDF4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x914 DUP3 PUSH1 0x1 SLOAD PUSH2 0xE0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x92B DUP3 DUP6 PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP3 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE49 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE95 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBF DUP5 DUP3 DUP6 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF3 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF03 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF20 DUP2 PUSH2 0xEFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP6 DUP3 DUP7 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF5C DUP6 DUP3 DUP7 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9E DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB9 DUP2 PUSH2 0xFA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD6 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP6 DUP3 DUP7 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1012 DUP6 DUP3 DUP7 ADD PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1063 PUSH1 0x20 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0x106E DUP3 PUSH2 0x102D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1092 DUP2 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A2 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10D2 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FC DUP5 DUP3 DUP6 ADD PUSH2 0x10C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112A PUSH2 0x1125 PUSH2 0x1120 DUP5 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114E DUP3 PUSH2 0x1131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115E DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1194 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x11A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x11AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C5 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP5 DUP3 DUP6 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x120D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1244 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x1251 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1292 DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x129D DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x12B0 JUMPI PUSH2 0x12AF PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C6 DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D1 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1356 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1311 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137C DUP3 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1387 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13BF PUSH2 0x1258 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 ADDRESS 0xD8 TIMESTAMP 0x49 0x2C 0xB3 0xE4 JUMPI 0x1E 0xB4 SWAP6 SWAP8 0xB9 0x2A 0xD DUP1 0xE8 PUSH9 0xC7D1581100A5189CFE SMOD DUP7 0xBA 0x5D PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "183:2773:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:156;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1659:463;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:607;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2130:360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;818:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;928:108;;;:::i;:::-;;2503:162;;;;;;;;;;;;;:::i;:::-;;2673:98;;;;;;;;;;;;;:::i;:::-;;2777:156;2832:7;745:10;736:19;;:5;;;;;;;;;;;:19;;;728:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2859:10:::1;2850:19;;:5;;;;;;;;;;;:19;;::::0;2847:81:::1;;2886:5;;2879:12;;;;2847:81;2912:8;::::0;::::1;803:1;2777:156:::0;:::o;1659:463::-;1715:7;1730:19;1752:23;1769:5;;1752:12;;:16;;:23;;;;:::i;:::-;1730:45;;1782:19;1804:5;;;;;;;;;;;:15;;;1828:4;1804:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1782:52;;1845:20;1868:27;1884:10;1868:11;:15;;:27;;;;:::i;:::-;1845:50;;1922:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1907:12;:34;1904:89;;;1966:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:34;;1904:89;2001:20;2024:19;2030:12;2024:1;;:5;;:19;;;;:::i;:::-;2001:42;;2050:14;2067:29;2083:12;2067:11;:15;;:29;;;;:::i;:::-;2050:46;;2110:6;2103:13;;;;;;;1659:463;;;:::o;1044:607::-;1156:4;1129:31;;:11;:23;1141:10;1129:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1121:40;;;;;;1205:10;1178:5;;;;;;;;;;:15;;;1194:6;1178:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1170:46;;;;;;1227:18;1248:19;1256:10;1248:7;:19::i;:::-;1227:40;;1276:12;1291:29;1315:4;1291:19;1306:3;;1291:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1276:44;;1337:15;1347:4;1337:5;;:9;;:15;;;;:::i;:::-;1329:5;:23;;;;1374:20;1389:4;1374:10;:14;;:20;;;;:::i;:::-;1361:33;;1409:6;:15;;:27;1425:10;1409:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:5;;;;;;;;;;:18;;;1464:6;1479:4;1485:10;1445:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1525:21;1510:12;:36;;;;1564:77;1570:23;1587:5;;1570:12;;:16;;:23;;;;:::i;:::-;1594:5;;;;;;;;;;:15;;;1618:4;1594:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1625:15;1564:77;;;;;;;;:::i;:::-;;;;;;;;1112:539;;1044:607;;:::o;2130:360::-;2186:7;2201:19;2223:23;2240:5;;2223:12;;:16;;:23;;;;:::i;:::-;2201:45;;2253:19;2275:5;;;;;;;;;;;:15;;;2299:4;2275:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2253:52;;2312:20;2335:27;2351:10;2335:11;:15;;:27;;;;:::i;:::-;2312:50;;2369:20;2392:19;2398:12;2392:1;;:5;;:19;;;;:::i;:::-;2369:42;;2418:14;2435:29;2451:12;2435:11;:15;;:29;;;;:::i;:::-;2418:46;;2478:6;2471:13;;;;;;;2130:360;;;:::o;818:102::-;745:10;736:19;;:5;;;;;;;;;;;:19;;;728:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;909:5:::1;889:11;:17;901:4;889:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;818:102:::0;;:::o;928:108::-;1006:4;979:31;;:11;:23;991:10;979:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;971:40;;;;;;928:108::o;2503:162::-;745:10;736:19;;:5;;;;;;;;;;;:19;;;728:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2562:5:::1;;;;;;;;;;;2554:23;;:46;2578:21;2554:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2607:5;::::0;::::1;;;;;;;;:14;;;2622:5;;;;;;;;;;;2628;::::0;::::1;;;;;;;;:15;;;2652:4;2628:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2607:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2503:162::o:0;2673:98::-;745:10;736:19;;:5;;;;;;;;;;;:19;;;728:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2726:5:::1;;;;;;;;;;;2718:23;;:30;2742:5;;2718:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2763:1;2755:5;:9;;;;2673:98::o:0;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:104::-;1554:7;1583:24;1601:5;1583:24;:::i;:::-;1572:35;;1509:104;;;:::o;1619:138::-;1700:32;1726:5;1700:32;:::i;:::-;1693:5;1690:43;1680:71;;1747:1;1744;1737:12;1680:71;1619:138;:::o;1763:155::-;1817:5;1855:6;1842:20;1833:29;;1871:41;1906:5;1871:41;:::i;:::-;1763:155;;;;:::o;1924:490::-;2000:6;2008;2057:2;2045:9;2036:7;2032:23;2028:32;2025:119;;;2063:79;;:::i;:::-;2025:119;2183:1;2208:61;2261:7;2252:6;2241:9;2237:22;2208:61;:::i;:::-;2198:71;;2154:125;2318:2;2344:53;2389:7;2380:6;2369:9;2365:22;2344:53;:::i;:::-;2334:63;;2289:118;1924:490;;;;;:::o;2420:96::-;2457:7;2486:24;2504:5;2486:24;:::i;:::-;2475:35;;2420:96;;;:::o;2522:122::-;2595:24;2613:5;2595:24;:::i;:::-;2588:5;2585:35;2575:63;;2634:1;2631;2624:12;2575:63;2522:122;:::o;2650:139::-;2696:5;2734:6;2721:20;2712:29;;2750:33;2777:5;2750:33;:::i;:::-;2650:139;;;;:::o;2795:90::-;2829:7;2872:5;2865:13;2858:21;2847:32;;2795:90;;;:::o;2891:116::-;2961:21;2976:5;2961:21;:::i;:::-;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;2891:116;:::o;3013:133::-;3056:5;3094:6;3081:20;3072:29;;3110:30;3134:5;3110:30;:::i;:::-;3013:133;;;;:::o;3152:468::-;3217:6;3225;3274:2;3262:9;3253:7;3249:23;3245:32;3242:119;;;3280:79;;:::i;:::-;3242:119;3400:1;3425:53;3470:7;3461:6;3450:9;3446:22;3425:53;:::i;:::-;3415:63;;3371:117;3527:2;3553:50;3595:7;3586:6;3575:9;3571:22;3553:50;:::i;:::-;3543:60;;3498:115;3152:468;;;;;:::o;3626:169::-;3710:11;3744:6;3739:3;3732:19;3784:4;3779:3;3775:14;3760:29;;3626:169;;;;:::o;3801:182::-;3941:34;3937:1;3929:6;3925:14;3918:58;3801:182;:::o;3989:366::-;4131:3;4152:67;4216:2;4211:3;4152:67;:::i;:::-;4145:74;;4228:93;4317:3;4228:93;:::i;:::-;4346:2;4341:3;4337:12;4330:19;;3989:366;;;:::o;4361:419::-;4527:4;4565:2;4554:9;4550:18;4542:26;;4614:9;4608:4;4604:20;4600:1;4589:9;4585:17;4578:47;4642:131;4768:4;4642:131;:::i;:::-;4634:139;;4361:419;;;:::o;4786:118::-;4873:24;4891:5;4873:24;:::i;:::-;4868:3;4861:37;4786:118;;:::o;4910:222::-;5003:4;5041:2;5030:9;5026:18;5018:26;;5054:71;5122:1;5111:9;5107:17;5098:6;5054:71;:::i;:::-;4910:222;;;;:::o;5138:143::-;5195:5;5226:6;5220:13;5211:22;;5242:33;5269:5;5242:33;:::i;:::-;5138:143;;;;:::o;5287:351::-;5357:6;5406:2;5394:9;5385:7;5381:23;5377:32;5374:119;;;5412:79;;:::i;:::-;5374:119;5532:1;5557:64;5613:7;5604:6;5593:9;5589:22;5557:64;:::i;:::-;5547:74;;5503:128;5287:351;;;;:::o;5644:60::-;5672:3;5693:5;5686:12;;5644:60;;;:::o;5710:142::-;5760:9;5793:53;5811:34;5820:24;5838:5;5820:24;:::i;:::-;5811:34;:::i;:::-;5793:53;:::i;:::-;5780:66;;5710:142;;;:::o;5858:126::-;5908:9;5941:37;5972:5;5941:37;:::i;:::-;5928:50;;5858:126;;;:::o;5990:134::-;6048:9;6081:37;6112:5;6081:37;:::i;:::-;6068:50;;5990:134;;;:::o;6130:147::-;6225:45;6264:5;6225:45;:::i;:::-;6220:3;6213:58;6130:147;;:::o;6283:238::-;6384:4;6422:2;6411:9;6407:18;6399:26;;6435:79;6511:1;6500:9;6496:17;6487:6;6435:79;:::i;:::-;6283:238;;;;:::o;6527:458::-;6684:4;6722:2;6711:9;6707:18;6699:26;;6735:79;6811:1;6800:9;6796:17;6787:6;6735:79;:::i;:::-;6824:72;6892:2;6881:9;6877:18;6868:6;6824:72;:::i;:::-;6906;6974:2;6963:9;6959:18;6950:6;6906:72;:::i;:::-;6527:458;;;;;;:::o;6991:137::-;7045:5;7076:6;7070:13;7061:22;;7092:30;7116:5;7092:30;:::i;:::-;6991:137;;;;:::o;7134:345::-;7201:6;7250:2;7238:9;7229:7;7225:23;7221:32;7218:119;;;7256:79;;:::i;:::-;7218:119;7376:1;7401:61;7454:7;7445:6;7434:9;7430:22;7401:61;:::i;:::-;7391:71;;7347:125;7134:345;;;;:::o;7485:442::-;7634:4;7672:2;7661:9;7657:18;7649:26;;7685:71;7753:1;7742:9;7738:17;7729:6;7685:71;:::i;:::-;7766:72;7834:2;7823:9;7819:18;7810:6;7766:72;:::i;:::-;7848;7916:2;7905:9;7901:18;7892:6;7848:72;:::i;:::-;7485:442;;;;;;:::o;7933:332::-;8054:4;8092:2;8081:9;8077:18;8069:26;;8105:71;8173:1;8162:9;8158:17;8149:6;8105:71;:::i;:::-;8186:72;8254:2;8243:9;8239:18;8230:6;8186:72;:::i;:::-;7933:332;;;;;:::o;8271:180::-;8319:77;8316:1;8309:88;8416:4;8413:1;8406:15;8440:4;8437:1;8430:15;8457:191;8497:4;8517:20;8535:1;8517:20;:::i;:::-;8512:25;;8551:20;8569:1;8551:20;:::i;:::-;8546:25;;8590:1;8587;8584:8;8581:34;;;8595:18;;:::i;:::-;8581:34;8640:1;8637;8633:9;8625:17;;8457:191;;;;:::o;8654:305::-;8694:3;8713:20;8731:1;8713:20;:::i;:::-;8708:25;;8747:20;8765:1;8747:20;:::i;:::-;8742:25;;8901:1;8833:66;8829:74;8826:1;8823:81;8820:107;;;8907:18;;:::i;:::-;8820:107;8951:1;8948;8944:9;8937:16;;8654:305;;;;:::o;8965:180::-;9013:77;9010:1;9003:88;9110:4;9107:1;9100:15;9134:4;9131:1;9124:15;9151:185;9191:1;9208:20;9226:1;9208:20;:::i;:::-;9203:25;;9242:20;9260:1;9242:20;:::i;:::-;9237:25;;9281:1;9271:35;;9286:18;;:::i;:::-;9271:35;9328:1;9325;9321:9;9316:14;;9151:185;;;;:::o;9342:348::-;9382:7;9405:20;9423:1;9405:20;:::i;:::-;9400:25;;9439:20;9457:1;9439:20;:::i;:::-;9434:25;;9627:1;9559:66;9555:74;9552:1;9549:81;9544:1;9537:9;9530:17;9526:105;9523:131;;;9634:18;;:::i;:::-;9523:131;9682:1;9679;9675:9;9664:20;;9342:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1024200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"admin_fee()": "infinite",
								"deposit()": "2402",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27161",
								"viewAdminFee()": "6789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 261,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "58D3A4CB28F30D9C87E8F79544F98F358CDE6227"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 622,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 622,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 622,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 622,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 545,
									"end": 555,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 537,
									"end": 542,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 537,
									"end": 542,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 537,
									"end": 555,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 577,
									"end": 586,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 562,
									"end": 574,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 562,
									"end": 586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 562,
									"end": 586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 562,
									"end": 586,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 562,
									"end": 586,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 597,
									"end": 599,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 594,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 599,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 612,
									"end": 616,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 606,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 606,
									"end": 616,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 606,
									"end": 616,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 606,
									"end": 616,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 606,
									"end": 616,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 486,
									"end": 622,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2956,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d130d842492cb3e4571eb49597b92a0d80e868c7d1581100a5189cfe0786ba5d64736f6c634300080f0033",
									".code": [
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "FEE3F7F9"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "1758D6F3"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 2956,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2777,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2777,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1659,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1659,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1044,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1044,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2130,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2130,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2130,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 818,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 818,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 928,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2503,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2673,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 728,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2847,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2886,
											"end": 2891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2879,
											"end": 2891,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2847,
											"end": 2928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2847,
											"end": 2928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 803,
											"end": 804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 803,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1749,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1752,
											"end": 1764,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1752,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1752,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1819,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1804,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1804,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1879,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1868,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1922,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1922,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1941,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1904,
											"end": 1993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1983,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1966,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1904,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2024,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2083,
											"end": 2095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2078,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2067,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1129,
											"end": 1160,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1160,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1160,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1160,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1160,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1121,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1194,
											"end": 1200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1178,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1178,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1178,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1170,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1315,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1291,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1291,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1347,
											"end": 1351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1337,
											"end": 1346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1337,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1334,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1425,
											"end": 1435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1483,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1445,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1445,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1510,
											"end": 1546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1546,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6"
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1570,
											"end": 1586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1594,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1594,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1594,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1640,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1564,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2223,
											"end": 2235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2223,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2299,
											"end": 2303,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2275,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2275,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2275,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2346,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2335,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2398,
											"end": 2410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2451,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 818,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 728,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 905,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 889,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 914,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 928,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1001,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 979,
											"end": 1002,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 971,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 928,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2503,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 728,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2578,
											"end": 2599,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2600,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2633,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2652,
											"end": 2656,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2628,
											"end": 2658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2628,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2673,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 745,
											"end": 755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 755,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 728,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2718,
											"end": 2741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2742,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2755,
											"end": 2764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2764,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2764,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1583,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1700,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1871,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2063,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2261,
											"end": 2268,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2208,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2344,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2486,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2595,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2620,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2750,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2878,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2961,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2983,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3101,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3110,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3272,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3280,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3425,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3553,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3775,
											"end": 3789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 3975,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4152,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4152,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4317,
											"end": 4320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4228,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4228,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4768,
											"end": 4772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4642,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4642,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4873,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4861,
											"end": 4898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4786,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5054,
											"end": 5125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 5132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5269,
											"end": 5274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5242,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 5275,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5242,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5404,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5409,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5374,
											"end": 5493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5412,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5412,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5412,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5412,
											"end": 5491,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5412,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5374,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5613,
											"end": 5620,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5557,
											"end": 5621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5287,
											"end": 5638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5704,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5644,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5698,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5852,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5710,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5811,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5820,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5811,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5845,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5811,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5793,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5908,
											"end": 5917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5972,
											"end": 5977,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5941,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 5978,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5941,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5928,
											"end": 5978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5928,
											"end": 5978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6124,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5990,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6112,
											"end": 6117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6081,
											"end": 6118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6118,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6081,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6277,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6130,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6264,
											"end": 6269,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6225,
											"end": 6270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6270,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6225,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6213,
											"end": 6271,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6399,
											"end": 6425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6399,
											"end": 6425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6500,
											"end": 6509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6487,
											"end": 6493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6435,
											"end": 6514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6514,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6435,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6724,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6725,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6699,
											"end": 6725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6699,
											"end": 6725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6809,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6735,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6824,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6824,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6824,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6824,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6824,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 6977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6950,
											"end": 6956,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6906,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6978,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6906,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7083,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7116,
											"end": 7121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7092,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7252,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7229,
											"end": 7236,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7248,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7221,
											"end": 7253,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7337,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7218,
											"end": 7337,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7256,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7256,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7256,
											"end": 7335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7256,
											"end": 7335,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7256,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7218,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7454,
											"end": 7461,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7401,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7401,
											"end": 7462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7401,
											"end": 7462,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7401,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7134,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7661,
											"end": 7670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7657,
											"end": 7675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7675,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7738,
											"end": 7755,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7729,
											"end": 7735,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7685,
											"end": 7756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7756,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7685,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7816,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7766,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7838,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7766,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7916,
											"end": 7918,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7892,
											"end": 7898,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7848,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7848,
											"end": 7920,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7848,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8081,
											"end": 8090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8171,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8105,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8176,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8105,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8186,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8254,
											"end": 8256,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8186,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8186,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8186,
											"end": 8258,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8186,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 8265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8271,
											"end": 8451,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8271,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8396,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8309,
											"end": 8397,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8406,
											"end": 8421,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8444,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8535,
											"end": 8536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8517,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8569,
											"end": 8570,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8551,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8546,
											"end": 8571,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8546,
											"end": 8571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 8591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8587,
											"end": 8588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8584,
											"end": 8592,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8615,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8581,
											"end": 8615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8595,
											"end": 8613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8615,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8581,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 8641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8713,
											"end": 8733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8733,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 8713,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8708,
											"end": 8733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8708,
											"end": 8733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8747,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8747,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8747,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8747,
											"end": 8767,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8747,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 8902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8833,
											"end": 8899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8829,
											"end": 8903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8904,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 8820,
											"end": 8927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8907,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8927,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 8820,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8948,
											"end": 8949,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8944,
											"end": 8953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8937,
											"end": 8953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8937,
											"end": 8953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8965,
											"end": 9145,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8965,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9090,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9010,
											"end": 9011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9100,
											"end": 9115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9134,
											"end": 9138,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9226,
											"end": 9227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9208,
											"end": 9228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9228,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9208,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9203,
											"end": 9228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9203,
											"end": 9228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9260,
											"end": 9261,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9242,
											"end": 9262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9262,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9242,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9237,
											"end": 9262,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9237,
											"end": 9262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9271,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 9271,
											"end": 9306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9286,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9271,
											"end": 9306,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 9271,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9316,
											"end": 9330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9316,
											"end": 9330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9382,
											"end": 9389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9405,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9425,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9405,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9400,
											"end": 9425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9400,
											"end": 9425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9457,
											"end": 9458,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9439,
											"end": 9459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9434,
											"end": 9459,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9434,
											"end": 9459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9555,
											"end": 9629,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9549,
											"end": 9630,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9544,
											"end": 9545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9537,
											"end": 9546,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9530,
											"end": 9547,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9634,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9634,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 9683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 9680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9664,
											"end": 9684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9664,
											"end": 9684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"admin_fee()": "fee3f7f9",
							"deposit()": "d0e30db0",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"viewAdminFee()": "1758d6f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dcf_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"price\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin_fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewAdminFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0x03d3d0a95ce3ab982854a2f463c799749a607ac85b93f1147c075f465324a314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81a84d33e12cffafc6d6cf995b69ea54fc6593ab65bb663375dfbf497fdebc4a\",\"dweb:/ipfs/QmVbTG3s71KiVXSaLk6HTYJxdhJ7k5nhg9QxmhTV8Er3AY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 406,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "fee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 408,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "last_balance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 410,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "admin",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 446,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 450,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "treasury",
							"nameLocation": "192:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "212:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "206:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "225:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "245:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "238:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "238:6:2"
										},
										"referencedDeclaration": 77,
										"src": "238:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835386433613463623238663330643943383745384637393534346639384633353863646536323237",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "261:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x58d3a4cb28f30d9C87E8F79544f98F358cde6227"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "254:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "254:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "329:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "313:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 406,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "351:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "335:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "last_balance",
									"nameLocation": "375:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "359:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 407,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "408:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "392:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6",
									"id": 418,
									"name": "price",
									"nameLocation": "424:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_pool",
												"nameLocation": "435:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "430:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "dcf_pool",
												"nameLocation": "450:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "465:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "460:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:46:2"
									},
									"src": "418:58:2"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "530:92:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "537:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 426,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "545:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "545:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "537:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "537:18:2"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "562:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 431,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "577:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "577:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "562:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "562:24:2"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "593:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "597:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "593:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "593:6:2"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "606:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "612:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "606:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "606:10:2"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "506:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "498:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "518:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "510:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:26:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:0:2"
									},
									"scope": 767,
									"src": "486:136:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "636:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "628:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "678:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "646:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 449,
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "646:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 448,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "665:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "717:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 453,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "736:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 454,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "745:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "745:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "736:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "757:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "728:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "728:64:2"
											},
											{
												"id": 460,
												"nodeType": "PlaceholderStatement",
												"src": "803:1:2"
											}
										]
									},
									"id": 462,
									"name": "onlyOwner",
									"nameLocation": "705:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:2"
									},
									"src": "696:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "880:40:2",
										"statements": [
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 471,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "889:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 473,
														"indexExpression": {
															"id": 472,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "901:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "889:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 474,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "909:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "889:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "889:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 468,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "871:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "871:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "827:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "845:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "837:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "856:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:26:2"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:2"
									},
									"scope": 767,
									"src": "818:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "962:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 482,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "979:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "991:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "991:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "979:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1006:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "979:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "971:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "971:40:2"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "937:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:2"
									},
									"scope": 767,
									"src": "928:108:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "1112:539:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 499,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1129:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 502,
																"indexExpression": {
																	"expression": {
																		"id": 500,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1141:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1141:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1129:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1156:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1129:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1121:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "1194:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 508,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "1178:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1178:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1178:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 512,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1205:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1178:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1170:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "1170:46:2"
											},
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1235:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "1227:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1227:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"arguments": [
														{
															"id": 519,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "1256:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "1248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1227:40:2"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1284:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "1276:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 526,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1306:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 524,
																	"name": "eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "1291:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1291:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1291:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1291:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1291:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1276:44:2"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 532,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1329:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 535,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "1347:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 533,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1337:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1337:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1337:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1329:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1329:23:2"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1361:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 542,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "1389:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 540,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "1374:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1374:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1374:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1361:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "1361:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1425:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 546,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1409:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1409:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "1409:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1464:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 558,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1479:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																],
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1471:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 556,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1471:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1471:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "1485:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 552,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1445:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1445:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "1445:51:2"
											},
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1510:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 566,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1533:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1525:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1525:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1510:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1510:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 574,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "1587:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 572,
																	"name": "last_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "1570:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "1570:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1570:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 580,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1618:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$767",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$767",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1610:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 578,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1610:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1610:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 576,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "1594:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1594:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1594:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 583,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1625:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1625:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1564:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "EmitStatement",
												"src": "1559:82:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1053:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1076:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1060:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1092:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1084:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:44:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:0:2"
									},
									"scope": 767,
									"src": "1044:607:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "1723:399:2",
										"statements": [
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1738:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "1730:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"id": 599,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1769:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 597,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1752:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1752:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1730:45:2"
											},
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1790:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "1782:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1782:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 608,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1828:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1820:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1820:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1820:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 604,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1804:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1804:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1804:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1782:52:2"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1853:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "1845:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 616,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "1884:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 614,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "1868:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1868:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1868:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1845:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1907:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 620,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "1922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1922:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1922:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "1904:89:2",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "1942:51:2",
													"statements": [
														{
															"expression": {
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 624,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "1951:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 625,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1966:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "1966:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1966:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1951:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 629,
															"nodeType": "ExpressionStatement",
															"src": "1951:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2009:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "2001:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2001:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [
														{
															"id": 636,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2030:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 634,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2024:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2024:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2001:42:2"
											},
											{
												"assignments": [
													640
												],
												"declarations": [
													{
														"constant": false,
														"id": 640,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2058:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "2050:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 639,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2050:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"arguments": [
														{
															"id": 643,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2083:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 641,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "2067:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2067:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2050:46:2"
											},
											{
												"expression": {
													"id": 646,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 640,
													"src": "2110:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 594,
												"id": 647,
												"nodeType": "Return",
												"src": "2103:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "1668:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1684:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1676:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:20:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1715:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:9:2"
									},
									"scope": 767,
									"src": "1659:463:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "2194:296:2",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "2209:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "2201:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2240:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 658,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2223:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2223:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2223:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2201:45:2"
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2261:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "2253:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2253:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 669,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2299:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$767",
																		"typeString": "contract treasury"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2291:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2291:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2291:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 665,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2275:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2275:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2253:52:2"
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2320:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "2312:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2312:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "2351:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 675,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2335:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "2335:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2312:50:2"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "2377:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "2369:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"arguments": [
														{
															"id": 684,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "2398:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 682,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2392:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2392:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2392:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2369:42:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2426:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "2418:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [
														{
															"id": 691,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "2451:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 689,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "2435:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2435:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2435:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2418:46:2"
											},
											{
												"expression": {
													"id": 694,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "2478:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 695,
												"nodeType": "Return",
												"src": "2471:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "2139:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "2155:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2147:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:20:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2186:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:9:2"
									},
									"scope": 767,
									"src": "2130:360:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2547:118:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 709,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2586:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$767",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$767",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2578:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 707,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2578:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2578:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2578:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 704,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "2562:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2554:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 702,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2554:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2554:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2554:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2554:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2622:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 722,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2652:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$767",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$767",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2644:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2644:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2644:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2628:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2628:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2628:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 714,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2607:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2607:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "2607:52:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 699,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2538:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2538:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "2512:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2527:2:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2547:0:2"
									},
									"scope": 767,
									"src": "2503:162:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "2711:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2742:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 735,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "2726:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2718:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2718:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2718:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2718:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "2718:30:2"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 741,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "2755:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2763:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2755:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2755:9:2"
											}
										]
									},
									"functionSelector": "fee3f7f9",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2702:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2702:9:2"
										}
									],
									"name": "admin_fee",
									"nameLocation": "2682:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2691:2:2"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2711:0:2"
									},
									"scope": 767,
									"src": "2673:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "2840:93:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2850:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 754,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2859:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2859:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2850:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "2903:25:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 760,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2912:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2912:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 762,
															"nodeType": "ExpressionStatement",
															"src": "2912:8:2"
														}
													]
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "2847:81:2",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "2870:29:2",
													"statements": [
														{
															"expression": {
																"id": 757,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "2886:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 752,
															"id": 758,
															"nodeType": "Return",
															"src": "2879:12:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1758d6f3",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 749,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 748,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2809:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2809:9:2"
										}
									],
									"name": "viewAdminFee",
									"nameLocation": "2786:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:2:2"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2832:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:9:2"
									},
									"scope": 767,
									"src": "2777:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "183:2773:2",
							"usedErrors": []
						}
					],
					"src": "33:2923:2"
				},
				"id": 2
			}
		}
	}
}