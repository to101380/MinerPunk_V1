{
	"id": "e95aa9d087291d3fe68877c100bdb784",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227);\r\n\r\n\r\n  uint256 private K;\r\n  uint256 private fee;\r\n  uint256 private last_balance;\r\n  uint256 private admin;\r\n  event price(uint eth_pool, uint dcf_pool, uint timestamp);\r\n\r\n\r\n  \r\n\r\n  constructor(uint256 _k, uint256 _fee)payable{\r\n    owner = msg.sender;\r\n    last_balance = msg.value;\r\n    K = _k;\r\n    fee = _fee;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function deposit(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n\r\n      uint256 _fee = msg.value.mul(fee).div(1000);      \r\n      admin = admin.add(_fee);\r\n      uint256 eth_amount = msg.value.sub(_fee);\r\n\r\n      uint256 dcf_amount = ETH_DCF(eth_amount);      \r\n      dcoff.transfer(subscriber,dcf_amount);  \r\n\r\n      last_balance = address(this).balance;    \r\n      emit price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp);          \r\n  }\r\n\r\n\r\n  function market(address payable seller, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(seller) >= dcf_amount);\r\n\r\n      uint256 eth_amount = DCF_ETH(dcf_amount);\r\n      uint256 _fee = eth_amount.mul(fee).div(1000);\r\n      admin = admin.add(_fee);\r\n      eth_amount = eth_amount.sub(_fee);\r\n    \r\n      seller.transfer(eth_amount);\r\n      dcoff.transferFrom(seller,address(this),dcf_amount);   \r\n\r\n      last_balance = address(this).balance;    \r\n      emit price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp);    \r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n    dcoff.transfer(owner,dcoff.balanceOf(address(this)));\r\n  }\r\n\r\n\r\n  function admin_fee()external onlyOwner{\r\n    payable(owner).transfer(admin);\r\n    admin = 0; \r\n  }\r\n\r\n  function viewAdminFee()external onlyOwner view returns(uint256){\r\n    if(owner == msg.sender){\r\n      return admin;\r\n    }else{\r\n      revert();\r\n    }\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dcf_pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "price",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin_fee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewAdminFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":183:3361  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":261:303  0x58d3a4cb28f30d9C87E8F79544f98F358cde6227 */\n  0x58d3a4cb28f30d9c87e8f79544f98f358cde6227\n    /* \"Dcoffer/treasury.sol\":238:304  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":490:626  constructor(uint256 _k, uint256 _fee)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":549:559  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":541:546  owner */\n  0x05\n  0x00\n    /* \"Dcoffer/treasury.sol\":541:559  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":581:590  msg.value */\n  callvalue\n    /* \"Dcoffer/treasury.sol\":566:578  last_balance */\n  0x03\n    /* \"Dcoffer/treasury.sol\":566:590  last_balance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":601:603  _k */\n  dup2\n    /* \"Dcoffer/treasury.sol\":597:598  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":597:603  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":616:620  _fee */\n  dup1\n    /* \"Dcoffer/treasury.sol\":610:613  fee */\n  0x02\n    /* \"Dcoffer/treasury.sol\":610:620  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":490:626  constructor(uint256 _k, uint256 _fee)payable{... */\n  pop\n  pop\n    /* \"Dcoffer/treasury.sol\":183:3361  contract treasury {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_2:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":798:917   */\ntag_23:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_25\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_26\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":183:3361  contract treasury {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":183:3361  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc3c64674\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf340fa01\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfee3f7f9\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x1758d6f3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3a23bf49\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":3182:3338  function viewAdminFee()external onlyOwner view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":2064:2527  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":1449:2056  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Dcoffer/treasury.sol\":2535:2895  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":826:928  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Dcoffer/treasury.sol\":2908:3070  function Warning_protect()external onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Dcoffer/treasury.sol\":936:1441  function deposit(address subscriber)external payable{... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Dcoffer/treasury.sol\":3078:3176  function admin_fee()external onlyOwner{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Dcoffer/treasury.sol\":3182:3338  function viewAdminFee()external onlyOwner view returns(uint256){... */\n    tag_13:\n        /* \"Dcoffer/treasury.sol\":3237:3244  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":749:759  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:745  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":732:796  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"Dcoffer/treasury.sol\":3264:3274  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":3255:3274  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3255:3260  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3255:3274  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/treasury.sol\":3252:3333  if(owner == msg.sender){... */\n      tag_52\n      jumpi\n        /* \"Dcoffer/treasury.sol\":3291:3296  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":3284:3296  return admin */\n      swap1\n      pop\n      jump(tag_51)\n        /* \"Dcoffer/treasury.sol\":3252:3333  if(owner == msg.sender){... */\n    tag_52:\n        /* \"Dcoffer/treasury.sol\":3317:3325  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":807:808  _ */\n    tag_51:\n        /* \"Dcoffer/treasury.sol\":3182:3338  function viewAdminFee()external onlyOwner view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2064:2527  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_20:\n        /* \"Dcoffer/treasury.sol\":2120:2127  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2135:2154  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2157:2180  last_balance.sub(admin) */\n      tag_55\n        /* \"Dcoffer/treasury.sol\":2174:2179  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2157:2169  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":2157:2173  last_balance.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":2157:2180  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"Dcoffer/treasury.sol\":2135:2180  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2187:2206  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2209:2214  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2209:2224  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2233:2237  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2209:2239  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"Dcoffer/treasury.sol\":2187:2239  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2250:2270  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2273:2300  _dcf_amount.add(dcf_amount) */\n      tag_63\n        /* \"Dcoffer/treasury.sol\":2289:2299  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2273:2284  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":2273:2288  _dcf_amount.add */\n      tag_64\n      swap1\n        /* \"Dcoffer/treasury.sol\":2273:2300  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"Dcoffer/treasury.sol\":2250:2300  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2327:2332  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2327:2344  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":2327:2346  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_67:\n        /* \"Dcoffer/treasury.sol\":2312:2324  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":2312:2346  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":2309:2398  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_68\n      jumpi\n        /* \"Dcoffer/treasury.sol\":2371:2376  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2371:2388  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":2371:2390  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_71:\n        /* \"Dcoffer/treasury.sol\":2356:2390  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2309:2398  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_68:\n        /* \"Dcoffer/treasury.sol\":2406:2426  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2429:2448  K.div(Variable_dcf) */\n      tag_72\n        /* \"Dcoffer/treasury.sol\":2435:2447  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2429:2430  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2429:2434  K.div */\n      tag_73\n      swap1\n        /* \"Dcoffer/treasury.sol\":2429:2448  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Dcoffer/treasury.sol\":2406:2448  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2455:2469  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2472:2501  _eth_amount.sub(Variable_eth) */\n      tag_74\n        /* \"Dcoffer/treasury.sol\":2488:2500  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2472:2483  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":2472:2487  _eth_amount.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":2472:2501  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"Dcoffer/treasury.sol\":2455:2501  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2515:2521  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2508:2521  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":2064:2527  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1449:2056  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_26:\n        /* \"Dcoffer/treasury.sol\":1561:1565  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1534:1565  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1534:1545  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":1534:1557  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1546:1556  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1534:1557  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1534:1565  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":1526:1566  require(RouterAdmin[msg.sender] == true) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"Dcoffer/treasury.sol\":1610:1620  dcf_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1583:1588  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1583:1598  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1599:1605  seller */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1583:1606  dcoff.balanceOf(seller) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_81:\n        /* \"Dcoffer/treasury.sol\":1583:1620  dcoff.balanceOf(seller) >= dcf_amount */\n      lt\n      iszero\n        /* \"Dcoffer/treasury.sol\":1575:1621  require(dcoff.balanceOf(seller) >= dcf_amount) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Dcoffer/treasury.sol\":1632:1650  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1653:1672  DCF_ETH(dcf_amount) */\n      tag_83\n        /* \"Dcoffer/treasury.sol\":1661:1671  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1653:1660  DCF_ETH */\n      tag_20\n        /* \"Dcoffer/treasury.sol\":1653:1672  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_83:\n        /* \"Dcoffer/treasury.sol\":1632:1672  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1681:1693  uint256 _fee */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1696:1725  eth_amount.mul(fee).div(1000) */\n      tag_84\n        /* \"Dcoffer/treasury.sol\":1720:1724  1000 */\n      0x03e8\n        /* \"Dcoffer/treasury.sol\":1696:1715  eth_amount.mul(fee) */\n      tag_85\n        /* \"Dcoffer/treasury.sol\":1711:1714  fee */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1696:1706  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1696:1710  eth_amount.mul */\n      tag_86\n      swap1\n        /* \"Dcoffer/treasury.sol\":1696:1715  eth_amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"Dcoffer/treasury.sol\":1696:1719  eth_amount.mul(fee).div */\n      tag_73\n      swap1\n        /* \"Dcoffer/treasury.sol\":1696:1725  eth_amount.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"Dcoffer/treasury.sol\":1681:1725  uint256 _fee = eth_amount.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1742:1757  admin.add(_fee) */\n      tag_87\n        /* \"Dcoffer/treasury.sol\":1752:1756  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1742:1747  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1742:1751  admin.add */\n      tag_64\n      swap1\n        /* \"Dcoffer/treasury.sol\":1742:1757  admin.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"Dcoffer/treasury.sol\":1734:1739  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":1734:1757  admin = admin.add(_fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1779:1799  eth_amount.sub(_fee) */\n      tag_88\n        /* \"Dcoffer/treasury.sol\":1794:1798  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1779:1789  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1779:1793  eth_amount.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":1779:1799  eth_amount.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"Dcoffer/treasury.sol\":1766:1799  eth_amount = eth_amount.sub(_fee) */\n      swap2\n      pop\n        /* \"Dcoffer/treasury.sol\":1814:1820  seller */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1814:1829  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1814:1841  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1830:1840  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1814:1841  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n        /* \"Dcoffer/treasury.sol\":1850:1855  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1850:1868  dcoff.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Dcoffer/treasury.sol\":1869:1875  seller */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1884:1888  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1890:1900  dcf_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1850:1901  dcoff.transferFrom(seller,address(this),dcf_amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      pop\n        /* \"Dcoffer/treasury.sol\":1930:1951  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1915:1927  last_balance */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1915:1951  last_balance = address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1969:2046  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      0x2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6\n        /* \"Dcoffer/treasury.sol\":1975:1998  last_balance.sub(admin) */\n      tag_97\n        /* \"Dcoffer/treasury.sol\":1992:1997  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1975:1987  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":1975:1991  last_balance.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":1975:1998  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"Dcoffer/treasury.sol\":1999:2004  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1999:2014  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2023:2027  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1999:2029  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_101:\n        /* \"Dcoffer/treasury.sol\":2030:2045  block.timestamp */\n      timestamp\n        /* \"Dcoffer/treasury.sol\":1969:2046  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      mload(0x40)\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Dcoffer/treasury.sol\":1517:2056  {... */\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1449:2056  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2535:2895  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_30:\n        /* \"Dcoffer/treasury.sol\":2591:2598  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2606:2625  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2628:2651  last_balance.sub(admin) */\n      tag_105\n        /* \"Dcoffer/treasury.sol\":2645:2650  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2628:2640  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":2628:2644  last_balance.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":2628:2651  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"Dcoffer/treasury.sol\":2606:2651  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2658:2677  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2680:2685  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2680:2695  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2704:2708  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2680:2710  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_109:\n        /* \"Dcoffer/treasury.sol\":2658:2710  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2717:2737  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2740:2767  _eth_amount.add(eth_amount) */\n      tag_110\n        /* \"Dcoffer/treasury.sol\":2756:2766  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2740:2751  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":2740:2755  _eth_amount.add */\n      tag_64\n      swap1\n        /* \"Dcoffer/treasury.sol\":2740:2767  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"Dcoffer/treasury.sol\":2717:2767  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2774:2794  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2797:2816  K.div(Variable_eth) */\n      tag_111\n        /* \"Dcoffer/treasury.sol\":2803:2815  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2797:2798  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2797:2802  K.div */\n      tag_73\n      swap1\n        /* \"Dcoffer/treasury.sol\":2797:2816  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"Dcoffer/treasury.sol\":2774:2816  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2823:2837  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2840:2869  _dcf_amount.sub(Variable_dcf) */\n      tag_112\n        /* \"Dcoffer/treasury.sol\":2856:2868  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2840:2851  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2840:2855  _dcf_amount.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":2840:2869  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"Dcoffer/treasury.sol\":2823:2869  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2883:2889  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2876:2889  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":2535:2895  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":826:928  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_36:\n        /* \"Dcoffer/treasury.sol\":749:759  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:745  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":732:796  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Dcoffer/treasury.sol\":917:922  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":897:908  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":897:914  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":909:913  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":897:914  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":897:922  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":826:928  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2908:3070  function Warning_protect()external onlyOwner{... */\n    tag_39:\n        /* \"Dcoffer/treasury.sol\":749:759  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:745  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":732:796  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_50\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"Dcoffer/treasury.sol\":2967:2972  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2959:2982  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2959:3005  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":2983:3004  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":2959:3005  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n        /* \"Dcoffer/treasury.sol\":3012:3017  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3012:3026  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":3027:3032  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3033:3038  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3033:3048  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":3057:3061  this */\n      address\n        /* \"Dcoffer/treasury.sol\":3033:3063  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_126:\n        /* \"Dcoffer/treasury.sol\":3012:3064  dcoff.transfer(owner,dcoff.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_131:\n      pop\n        /* \"Dcoffer/treasury.sol\":2908:3070  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":936:1441  function deposit(address subscriber)external payable{... */\n    tag_43:\n        /* \"Dcoffer/treasury.sol\":1032:1036  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1005:1036  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1005:1016  RouterAdmin */\n      0x06\n        /* \"Dcoffer/treasury.sol\":1005:1028  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1017:1027  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1005:1028  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1005:1036  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":997:1037  require(RouterAdmin[msg.sender] == true) */\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n        /* \"Dcoffer/treasury.sol\":1048:1060  uint256 _fee */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1063:1091  msg.value.mul(fee).div(1000) */\n      tag_134\n        /* \"Dcoffer/treasury.sol\":1086:1090  1000 */\n      0x03e8\n        /* \"Dcoffer/treasury.sol\":1063:1081  msg.value.mul(fee) */\n      tag_135\n        /* \"Dcoffer/treasury.sol\":1077:1080  fee */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1063:1072  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":1063:1076  msg.value.mul */\n      tag_86\n      swap1\n        /* \"Dcoffer/treasury.sol\":1063:1081  msg.value.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Dcoffer/treasury.sol\":1063:1085  msg.value.mul(fee).div */\n      tag_73\n      swap1\n        /* \"Dcoffer/treasury.sol\":1063:1091  msg.value.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Dcoffer/treasury.sol\":1048:1091  uint256 _fee = msg.value.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1114:1129  admin.add(_fee) */\n      tag_136\n        /* \"Dcoffer/treasury.sol\":1124:1128  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1114:1119  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1114:1123  admin.add */\n      tag_64\n      swap1\n        /* \"Dcoffer/treasury.sol\":1114:1129  admin.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Dcoffer/treasury.sol\":1106:1111  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":1106:1129  admin = admin.add(_fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1138:1156  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1159:1178  msg.value.sub(_fee) */\n      tag_137\n        /* \"Dcoffer/treasury.sol\":1173:1177  _fee */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1159:1168  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":1159:1172  msg.value.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":1159:1178  msg.value.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"Dcoffer/treasury.sol\":1138:1178  uint256 eth_amount = msg.value.sub(_fee) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1189:1207  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1210:1229  ETH_DCF(eth_amount) */\n      tag_138\n        /* \"Dcoffer/treasury.sol\":1218:1228  eth_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1210:1217  ETH_DCF */\n      tag_30\n        /* \"Dcoffer/treasury.sol\":1210:1229  ETH_DCF(eth_amount) */\n      jump\t// in\n    tag_138:\n        /* \"Dcoffer/treasury.sol\":1189:1229  uint256 dcf_amount = ETH_DCF(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1244:1249  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1244:1258  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":1259:1269  subscriber */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1270:1280  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1244:1281  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_142:\n      pop\n        /* \"Dcoffer/treasury.sol\":1309:1330  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1294:1306  last_balance */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1294:1330  last_balance = address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1348:1425  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      0x2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6\n        /* \"Dcoffer/treasury.sol\":1354:1377  last_balance.sub(admin) */\n      tag_143\n        /* \"Dcoffer/treasury.sol\":1371:1376  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1354:1366  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":1354:1370  last_balance.sub */\n      tag_56\n      swap1\n        /* \"Dcoffer/treasury.sol\":1354:1377  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"Dcoffer/treasury.sol\":1378:1383  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1378:1393  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1402:1406  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1378:1408  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_147:\n        /* \"Dcoffer/treasury.sol\":1409:1424  block.timestamp */\n      timestamp\n        /* \"Dcoffer/treasury.sol\":1348:1425  price(last_balance.sub(admin),dcoff.balanceOf(address(this)),block.timestamp) */\n      mload(0x40)\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Dcoffer/treasury.sol\":988:1441  {... */\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":936:1441  function deposit(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":3078:3176  function admin_fee()external onlyOwner{... */\n    tag_46:\n        /* \"Dcoffer/treasury.sol\":749:759  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:745  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":740:759  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":732:796  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_50\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Dcoffer/treasury.sol\":3131:3136  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3123:3146  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":3123:3153  payable(owner).transfer(admin) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":3147:3152  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":3123:3153  payable(owner).transfer(admin) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n        /* \"Dcoffer/treasury.sol\":3168:3169  0 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":3160:3165  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":3160:3169  admin = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":3078:3176  function admin_fee()external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_167:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_168:\n        /* \"#utility.yul\":177:201   */\n      tag_200\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_167\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_202\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_168\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_170:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_172:\n        /* \"#utility.yul\":842:866   */\n      tag_207\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_167\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_208:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_173:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_210\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_172\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_19:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_213\n      tag_170\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1118:1237   */\n    tag_212:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_214\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_173\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_174:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1613   */\n    tag_175:\n        /* \"#utility.yul\":1554:1561   */\n      0x00\n        /* \"#utility.yul\":1583:1607   */\n      tag_217\n        /* \"#utility.yul\":1601:1606   */\n      dup3\n        /* \"#utility.yul\":1583:1607   */\n      tag_174\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1572:1607   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1619:1757   */\n    tag_176:\n        /* \"#utility.yul\":1700:1732   */\n      tag_219\n        /* \"#utility.yul\":1726:1731   */\n      dup2\n        /* \"#utility.yul\":1700:1732   */\n      tag_175\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1693:1698   */\n      dup2\n        /* \"#utility.yul\":1690:1733   */\n      eq\n        /* \"#utility.yul\":1680:1751   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1744:1745   */\n      dup1\n        /* \"#utility.yul\":1737:1749   */\n      revert\n        /* \"#utility.yul\":1680:1751   */\n    tag_220:\n        /* \"#utility.yul\":1619:1757   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:1918   */\n    tag_177:\n        /* \"#utility.yul\":1817:1822   */\n      0x00\n        /* \"#utility.yul\":1855:1861   */\n      dup2\n        /* \"#utility.yul\":1842:1862   */\n      calldataload\n        /* \"#utility.yul\":1833:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1912   */\n      tag_222\n        /* \"#utility.yul\":1906:1911   */\n      dup2\n        /* \"#utility.yul\":1871:1912   */\n      tag_176\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1763:1918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1924:2414   */\n    tag_25:\n        /* \"#utility.yul\":2000:2006   */\n      0x00\n        /* \"#utility.yul\":2008:2014   */\n      dup1\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2045:2054   */\n      dup4\n        /* \"#utility.yul\":2036:2043   */\n      dup6\n        /* \"#utility.yul\":2032:2055   */\n      sub\n        /* \"#utility.yul\":2028:2060   */\n      slt\n        /* \"#utility.yul\":2025:2144   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2063:2142   */\n      tag_225\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2025:2144   */\n    tag_224:\n        /* \"#utility.yul\":2183:2184   */\n      0x00\n        /* \"#utility.yul\":2208:2269   */\n      tag_226\n        /* \"#utility.yul\":2261:2268   */\n      dup6\n        /* \"#utility.yul\":2252:2258   */\n      dup3\n        /* \"#utility.yul\":2241:2250   */\n      dup7\n        /* \"#utility.yul\":2237:2259   */\n      add\n        /* \"#utility.yul\":2208:2269   */\n      tag_177\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2198:2269   */\n      swap3\n      pop\n        /* \"#utility.yul\":2154:2279   */\n      pop\n        /* \"#utility.yul\":2318:2320   */\n      0x20\n        /* \"#utility.yul\":2344:2397   */\n      tag_227\n        /* \"#utility.yul\":2389:2396   */\n      dup6\n        /* \"#utility.yul\":2380:2386   */\n      dup3\n        /* \"#utility.yul\":2369:2378   */\n      dup7\n        /* \"#utility.yul\":2365:2387   */\n      add\n        /* \"#utility.yul\":2344:2397   */\n      tag_173\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2334:2397   */\n      swap2\n      pop\n        /* \"#utility.yul\":2289:2407   */\n      pop\n        /* \"#utility.yul\":1924:2414   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2516   */\n    tag_178:\n        /* \"#utility.yul\":2457:2464   */\n      0x00\n        /* \"#utility.yul\":2486:2510   */\n      tag_229\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2486:2510   */\n      tag_174\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2475:2510   */\n      swap1\n      pop\n        /* \"#utility.yul\":2420:2516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2522:2644   */\n    tag_179:\n        /* \"#utility.yul\":2595:2619   */\n      tag_231\n        /* \"#utility.yul\":2613:2618   */\n      dup2\n        /* \"#utility.yul\":2595:2619   */\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2585:2620   */\n      eq\n        /* \"#utility.yul\":2575:2638   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2575:2638   */\n    tag_232:\n        /* \"#utility.yul\":2522:2644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2650:2789   */\n    tag_180:\n        /* \"#utility.yul\":2696:2701   */\n      0x00\n        /* \"#utility.yul\":2734:2740   */\n      dup2\n        /* \"#utility.yul\":2721:2741   */\n      calldataload\n        /* \"#utility.yul\":2712:2741   */\n      swap1\n      pop\n        /* \"#utility.yul\":2750:2783   */\n      tag_234\n        /* \"#utility.yul\":2777:2782   */\n      dup2\n        /* \"#utility.yul\":2750:2783   */\n      tag_179\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2650:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2885   */\n    tag_181:\n        /* \"#utility.yul\":2829:2836   */\n      0x00\n        /* \"#utility.yul\":2872:2877   */\n      dup2\n        /* \"#utility.yul\":2865:2878   */\n      iszero\n        /* \"#utility.yul\":2858:2879   */\n      iszero\n        /* \"#utility.yul\":2847:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3007   */\n    tag_182:\n        /* \"#utility.yul\":2961:2982   */\n      tag_237\n        /* \"#utility.yul\":2976:2981   */\n      dup2\n        /* \"#utility.yul\":2961:2982   */\n      tag_181\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2951:2983   */\n      eq\n        /* \"#utility.yul\":2941:3001   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":2994:2995   */\n      dup1\n        /* \"#utility.yul\":2987:2999   */\n      revert\n        /* \"#utility.yul\":2941:3001   */\n    tag_238:\n        /* \"#utility.yul\":2891:3007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3146   */\n    tag_183:\n        /* \"#utility.yul\":3056:3061   */\n      0x00\n        /* \"#utility.yul\":3094:3100   */\n      dup2\n        /* \"#utility.yul\":3081:3101   */\n      calldataload\n        /* \"#utility.yul\":3072:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3110:3140   */\n      tag_240\n        /* \"#utility.yul\":3134:3139   */\n      dup2\n        /* \"#utility.yul\":3110:3140   */\n      tag_182\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3013:3146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3620   */\n    tag_35:\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3225:3231   */\n      dup1\n        /* \"#utility.yul\":3274:3276   */\n      0x40\n        /* \"#utility.yul\":3262:3271   */\n      dup4\n        /* \"#utility.yul\":3253:3260   */\n      dup6\n        /* \"#utility.yul\":3249:3272   */\n      sub\n        /* \"#utility.yul\":3245:3277   */\n      slt\n        /* \"#utility.yul\":3242:3361   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":3280:3359   */\n      tag_243\n      tag_170\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3242:3361   */\n    tag_242:\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3425:3478   */\n      tag_244\n        /* \"#utility.yul\":3470:3477   */\n      dup6\n        /* \"#utility.yul\":3461:3467   */\n      dup3\n        /* \"#utility.yul\":3450:3459   */\n      dup7\n        /* \"#utility.yul\":3446:3468   */\n      add\n        /* \"#utility.yul\":3425:3478   */\n      tag_180\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3415:3478   */\n      swap3\n      pop\n        /* \"#utility.yul\":3371:3488   */\n      pop\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3553:3603   */\n      tag_245\n        /* \"#utility.yul\":3595:3602   */\n      dup6\n        /* \"#utility.yul\":3586:3592   */\n      dup3\n        /* \"#utility.yul\":3575:3584   */\n      dup7\n        /* \"#utility.yul\":3571:3593   */\n      add\n        /* \"#utility.yul\":3553:3603   */\n      tag_183\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3543:3603   */\n      swap2\n      pop\n        /* \"#utility.yul\":3498:3613   */\n      pop\n        /* \"#utility.yul\":3152:3620   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3955   */\n    tag_42:\n        /* \"#utility.yul\":3685:3691   */\n      0x00\n        /* \"#utility.yul\":3734:3736   */\n      0x20\n        /* \"#utility.yul\":3722:3731   */\n      dup3\n        /* \"#utility.yul\":3713:3720   */\n      dup5\n        /* \"#utility.yul\":3709:3732   */\n      sub\n        /* \"#utility.yul\":3705:3737   */\n      slt\n        /* \"#utility.yul\":3702:3821   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3740:3819   */\n      tag_248\n      tag_170\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3702:3821   */\n    tag_247:\n        /* \"#utility.yul\":3860:3861   */\n      0x00\n        /* \"#utility.yul\":3885:3938   */\n      tag_249\n        /* \"#utility.yul\":3930:3937   */\n      dup5\n        /* \"#utility.yul\":3921:3927   */\n      dup3\n        /* \"#utility.yul\":3910:3919   */\n      dup6\n        /* \"#utility.yul\":3906:3928   */\n      add\n        /* \"#utility.yul\":3885:3938   */\n      tag_180\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3875:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3831:3948   */\n      pop\n        /* \"#utility.yul\":3626:3955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4130   */\n    tag_184:\n        /* \"#utility.yul\":4045:4056   */\n      0x00\n        /* \"#utility.yul\":4079:4085   */\n      dup3\n        /* \"#utility.yul\":4074:4077   */\n      dup3\n        /* \"#utility.yul\":4067:4086   */\n      mstore\n        /* \"#utility.yul\":4119:4123   */\n      0x20\n        /* \"#utility.yul\":4114:4117   */\n      dup3\n        /* \"#utility.yul\":4110:4124   */\n      add\n        /* \"#utility.yul\":4095:4124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3961:4130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4318   */\n    tag_185:\n        /* \"#utility.yul\":4276:4310   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4272:4273   */\n      0x00\n        /* \"#utility.yul\":4264:4270   */\n      dup3\n        /* \"#utility.yul\":4260:4274   */\n      add\n        /* \"#utility.yul\":4253:4311   */\n      mstore\n        /* \"#utility.yul\":4136:4318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4324:4690   */\n    tag_186:\n        /* \"#utility.yul\":4466:4469   */\n      0x00\n        /* \"#utility.yul\":4487:4554   */\n      tag_253\n        /* \"#utility.yul\":4551:4553   */\n      0x20\n        /* \"#utility.yul\":4546:4549   */\n      dup4\n        /* \"#utility.yul\":4487:4554   */\n      tag_184\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4480:4554   */\n      swap2\n      pop\n        /* \"#utility.yul\":4563:4656   */\n      tag_254\n        /* \"#utility.yul\":4652:4655   */\n      dup3\n        /* \"#utility.yul\":4563:4656   */\n      tag_185\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4676:4679   */\n      dup3\n        /* \"#utility.yul\":4672:4684   */\n      add\n        /* \"#utility.yul\":4665:4684   */\n      swap1\n      pop\n        /* \"#utility.yul\":4324:4690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4696:5115   */\n    tag_50:\n        /* \"#utility.yul\":4862:4866   */\n      0x00\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4889:4898   */\n      dup3\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4877:4903   */\n      swap1\n      pop\n        /* \"#utility.yul\":4949:4958   */\n      dup2\n        /* \"#utility.yul\":4943:4947   */\n      dup2\n        /* \"#utility.yul\":4939:4959   */\n      sub\n        /* \"#utility.yul\":4935:4936   */\n      0x00\n        /* \"#utility.yul\":4924:4933   */\n      dup4\n        /* \"#utility.yul\":4920:4937   */\n      add\n        /* \"#utility.yul\":4913:4960   */\n      mstore\n        /* \"#utility.yul\":4977:5108   */\n      tag_256\n        /* \"#utility.yul\":5103:5107   */\n      dup2\n        /* \"#utility.yul\":4977:5108   */\n      tag_186\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4969:5108   */\n      swap1\n      pop\n        /* \"#utility.yul\":4696:5115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5121:5239   */\n    tag_187:\n        /* \"#utility.yul\":5208:5232   */\n      tag_258\n        /* \"#utility.yul\":5226:5231   */\n      dup2\n        /* \"#utility.yul\":5208:5232   */\n      tag_178\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5203:5206   */\n      dup3\n        /* \"#utility.yul\":5196:5233   */\n      mstore\n        /* \"#utility.yul\":5121:5239   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5467   */\n    tag_58:\n        /* \"#utility.yul\":5338:5342   */\n      0x00\n        /* \"#utility.yul\":5376:5378   */\n      0x20\n        /* \"#utility.yul\":5365:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5379   */\n      add\n        /* \"#utility.yul\":5353:5379   */\n      swap1\n      pop\n        /* \"#utility.yul\":5389:5460   */\n      tag_260\n        /* \"#utility.yul\":5457:5458   */\n      0x00\n        /* \"#utility.yul\":5446:5455   */\n      dup4\n        /* \"#utility.yul\":5442:5459   */\n      add\n        /* \"#utility.yul\":5433:5439   */\n      dup5\n        /* \"#utility.yul\":5389:5460   */\n      tag_187\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5245:5467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5473:5616   */\n    tag_188:\n        /* \"#utility.yul\":5530:5535   */\n      0x00\n        /* \"#utility.yul\":5561:5567   */\n      dup2\n        /* \"#utility.yul\":5555:5568   */\n      mload\n        /* \"#utility.yul\":5546:5568   */\n      swap1\n      pop\n        /* \"#utility.yul\":5577:5610   */\n      tag_262\n        /* \"#utility.yul\":5604:5609   */\n      dup2\n        /* \"#utility.yul\":5577:5610   */\n      tag_172\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5473:5616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5622:5973   */\n    tag_62:\n        /* \"#utility.yul\":5692:5698   */\n      0x00\n        /* \"#utility.yul\":5741:5743   */\n      0x20\n        /* \"#utility.yul\":5729:5738   */\n      dup3\n        /* \"#utility.yul\":5720:5727   */\n      dup5\n        /* \"#utility.yul\":5716:5739   */\n      sub\n        /* \"#utility.yul\":5712:5744   */\n      slt\n        /* \"#utility.yul\":5709:5828   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":5747:5826   */\n      tag_265\n      tag_170\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5709:5828   */\n    tag_264:\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5892:5956   */\n      tag_266\n        /* \"#utility.yul\":5948:5955   */\n      dup5\n        /* \"#utility.yul\":5939:5945   */\n      dup3\n        /* \"#utility.yul\":5928:5937   */\n      dup6\n        /* \"#utility.yul\":5924:5946   */\n      add\n        /* \"#utility.yul\":5892:5956   */\n      tag_188\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5882:5956   */\n      swap2\n      pop\n        /* \"#utility.yul\":5838:5966   */\n      pop\n        /* \"#utility.yul\":5622:5973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6039   */\n    tag_189:\n        /* \"#utility.yul\":6007:6010   */\n      0x00\n        /* \"#utility.yul\":6028:6033   */\n      dup2\n        /* \"#utility.yul\":6021:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6187   */\n    tag_190:\n        /* \"#utility.yul\":6095:6104   */\n      0x00\n        /* \"#utility.yul\":6128:6181   */\n      tag_269\n        /* \"#utility.yul\":6146:6180   */\n      tag_270\n        /* \"#utility.yul\":6155:6179   */\n      tag_271\n        /* \"#utility.yul\":6173:6178   */\n      dup5\n        /* \"#utility.yul\":6155:6179   */\n      tag_174\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6146:6180   */\n      tag_189\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6128:6181   */\n      tag_174\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6115:6181   */\n      swap1\n      pop\n        /* \"#utility.yul\":6045:6187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6193:6319   */\n    tag_191:\n        /* \"#utility.yul\":6243:6252   */\n      0x00\n        /* \"#utility.yul\":6276:6313   */\n      tag_273\n        /* \"#utility.yul\":6307:6312   */\n      dup3\n        /* \"#utility.yul\":6276:6313   */\n      tag_190\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6263:6313   */\n      swap1\n      pop\n        /* \"#utility.yul\":6193:6319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6325:6459   */\n    tag_192:\n        /* \"#utility.yul\":6383:6392   */\n      0x00\n        /* \"#utility.yul\":6416:6453   */\n      tag_275\n        /* \"#utility.yul\":6447:6452   */\n      dup3\n        /* \"#utility.yul\":6416:6453   */\n      tag_191\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6403:6453   */\n      swap1\n      pop\n        /* \"#utility.yul\":6325:6459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6612   */\n    tag_193:\n        /* \"#utility.yul\":6560:6605   */\n      tag_277\n        /* \"#utility.yul\":6599:6604   */\n      dup2\n        /* \"#utility.yul\":6560:6605   */\n      tag_192\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6555:6558   */\n      dup3\n        /* \"#utility.yul\":6548:6606   */\n      mstore\n        /* \"#utility.yul\":6465:6612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6618:6856   */\n    tag_78:\n        /* \"#utility.yul\":6719:6723   */\n      0x00\n        /* \"#utility.yul\":6757:6759   */\n      0x20\n        /* \"#utility.yul\":6746:6755   */\n      dup3\n        /* \"#utility.yul\":6742:6760   */\n      add\n        /* \"#utility.yul\":6734:6760   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6849   */\n      tag_279\n        /* \"#utility.yul\":6846:6847   */\n      0x00\n        /* \"#utility.yul\":6835:6844   */\n      dup4\n        /* \"#utility.yul\":6831:6848   */\n      add\n        /* \"#utility.yul\":6822:6828   */\n      dup5\n        /* \"#utility.yul\":6770:6849   */\n      tag_193\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6618:6856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6862:7320   */\n    tag_92:\n        /* \"#utility.yul\":7019:7023   */\n      0x00\n        /* \"#utility.yul\":7057:7059   */\n      0x60\n        /* \"#utility.yul\":7046:7055   */\n      dup3\n        /* \"#utility.yul\":7042:7060   */\n      add\n        /* \"#utility.yul\":7034:7060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7070:7149   */\n      tag_281\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7135:7144   */\n      dup4\n        /* \"#utility.yul\":7131:7148   */\n      add\n        /* \"#utility.yul\":7122:7128   */\n      dup7\n        /* \"#utility.yul\":7070:7149   */\n      tag_193\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7159:7231   */\n      tag_282\n        /* \"#utility.yul\":7227:7229   */\n      0x20\n        /* \"#utility.yul\":7216:7225   */\n      dup4\n        /* \"#utility.yul\":7212:7230   */\n      add\n        /* \"#utility.yul\":7203:7209   */\n      dup6\n        /* \"#utility.yul\":7159:7231   */\n      tag_187\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7241:7313   */\n      tag_283\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7298:7307   */\n      dup4\n        /* \"#utility.yul\":7294:7312   */\n      add\n        /* \"#utility.yul\":7285:7291   */\n      dup5\n        /* \"#utility.yul\":7241:7313   */\n      tag_168\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6862:7320   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7326:7463   */\n    tag_194:\n        /* \"#utility.yul\":7380:7385   */\n      0x00\n        /* \"#utility.yul\":7411:7417   */\n      dup2\n        /* \"#utility.yul\":7405:7418   */\n      mload\n        /* \"#utility.yul\":7396:7418   */\n      swap1\n      pop\n        /* \"#utility.yul\":7427:7457   */\n      tag_285\n        /* \"#utility.yul\":7451:7456   */\n      dup2\n        /* \"#utility.yul\":7427:7457   */\n      tag_182\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7326:7463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7469:7814   */\n    tag_96:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7585:7587   */\n      0x20\n        /* \"#utility.yul\":7573:7582   */\n      dup3\n        /* \"#utility.yul\":7564:7571   */\n      dup5\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7588   */\n      slt\n        /* \"#utility.yul\":7553:7672   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7591:7670   */\n      tag_288\n      tag_170\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7553:7672   */\n    tag_287:\n        /* \"#utility.yul\":7711:7712   */\n      0x00\n        /* \"#utility.yul\":7736:7797   */\n      tag_289\n        /* \"#utility.yul\":7789:7796   */\n      dup5\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup6\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7736:7797   */\n      tag_194\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7726:7797   */\n      swap2\n      pop\n        /* \"#utility.yul\":7682:7807   */\n      pop\n        /* \"#utility.yul\":7469:7814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:8262   */\n    tag_103:\n        /* \"#utility.yul\":7969:7973   */\n      0x00\n        /* \"#utility.yul\":8007:8009   */\n      0x60\n        /* \"#utility.yul\":7996:8005   */\n      dup3\n        /* \"#utility.yul\":7992:8010   */\n      add\n        /* \"#utility.yul\":7984:8010   */\n      swap1\n      pop\n        /* \"#utility.yul\":8020:8091   */\n      tag_291\n        /* \"#utility.yul\":8088:8089   */\n      0x00\n        /* \"#utility.yul\":8077:8086   */\n      dup4\n        /* \"#utility.yul\":8073:8090   */\n      add\n        /* \"#utility.yul\":8064:8070   */\n      dup7\n        /* \"#utility.yul\":8020:8091   */\n      tag_168\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8101:8173   */\n      tag_292\n        /* \"#utility.yul\":8169:8171   */\n      0x20\n        /* \"#utility.yul\":8158:8167   */\n      dup4\n        /* \"#utility.yul\":8154:8172   */\n      add\n        /* \"#utility.yul\":8145:8151   */\n      dup6\n        /* \"#utility.yul\":8101:8173   */\n      tag_168\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8183:8255   */\n      tag_293\n        /* \"#utility.yul\":8251:8253   */\n      0x40\n        /* \"#utility.yul\":8240:8249   */\n      dup4\n        /* \"#utility.yul\":8236:8254   */\n      add\n        /* \"#utility.yul\":8227:8233   */\n      dup5\n        /* \"#utility.yul\":8183:8255   */\n      tag_168\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7820:8262   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8268:8600   */\n    tag_128:\n        /* \"#utility.yul\":8389:8393   */\n      0x00\n        /* \"#utility.yul\":8427:8429   */\n      0x40\n        /* \"#utility.yul\":8416:8425   */\n      dup3\n        /* \"#utility.yul\":8412:8430   */\n      add\n        /* \"#utility.yul\":8404:8430   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8511   */\n      tag_295\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8497:8506   */\n      dup4\n        /* \"#utility.yul\":8493:8510   */\n      add\n        /* \"#utility.yul\":8484:8490   */\n      dup6\n        /* \"#utility.yul\":8440:8511   */\n      tag_187\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8521:8593   */\n      tag_296\n        /* \"#utility.yul\":8589:8591   */\n      0x20\n        /* \"#utility.yul\":8578:8587   */\n      dup4\n        /* \"#utility.yul\":8574:8592   */\n      add\n        /* \"#utility.yul\":8565:8571   */\n      dup5\n        /* \"#utility.yul\":8521:8593   */\n      tag_168\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8268:8600   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8606:8786   */\n    tag_195:\n        /* \"#utility.yul\":8654:8731   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8651:8652   */\n      0x00\n        /* \"#utility.yul\":8644:8732   */\n      mstore\n        /* \"#utility.yul\":8751:8755   */\n      0x11\n        /* \"#utility.yul\":8748:8749   */\n      0x04\n        /* \"#utility.yul\":8741:8756   */\n      mstore\n        /* \"#utility.yul\":8775:8779   */\n      0x24\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8765:8780   */\n      revert\n        /* \"#utility.yul\":8792:8983   */\n    tag_157:\n        /* \"#utility.yul\":8832:8836   */\n      0x00\n        /* \"#utility.yul\":8852:8872   */\n      tag_299\n        /* \"#utility.yul\":8870:8871   */\n      dup3\n        /* \"#utility.yul\":8852:8872   */\n      tag_167\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8847:8872   */\n      swap2\n      pop\n        /* \"#utility.yul\":8886:8906   */\n      tag_300\n        /* \"#utility.yul\":8904:8905   */\n      dup4\n        /* \"#utility.yul\":8886:8906   */\n      tag_167\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8881:8906   */\n      swap3\n      pop\n        /* \"#utility.yul\":8925:8926   */\n      dup3\n        /* \"#utility.yul\":8922:8923   */\n      dup3\n        /* \"#utility.yul\":8919:8927   */\n      lt\n        /* \"#utility.yul\":8916:8950   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":8930:8948   */\n      tag_302\n      tag_195\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8916:8950   */\n    tag_301:\n        /* \"#utility.yul\":8975:8976   */\n      dup3\n        /* \"#utility.yul\":8972:8973   */\n      dup3\n        /* \"#utility.yul\":8968:8977   */\n      sub\n        /* \"#utility.yul\":8960:8977   */\n      swap1\n      pop\n        /* \"#utility.yul\":8792:8983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8989:9294   */\n    tag_160:\n        /* \"#utility.yul\":9029:9032   */\n      0x00\n        /* \"#utility.yul\":9048:9068   */\n      tag_304\n        /* \"#utility.yul\":9066:9067   */\n      dup3\n        /* \"#utility.yul\":9048:9068   */\n      tag_167\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9043:9068   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9102   */\n      tag_305\n        /* \"#utility.yul\":9100:9101   */\n      dup4\n        /* \"#utility.yul\":9082:9102   */\n      tag_167\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9077:9102   */\n      swap3\n      pop\n        /* \"#utility.yul\":9236:9237   */\n      dup3\n        /* \"#utility.yul\":9168:9234   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9164:9238   */\n      sub\n        /* \"#utility.yul\":9161:9162   */\n      dup3\n        /* \"#utility.yul\":9158:9239   */\n      gt\n        /* \"#utility.yul\":9155:9262   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":9242:9260   */\n      tag_307\n      tag_195\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9155:9262   */\n    tag_306:\n        /* \"#utility.yul\":9286:9287   */\n      dup3\n        /* \"#utility.yul\":9283:9284   */\n      dup3\n        /* \"#utility.yul\":9279:9288   */\n      add\n        /* \"#utility.yul\":9272:9288   */\n      swap1\n      pop\n        /* \"#utility.yul\":8989:9294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9300:9480   */\n    tag_196:\n        /* \"#utility.yul\":9348:9425   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9345:9346   */\n      0x00\n        /* \"#utility.yul\":9338:9426   */\n      mstore\n        /* \"#utility.yul\":9445:9449   */\n      0x12\n        /* \"#utility.yul\":9442:9443   */\n      0x04\n        /* \"#utility.yul\":9435:9450   */\n      mstore\n        /* \"#utility.yul\":9469:9473   */\n      0x24\n        /* \"#utility.yul\":9466:9467   */\n      0x00\n        /* \"#utility.yul\":9459:9474   */\n      revert\n        /* \"#utility.yul\":9486:9671   */\n    tag_163:\n        /* \"#utility.yul\":9526:9527   */\n      0x00\n        /* \"#utility.yul\":9543:9563   */\n      tag_310\n        /* \"#utility.yul\":9561:9562   */\n      dup3\n        /* \"#utility.yul\":9543:9563   */\n      tag_167\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9538:9563   */\n      swap2\n      pop\n        /* \"#utility.yul\":9577:9597   */\n      tag_311\n        /* \"#utility.yul\":9595:9596   */\n      dup4\n        /* \"#utility.yul\":9577:9597   */\n      tag_167\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9572:9597   */\n      swap3\n      pop\n        /* \"#utility.yul\":9616:9617   */\n      dup3\n        /* \"#utility.yul\":9606:9641   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_313\n      tag_196\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9606:9641   */\n    tag_312:\n        /* \"#utility.yul\":9663:9664   */\n      dup3\n        /* \"#utility.yul\":9660:9661   */\n      dup3\n        /* \"#utility.yul\":9656:9665   */\n      div\n        /* \"#utility.yul\":9651:9665   */\n      swap1\n      pop\n        /* \"#utility.yul\":9486:9671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9677:10025   */\n    tag_166:\n        /* \"#utility.yul\":9717:9724   */\n      0x00\n        /* \"#utility.yul\":9740:9760   */\n      tag_315\n        /* \"#utility.yul\":9758:9759   */\n      dup3\n        /* \"#utility.yul\":9740:9760   */\n      tag_167\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9735:9760   */\n      swap2\n      pop\n        /* \"#utility.yul\":9774:9794   */\n      tag_316\n        /* \"#utility.yul\":9792:9793   */\n      dup4\n        /* \"#utility.yul\":9774:9794   */\n      tag_167\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9769:9794   */\n      swap3\n      pop\n        /* \"#utility.yul\":9962:9963   */\n      dup2\n        /* \"#utility.yul\":9894:9960   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9890:9964   */\n      div\n        /* \"#utility.yul\":9887:9888   */\n      dup4\n        /* \"#utility.yul\":9884:9965   */\n      gt\n        /* \"#utility.yul\":9879:9880   */\n      dup3\n        /* \"#utility.yul\":9872:9881   */\n      iszero\n        /* \"#utility.yul\":9865:9882   */\n      iszero\n        /* \"#utility.yul\":9861:9966   */\n      and\n        /* \"#utility.yul\":9858:9989   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":9969:9987   */\n      tag_318\n      tag_195\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9858:9989   */\n    tag_317:\n        /* \"#utility.yul\":10017:10018   */\n      dup3\n        /* \"#utility.yul\":10014:10015   */\n      dup3\n        /* \"#utility.yul\":10010:10019   */\n      mul\n        /* \"#utility.yul\":9999:10019   */\n      swap1\n      pop\n        /* \"#utility.yul\":9677:10025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220197c1ea7c673895fcbe8257d217e9dfa2994c15665a8465e4109475d0acfc11a64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1204:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "788:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "834:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:32:3"
															},
															"nodeType": "YulIf",
															"src": "798:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "927:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "956:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "946:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "971:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1065:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1110:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "750:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "761:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "781:6:3",
														"type": ""
													}
												],
												"src": "694:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527358d3a4cb28f30d9c87e8f79544f98f358cde62276000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620017b2380380620017b283398181016040528101906200007d91906200011b565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055508160018190555080600281905550505062000162565b600080fd5b6000819050919050565b620000f581620000e0565b81146200010157600080fd5b50565b6000815190506200011581620000ea565b92915050565b60008060408385031215620001355762000134620000db565b5b6000620001458582860162000104565b9250506020620001588582860162000104565b9150509250929050565b61164080620001726000396000f3fe60806040526004361061007b5760003560e01c8063c3c646741161004e578063c3c646741461014e578063dac3fad414610177578063f340fa011461018e578063fee3f7f9146101aa5761007b565b80631758d6f3146100805780633a23bf49146100ab57806394756aa7146100e857806397dedb1d14610111575b600080fd5b34801561008c57600080fd5b506100956101c1565b6040516100a29190611061565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906110ad565b6102ba565b6040516100df9190611061565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611138565b6104f1565b005b34801561011d57600080fd5b50610138600480360381019061013391906110ad565b61083d565b6040516101459190611061565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906111ee565b61094c565b005b34801561018357600080fd5b5061018c610a37565b005b6101a860048036038101906101a3919061122e565b610c8c565b005b3480156101b657600080fd5b506101bf610eeb565b005b60003373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a906112b8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102b25760045490506102b7565b600080fd5b90565b6000806102d4600454600354610ff090919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033291906112e7565b602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190611317565b9050600061038a858361100690919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190611317565b8111156104b45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190611317565b90505b60006104cb8260015461101c90919063ffffffff16565b905060006104e28286610ff090919063ffffffff16565b90508095505050505050919050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461054e57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105a891906113a3565b602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611317565b10156105f457600080fd5b60006105ff826102ba565b9050600061062c6103e861061e6002548561103290919063ffffffff16565b61101c90919063ffffffff16565b90506106438160045461100690919063ffffffff16565b60048190555061065c8183610ff090919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106a4573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401610702939291906113be565b6020604051808303816000875af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610745919061140a565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610785600454600354610ff090919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107de91906112e7565b602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190611317565b4260405161082f93929190611437565b60405180910390a150505050565b600080610857600454600354610ff090919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b591906112e7565b602060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611317565b9050600061090d858461100690919063ffffffff16565b905060006109268260015461101c90919063ffffffff16565b9050600061093d8285610ff090919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d3906112b8565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe906112b8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b2f573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be891906112e7565b602060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190611317565b6040518363ffffffff1660e01b8152600401610c4692919061146e565b6020604051808303816000875af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c89919061140a565b50565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ce957600080fd5b6000610d146103e8610d066002543461103290919063ffffffff16565b61101c90919063ffffffff16565b9050610d2b8160045461100690919063ffffffff16565b6004819055506000610d468234610ff090919063ffffffff16565b90506000610d538261083d565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610db092919061146e565b6020604051808303816000875af1158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df3919061140a565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610e33600454600354610ff090919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e8c91906112e7565b602060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190611317565b42604051610edd93929190611437565b60405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f72906112b8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610fe5573d6000803e3d6000fd5b506000600481905550565b60008183610ffe91906114c6565b905092915050565b6000818361101491906114fa565b905092915050565b6000818361102a919061157f565b905092915050565b6000818361104091906115b0565b905092915050565b6000819050919050565b61105b81611048565b82525050565b60006020820190506110766000830184611052565b92915050565b600080fd5b61108a81611048565b811461109557600080fd5b50565b6000813590506110a781611081565b92915050565b6000602082840312156110c3576110c261107c565b5b60006110d184828501611098565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611105826110da565b9050919050565b611115816110fa565b811461112057600080fd5b50565b6000813590506111328161110c565b92915050565b6000806040838503121561114f5761114e61107c565b5b600061115d85828601611123565b925050602061116e85828601611098565b9150509250929050565b6000611183826110da565b9050919050565b61119381611178565b811461119e57600080fd5b50565b6000813590506111b08161118a565b92915050565b60008115159050919050565b6111cb816111b6565b81146111d657600080fd5b50565b6000813590506111e8816111c2565b92915050565b600080604083850312156112055761120461107c565b5b6000611213858286016111a1565b9250506020611224858286016111d9565b9150509250929050565b6000602082840312156112445761124361107c565b5b6000611252848285016111a1565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112a260208361125b565b91506112ad8261126c565b602082019050919050565b600060208201905081810360008301526112d181611295565b9050919050565b6112e181611178565b82525050565b60006020820190506112fc60008301846112d8565b92915050565b60008151905061131181611081565b92915050565b60006020828403121561132d5761132c61107c565b5b600061133b84828501611302565b91505092915050565b6000819050919050565b600061136961136461135f846110da565b611344565b6110da565b9050919050565b600061137b8261134e565b9050919050565b600061138d82611370565b9050919050565b61139d81611382565b82525050565b60006020820190506113b86000830184611394565b92915050565b60006060820190506113d36000830186611394565b6113e060208301856112d8565b6113ed6040830184611052565b949350505050565b600081519050611404816111c2565b92915050565b6000602082840312156114205761141f61107c565b5b600061142e848285016113f5565b91505092915050565b600060608201905061144c6000830186611052565b6114596020830185611052565b6114666040830184611052565b949350505050565b600060408201905061148360008301856112d8565b6114906020830184611052565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d182611048565b91506114dc83611048565b9250828210156114ef576114ee611497565b5b828203905092915050565b600061150582611048565b915061151083611048565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561154557611544611497565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061158a82611048565b915061159583611048565b9250826115a5576115a4611550565b5b828204905092915050565b60006115bb82611048565b91506115c683611048565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115ff576115fe611497565b5b82820290509291505056fea2646970667358221220197c1ea7c673895fcbe8257d217e9dfa2994c15665a8465e4109475d0acfc11a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x58D3A4CB28F30D9C87E8F79544F98F358CDE6227 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH3 0x17B2 CODESIZE SUB DUP1 PUSH3 0x17B2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x7D SWAP2 SWAP1 PUSH3 0x11B JUMP JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x162 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF5 DUP2 PUSH3 0xE0 JUMP JUMPDEST DUP2 EQ PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x115 DUP2 PUSH3 0xEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0xDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x145 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x158 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1640 DUP1 PUSH3 0x172 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x1AA JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1758D6F3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0xA37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B2 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D4 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x38A DUP6 DUP4 PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP3 PUSH1 0x1 SLOAD PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E2 DUP3 DUP7 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST LT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF DUP3 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x62C PUSH2 0x3E8 PUSH2 0x61E PUSH1 0x2 SLOAD DUP6 PUSH2 0x1032 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x643 DUP2 PUSH1 0x4 SLOAD PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x65C DUP2 DUP4 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0x785 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x82F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x857 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP6 DUP5 PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x926 DUP3 PUSH1 0x1 SLOAD PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x93D DUP3 DUP6 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D3 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH2 0x3E8 PUSH2 0xD06 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x1032 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B DUP2 PUSH1 0x4 SLOAD PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD46 DUP3 CALLVALUE PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD53 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0xE33 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xEDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x102A SWAP2 SWAP1 PUSH2 0x157F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1040 SWAP2 SWAP1 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x1048 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1076 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1048 JUMP JUMPDEST DUP2 EQ PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A7 DUP2 PUSH2 0x1081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1105 DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1132 DUP2 PUSH2 0x110C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH2 0x114E PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115D DUP6 DUP3 DUP7 ADD PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x116E DUP6 DUP3 DUP7 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1183 DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1178 JUMP JUMPDEST DUP2 EQ PUSH2 0x119E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B0 DUP2 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CB DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E8 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1213 DUP6 DUP3 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1224 DUP6 DUP3 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1252 DUP5 DUP3 DUP6 ADD PUSH2 0x11A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A2 PUSH1 0x20 DUP4 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP PUSH2 0x12AD DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0x1178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1311 DUP2 PUSH2 0x1081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x1302 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1369 PUSH2 0x1364 PUSH2 0x135F DUP5 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137B DUP3 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP3 PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139D DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x13E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x13ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1404 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142E DUP5 DUP3 DUP6 ADD PUSH2 0x13F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x144C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x1466 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1483 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1490 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1505 DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1545 JUMPI PUSH2 0x1544 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x158A DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x1595 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BB DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C6 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH29 0x1EA7C673895FCBE8257D217E9DFA2994C15665A8465E4109475D0ACFC1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "183:3178:2:-:0;;;261:42;238:66;;;;;;;;;;;;;;;;;;;;490:136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:10;541:5;;:18;;;;;;;;;;;;;;;;;;581:9;566:12;:24;;;;601:2;597:1;:6;;;;616:4;610:3;:10;;;;490:136;;183:3178;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;183:3178:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_714": {
									"entryPoint": 698,
									"id": 714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_762": {
									"entryPoint": 2109,
									"id": 762,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_793": {
									"entryPoint": 2615,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 4102,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@admin_fee_811": {
									"entryPoint": 3819,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_556": {
									"entryPoint": 3212,
									"id": 556,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 4124,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_653": {
									"entryPoint": 1265,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 4146,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRouter_478": {
									"entryPoint": 2380,
									"id": 478,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 4080,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewAdminFee_831": {
									"entryPoint": 449,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10028:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:3"
															},
															"nodeType": "YulIf",
															"src": "822:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:3",
														"type": ""
													}
												],
												"src": "769:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:3",
														"type": ""
													}
												],
												"src": "897:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:3"
															},
															"nodeType": "YulIf",
															"src": "1118:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:3",
														"type": ""
													}
												],
												"src": "1042:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1601:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1583:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1572:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1554:7:3",
														"type": ""
													}
												],
												"src": "1509:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1735:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1737:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1693:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1726:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1700:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1690:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:51:3"
															},
															"nodeType": "YulIf",
															"src": "1680:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1663:5:3",
														"type": ""
													}
												],
												"src": "1619:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1855:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1842:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1833:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1906:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1871:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1801:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1809:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1817:5:3",
														"type": ""
													}
												],
												"src": "1763:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2063:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:3"
															},
															"nodeType": "YulIf",
															"src": "2025:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2154:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2169:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2173:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2198:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2241:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2252:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2237:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2237:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2261:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2208:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2198:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2289:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2304:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2308:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2334:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2369:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2380:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2365:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2389:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2344:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2344:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2334:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1977:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1988:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2000:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2008:6:3",
														"type": ""
													}
												],
												"src": "1924:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2465:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2475:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2504:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2486:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2475:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2447:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2457:7:3",
														"type": ""
													}
												],
												"src": "2420:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2588:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2613:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2595:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2595:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2585:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:43:3"
															},
															"nodeType": "YulIf",
															"src": "2575:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2558:5:3",
														"type": ""
													}
												],
												"src": "2522:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2712:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2734:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2721:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2712:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2750:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2680:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2688:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:3",
														"type": ""
													}
												],
												"src": "2650:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2837:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2847:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2872:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2865:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2847:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2819:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2829:7:3",
														"type": ""
													}
												],
												"src": "2795:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2985:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2994:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2987:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2987:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2987:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2954:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2976:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2961:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2961:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2951:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2951:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:40:3"
															},
															"nodeType": "YulIf",
															"src": "2941:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2924:5:3",
														"type": ""
													}
												],
												"src": "2891:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3081:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3072:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3110:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3040:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3048:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3056:5:3",
														"type": ""
													}
												],
												"src": "3013:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3232:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3278:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3280:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3253:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:32:3"
															},
															"nodeType": "YulIf",
															"src": "3242:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3371:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3386:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3390:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3415:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3450:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3461:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3446:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3470:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3425:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3498:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3513:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3517:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3543:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3586:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3553:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3194:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3205:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3217:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3225:6:3",
														"type": ""
													}
												],
												"src": "3152:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3692:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3738:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3740:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3740:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3713:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3722:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3734:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3705:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:32:3"
															},
															"nodeType": "YulIf",
															"src": "3702:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3831:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3846:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3850:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3875:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3910:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3921:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3906:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3930:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3885:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3885:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3875:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3662:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3673:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3685:6:3",
														"type": ""
													}
												],
												"src": "3626:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4057:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4095:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4114:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4119:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4110:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4095:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4029:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4034:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4045:11:3",
														"type": ""
													}
												],
												"src": "3961:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4242:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4264:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4272:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4260:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4276:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4234:6:3",
														"type": ""
													}
												],
												"src": "4136:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4470:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4480:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4546:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4551:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4487:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4652:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4563:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4665:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4676:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4672:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4458:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4466:3:3",
														"type": ""
													}
												],
												"src": "4324:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4867:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4877:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4885:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4877:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4924:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4935:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4943:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4913:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4969:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5103:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4977:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4969:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4847:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4862:4:3",
														"type": ""
													}
												],
												"src": "4696:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5186:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5203:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5226:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5208:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5208:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5174:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5181:3:3",
														"type": ""
													}
												],
												"src": "5121:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5353:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5365:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5353:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5433:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5446:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5457:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5442:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5442:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5389:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5315:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5327:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5338:4:3",
														"type": ""
													}
												],
												"src": "5245:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5536:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5546:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5561:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5555:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5555:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5546:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5604:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5577:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5577:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5514:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5522:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5530:5:3",
														"type": ""
													}
												],
												"src": "5473:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5699:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5745:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5747:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5747:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5747:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5720:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5716:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5716:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5712:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:32:3"
															},
															"nodeType": "YulIf",
															"src": "5709:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5838:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5853:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5867:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5857:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5882:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5928:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5939:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5924:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5924:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5948:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5892:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5892:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5882:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5669:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5680:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5692:6:3",
														"type": ""
													}
												],
												"src": "5622:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6011:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6021:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6028:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6021:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5997:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6007:3:3",
														"type": ""
													}
												],
												"src": "5979:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6105:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6115:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6173:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6155:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6155:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6146:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6146:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6128:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6115:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6085:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6095:9:3",
														"type": ""
													}
												],
												"src": "6045:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6253:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6263:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6307:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6276:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6263:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6233:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6243:9:3",
														"type": ""
													}
												],
												"src": "6193:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6393:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6403:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6447:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6416:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6403:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6373:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6383:9:3",
														"type": ""
													}
												],
												"src": "6325:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6538:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6555:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6599:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6560:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6548:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6548:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6548:58:3"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6526:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6533:3:3",
														"type": ""
													}
												],
												"src": "6465:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6724:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6734:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6746:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6757:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6734:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6822:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6835:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6846:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6831:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6831:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6770:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6770:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6696:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6708:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6719:4:3",
														"type": ""
													}
												],
												"src": "6618:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7024:296:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7034:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7046:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7057:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7042:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7042:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7034:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7122:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7135:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7146:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7131:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7131:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7070:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7070:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7203:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7216:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7227:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7159:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7285:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7298:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7309:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7294:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7294:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7241:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7241:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6980:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6992:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7000:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7008:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7019:4:3",
														"type": ""
													}
												],
												"src": "6862:458:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7386:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7396:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7411:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7405:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7396:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7451:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7427:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7427:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7364:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7372:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7380:5:3",
														"type": ""
													}
												],
												"src": "7326:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7589:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7591:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7591:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7591:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:32:3"
															},
															"nodeType": "YulIf",
															"src": "7553:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7682:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7697:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7711:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7701:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7726:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7736:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7726:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7513:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7524:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7536:6:3",
														"type": ""
													}
												],
												"src": "7469:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7974:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7984:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7984:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8064:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8077:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8088:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8073:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8020:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8020:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8145:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8158:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8169:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8154:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8101:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8101:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8101:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8227:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8240:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8251:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8236:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8236:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8183:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8183:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8183:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7930:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7942:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7950:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7958:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7969:4:3",
														"type": ""
													}
												],
												"src": "7820:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8394:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8416:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8427:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8484:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8497:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8508:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8493:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8440:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8440:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8440:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8565:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8578:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8574:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8521:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8521:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8358:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8370:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8389:4:3",
														"type": ""
													}
												],
												"src": "8268:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8634:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8651:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8654:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8644:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8644:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8748:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8751:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8772:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8775:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8765:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8765:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8606:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8837:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8847:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8870:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8852:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8847:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8881:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8904:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8886:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8881:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8928:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8930:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8930:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8922:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8925:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8919:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8919:8:3"
															},
															"nodeType": "YulIf",
															"src": "8916:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8960:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8972:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8823:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8826:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8832:4:3",
														"type": ""
													}
												],
												"src": "8792:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9033:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9043:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9066:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9048:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9043:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9077:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9100:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9082:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9077:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9240:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9242:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9242:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9242:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9161:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9236:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9164:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9158:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:81:3"
															},
															"nodeType": "YulIf",
															"src": "9155:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9272:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9283:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9286:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9279:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9272:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9020:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9023:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9029:3:3",
														"type": ""
													}
												],
												"src": "8989:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9328:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9345:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9348:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9338:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9338:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9338:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9442:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9445:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9435:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9435:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9435:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9466:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9469:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9459:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9459:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9459:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9300:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9528:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9538:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9561:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9543:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9543:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9538:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9572:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9595:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9577:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9572:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9619:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9609:9:3"
															},
															"nodeType": "YulIf",
															"src": "9606:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9651:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9660:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9663:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9656:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9656:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9651:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9517:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9520:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9526:1:3",
														"type": ""
													}
												],
												"src": "9486:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9725:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9735:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9758:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9740:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9740:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9735:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9769:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9792:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9774:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9769:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9967:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9969:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9969:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9969:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9879:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9872:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9872:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9865:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9887:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9894:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9962:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9890:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9890:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9884:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9884:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9861:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:105:3"
															},
															"nodeType": "YulIf",
															"src": "9858:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9999:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10014:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10017:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10010:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10010:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9999:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9708:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9711:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9717:7:3",
														"type": ""
													}
												],
												"src": "9677:348:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063c3c646741161004e578063c3c646741461014e578063dac3fad414610177578063f340fa011461018e578063fee3f7f9146101aa5761007b565b80631758d6f3146100805780633a23bf49146100ab57806394756aa7146100e857806397dedb1d14610111575b600080fd5b34801561008c57600080fd5b506100956101c1565b6040516100a29190611061565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906110ad565b6102ba565b6040516100df9190611061565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a9190611138565b6104f1565b005b34801561011d57600080fd5b50610138600480360381019061013391906110ad565b61083d565b6040516101459190611061565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906111ee565b61094c565b005b34801561018357600080fd5b5061018c610a37565b005b6101a860048036038101906101a3919061122e565b610c8c565b005b3480156101b657600080fd5b506101bf610eeb565b005b60003373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a906112b8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102b25760045490506102b7565b600080fd5b90565b6000806102d4600454600354610ff090919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033291906112e7565b602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190611317565b9050600061038a858361100690919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190611317565b8111156104b45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190611317565b90505b60006104cb8260015461101c90919063ffffffff16565b905060006104e28286610ff090919063ffffffff16565b90508095505050505050919050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461054e57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105a891906113a3565b602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611317565b10156105f457600080fd5b60006105ff826102ba565b9050600061062c6103e861061e6002548561103290919063ffffffff16565b61101c90919063ffffffff16565b90506106438160045461100690919063ffffffff16565b60048190555061065c8183610ff090919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106a4573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401610702939291906113be565b6020604051808303816000875af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610745919061140a565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610785600454600354610ff090919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107de91906112e7565b602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190611317565b4260405161082f93929190611437565b60405180910390a150505050565b600080610857600454600354610ff090919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b591906112e7565b602060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611317565b9050600061090d858461100690919063ffffffff16565b905060006109268260015461101c90919063ffffffff16565b9050600061093d8285610ff090919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d3906112b8565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe906112b8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b2f573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be891906112e7565b602060405180830381865afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c299190611317565b6040518363ffffffff1660e01b8152600401610c4692919061146e565b6020604051808303816000875af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c89919061140a565b50565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ce957600080fd5b6000610d146103e8610d066002543461103290919063ffffffff16565b61101c90919063ffffffff16565b9050610d2b8160045461100690919063ffffffff16565b6004819055506000610d468234610ff090919063ffffffff16565b90506000610d538261083d565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610db092919061146e565b6020604051808303816000875af1158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df3919061140a565b50476003819055507f2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6610e33600454600354610ff090919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e8c91906112e7565b602060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190611317565b42604051610edd93929190611437565b60405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f72906112b8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610fe5573d6000803e3d6000fd5b506000600481905550565b60008183610ffe91906114c6565b905092915050565b6000818361101491906114fa565b905092915050565b6000818361102a919061157f565b905092915050565b6000818361104091906115b0565b905092915050565b6000819050919050565b61105b81611048565b82525050565b60006020820190506110766000830184611052565b92915050565b600080fd5b61108a81611048565b811461109557600080fd5b50565b6000813590506110a781611081565b92915050565b6000602082840312156110c3576110c261107c565b5b60006110d184828501611098565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611105826110da565b9050919050565b611115816110fa565b811461112057600080fd5b50565b6000813590506111328161110c565b92915050565b6000806040838503121561114f5761114e61107c565b5b600061115d85828601611123565b925050602061116e85828601611098565b9150509250929050565b6000611183826110da565b9050919050565b61119381611178565b811461119e57600080fd5b50565b6000813590506111b08161118a565b92915050565b60008115159050919050565b6111cb816111b6565b81146111d657600080fd5b50565b6000813590506111e8816111c2565b92915050565b600080604083850312156112055761120461107c565b5b6000611213858286016111a1565b9250506020611224858286016111d9565b9150509250929050565b6000602082840312156112445761124361107c565b5b6000611252848285016111a1565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112a260208361125b565b91506112ad8261126c565b602082019050919050565b600060208201905081810360008301526112d181611295565b9050919050565b6112e181611178565b82525050565b60006020820190506112fc60008301846112d8565b92915050565b60008151905061131181611081565b92915050565b60006020828403121561132d5761132c61107c565b5b600061133b84828501611302565b91505092915050565b6000819050919050565b600061136961136461135f846110da565b611344565b6110da565b9050919050565b600061137b8261134e565b9050919050565b600061138d82611370565b9050919050565b61139d81611382565b82525050565b60006020820190506113b86000830184611394565b92915050565b60006060820190506113d36000830186611394565b6113e060208301856112d8565b6113ed6040830184611052565b949350505050565b600081519050611404816111c2565b92915050565b6000602082840312156114205761141f61107c565b5b600061142e848285016113f5565b91505092915050565b600060608201905061144c6000830186611052565b6114596020830185611052565b6114666040830184611052565b949350505050565b600060408201905061148360008301856112d8565b6114906020830184611052565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d182611048565b91506114dc83611048565b9250828210156114ef576114ee611497565b5b828203905092915050565b600061150582611048565b915061151083611048565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561154557611544611497565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061158a82611048565b915061159583611048565b9250826115a5576115a4611550565b5b828204905092915050565b60006115bb82611048565b91506115c683611048565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115ff576115fe611497565b5b82820290509291505056fea2646970667358221220197c1ea7c673895fcbe8257d217e9dfa2994c15665a8465e4109475d0acfc11a64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x1AA JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1758D6F3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0xA37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0xEEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B2 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D4 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x38A DUP6 DUP4 PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP3 PUSH1 0x1 SLOAD PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4E2 DUP3 DUP7 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST LT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF DUP3 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x62C PUSH2 0x3E8 PUSH2 0x61E PUSH1 0x2 SLOAD DUP6 PUSH2 0x1032 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x643 DUP2 PUSH1 0x4 SLOAD PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x65C DUP2 DUP4 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x702 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0x785 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x82F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x857 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP6 DUP5 PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x926 DUP3 PUSH1 0x1 SLOAD PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x93D DUP3 DUP6 PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D3 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH2 0x3E8 PUSH2 0xD06 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x1032 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x101C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B DUP2 PUSH1 0x4 SLOAD PUSH2 0x1006 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD46 DUP3 CALLVALUE PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD53 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x140A JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6 PUSH2 0xE33 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xFF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xEDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x102A SWAP2 SWAP1 PUSH2 0x157F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1040 SWAP2 SWAP1 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x1048 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1076 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108A DUP2 PUSH2 0x1048 JUMP JUMPDEST DUP2 EQ PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A7 DUP2 PUSH2 0x1081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1105 DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1132 DUP2 PUSH2 0x110C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114F JUMPI PUSH2 0x114E PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115D DUP6 DUP3 DUP7 ADD PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x116E DUP6 DUP3 DUP7 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1183 DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1178 JUMP JUMPDEST DUP2 EQ PUSH2 0x119E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B0 DUP2 PUSH2 0x118A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CB DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E8 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1213 DUP6 DUP3 DUP7 ADD PUSH2 0x11A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1224 DUP6 DUP3 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1243 PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1252 DUP5 DUP3 DUP6 ADD PUSH2 0x11A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A2 PUSH1 0x20 DUP4 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP PUSH2 0x12AD DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0x1178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1311 DUP2 PUSH2 0x1081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x1302 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1369 PUSH2 0x1364 PUSH2 0x135F DUP5 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137B DUP3 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP3 PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139D DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1394 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x13E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x13ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1404 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x107C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142E DUP5 DUP3 DUP6 ADD PUSH2 0x13F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x144C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x1466 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1483 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1490 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14D1 DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DC DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1505 DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1545 JUMPI PUSH2 0x1544 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x158A DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x1595 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BB DUP3 PUSH2 0x1048 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C6 DUP4 PUSH2 0x1048 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FE PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH29 0x1EA7C673895FCBE8257D217E9DFA2994C15665A8465E4109475D0ACFC1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "183:3178:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3182:156;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2064:463;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1449:607;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2535:360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2908:162;;;;;;;;;;;;;:::i;:::-;;936:505;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3078:98;;;;;;;;;;;;;:::i;:::-;;3182:156;3237:7;749:10;740:19;;:5;;;;;;;;;;;:19;;;732:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3264:10:::1;3255:19;;:5;;;;;;;;;;;:19;;::::0;3252:81:::1;;3291:5;;3284:12;;;;3252:81;3317:8;::::0;::::1;807:1;3182:156:::0;:::o;2064:463::-;2120:7;2135:19;2157:23;2174:5;;2157:12;;:16;;:23;;;;:::i;:::-;2135:45;;2187:19;2209:5;;;;;;;;;;;:15;;;2233:4;2209:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2187:52;;2250:20;2273:27;2289:10;2273:11;:15;;:27;;;;:::i;:::-;2250:50;;2327:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2312:12;:34;2309:89;;;2371:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2356:34;;2309:89;2406:20;2429:19;2435:12;2429:1;;:5;;:19;;;;:::i;:::-;2406:42;;2455:14;2472:29;2488:12;2472:11;:15;;:29;;;;:::i;:::-;2455:46;;2515:6;2508:13;;;;;;;2064:463;;;:::o;1449:607::-;1561:4;1534:31;;:11;:23;1546:10;1534:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1526:40;;;;;;1610:10;1583:5;;;;;;;;;;:15;;;1599:6;1583:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1575:46;;;;;;1632:18;1653:19;1661:10;1653:7;:19::i;:::-;1632:40;;1681:12;1696:29;1720:4;1696:19;1711:3;;1696:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1681:44;;1742:15;1752:4;1742:5;;:9;;:15;;;;:::i;:::-;1734:5;:23;;;;1779:20;1794:4;1779:10;:14;;:20;;;;:::i;:::-;1766:33;;1814:6;:15;;:27;1830:10;1814:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1850:5;;;;;;;;;;:18;;;1869:6;1884:4;1890:10;1850:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1930:21;1915:12;:36;;;;1969:77;1975:23;1992:5;;1975:12;;:16;;:23;;;;:::i;:::-;1999:5;;;;;;;;;;:15;;;2023:4;1999:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2030:15;1969:77;;;;;;;;:::i;:::-;;;;;;;;1517:539;;1449:607;;:::o;2535:360::-;2591:7;2606:19;2628:23;2645:5;;2628:12;;:16;;:23;;;;:::i;:::-;2606:45;;2658:19;2680:5;;;;;;;;;;;:15;;;2704:4;2680:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2658:52;;2717:20;2740:27;2756:10;2740:11;:15;;:27;;;;:::i;:::-;2717:50;;2774:20;2797:19;2803:12;2797:1;;:5;;:19;;;;:::i;:::-;2774:42;;2823:14;2840:29;2856:12;2840:11;:15;;:29;;;;:::i;:::-;2823:46;;2883:6;2876:13;;;;;;;2535:360;;;:::o;826:102::-;749:10;740:19;;:5;;;;;;;;;;;:19;;;732:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;917:5:::1;897:11;:17;909:4;897:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;826:102:::0;;:::o;2908:162::-;749:10;740:19;;:5;;;;;;;;;;;:19;;;732:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2967:5:::1;;;;;;;;;;;2959:23;;:46;2983:21;2959:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3012:5;::::0;::::1;;;;;;;;:14;;;3027:5;;;;;;;;;;;3033;::::0;::::1;;;;;;;;:15;;;3057:4;3033:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3012:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2908:162::o:0;936:505::-;1032:4;1005:31;;:11;:23;1017:10;1005:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;997:40;;;;;;1048:12;1063:28;1086:4;1063:18;1077:3;;1063:9;:13;;:18;;;;:::i;:::-;:22;;:28;;;;:::i;:::-;1048:43;;1114:15;1124:4;1114:5;;:9;;:15;;;;:::i;:::-;1106:5;:23;;;;1138:18;1159:19;1173:4;1159:9;:13;;:19;;;;:::i;:::-;1138:40;;1189:18;1210:19;1218:10;1210:7;:19::i;:::-;1189:40;;1244:5;;;;;;;;;;:14;;;1259:10;1270;1244:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1309:21;1294:12;:36;;;;1348:77;1354:23;1371:5;;1354:12;;:16;;:23;;;;:::i;:::-;1378:5;;;;;;;;;;:15;;;1402:4;1378:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1409:15;1348:77;;;;;;;;:::i;:::-;;;;;;;;988:453;;;936:505;:::o;3078:98::-;749:10;740:19;;:5;;;;;;;;;;;:19;;;732:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3131:5:::1;;;;;;;;;;;3123:23;;:30;3147:5;;3123:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3168:1;3160:5;:9;;;;3078:98::o:0;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:104::-;1554:7;1583:24;1601:5;1583:24;:::i;:::-;1572:35;;1509:104;;;:::o;1619:138::-;1700:32;1726:5;1700:32;:::i;:::-;1693:5;1690:43;1680:71;;1747:1;1744;1737:12;1680:71;1619:138;:::o;1763:155::-;1817:5;1855:6;1842:20;1833:29;;1871:41;1906:5;1871:41;:::i;:::-;1763:155;;;;:::o;1924:490::-;2000:6;2008;2057:2;2045:9;2036:7;2032:23;2028:32;2025:119;;;2063:79;;:::i;:::-;2025:119;2183:1;2208:61;2261:7;2252:6;2241:9;2237:22;2208:61;:::i;:::-;2198:71;;2154:125;2318:2;2344:53;2389:7;2380:6;2369:9;2365:22;2344:53;:::i;:::-;2334:63;;2289:118;1924:490;;;;;:::o;2420:96::-;2457:7;2486:24;2504:5;2486:24;:::i;:::-;2475:35;;2420:96;;;:::o;2522:122::-;2595:24;2613:5;2595:24;:::i;:::-;2588:5;2585:35;2575:63;;2634:1;2631;2624:12;2575:63;2522:122;:::o;2650:139::-;2696:5;2734:6;2721:20;2712:29;;2750:33;2777:5;2750:33;:::i;:::-;2650:139;;;;:::o;2795:90::-;2829:7;2872:5;2865:13;2858:21;2847:32;;2795:90;;;:::o;2891:116::-;2961:21;2976:5;2961:21;:::i;:::-;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;2891:116;:::o;3013:133::-;3056:5;3094:6;3081:20;3072:29;;3110:30;3134:5;3110:30;:::i;:::-;3013:133;;;;:::o;3152:468::-;3217:6;3225;3274:2;3262:9;3253:7;3249:23;3245:32;3242:119;;;3280:79;;:::i;:::-;3242:119;3400:1;3425:53;3470:7;3461:6;3450:9;3446:22;3425:53;:::i;:::-;3415:63;;3371:117;3527:2;3553:50;3595:7;3586:6;3575:9;3571:22;3553:50;:::i;:::-;3543:60;;3498:115;3152:468;;;;;:::o;3626:329::-;3685:6;3734:2;3722:9;3713:7;3709:23;3705:32;3702:119;;;3740:79;;:::i;:::-;3702:119;3860:1;3885:53;3930:7;3921:6;3910:9;3906:22;3885:53;:::i;:::-;3875:63;;3831:117;3626:329;;;;:::o;3961:169::-;4045:11;4079:6;4074:3;4067:19;4119:4;4114:3;4110:14;4095:29;;3961:169;;;;:::o;4136:182::-;4276:34;4272:1;4264:6;4260:14;4253:58;4136:182;:::o;4324:366::-;4466:3;4487:67;4551:2;4546:3;4487:67;:::i;:::-;4480:74;;4563:93;4652:3;4563:93;:::i;:::-;4681:2;4676:3;4672:12;4665:19;;4324:366;;;:::o;4696:419::-;4862:4;4900:2;4889:9;4885:18;4877:26;;4949:9;4943:4;4939:20;4935:1;4924:9;4920:17;4913:47;4977:131;5103:4;4977:131;:::i;:::-;4969:139;;4696:419;;;:::o;5121:118::-;5208:24;5226:5;5208:24;:::i;:::-;5203:3;5196:37;5121:118;;:::o;5245:222::-;5338:4;5376:2;5365:9;5361:18;5353:26;;5389:71;5457:1;5446:9;5442:17;5433:6;5389:71;:::i;:::-;5245:222;;;;:::o;5473:143::-;5530:5;5561:6;5555:13;5546:22;;5577:33;5604:5;5577:33;:::i;:::-;5473:143;;;;:::o;5622:351::-;5692:6;5741:2;5729:9;5720:7;5716:23;5712:32;5709:119;;;5747:79;;:::i;:::-;5709:119;5867:1;5892:64;5948:7;5939:6;5928:9;5924:22;5892:64;:::i;:::-;5882:74;;5838:128;5622:351;;;;:::o;5979:60::-;6007:3;6028:5;6021:12;;5979:60;;;:::o;6045:142::-;6095:9;6128:53;6146:34;6155:24;6173:5;6155:24;:::i;:::-;6146:34;:::i;:::-;6128:53;:::i;:::-;6115:66;;6045:142;;;:::o;6193:126::-;6243:9;6276:37;6307:5;6276:37;:::i;:::-;6263:50;;6193:126;;;:::o;6325:134::-;6383:9;6416:37;6447:5;6416:37;:::i;:::-;6403:50;;6325:134;;;:::o;6465:147::-;6560:45;6599:5;6560:45;:::i;:::-;6555:3;6548:58;6465:147;;:::o;6618:238::-;6719:4;6757:2;6746:9;6742:18;6734:26;;6770:79;6846:1;6835:9;6831:17;6822:6;6770:79;:::i;:::-;6618:238;;;;:::o;6862:458::-;7019:4;7057:2;7046:9;7042:18;7034:26;;7070:79;7146:1;7135:9;7131:17;7122:6;7070:79;:::i;:::-;7159:72;7227:2;7216:9;7212:18;7203:6;7159:72;:::i;:::-;7241;7309:2;7298:9;7294:18;7285:6;7241:72;:::i;:::-;6862:458;;;;;;:::o;7326:137::-;7380:5;7411:6;7405:13;7396:22;;7427:30;7451:5;7427:30;:::i;:::-;7326:137;;;;:::o;7469:345::-;7536:6;7585:2;7573:9;7564:7;7560:23;7556:32;7553:119;;;7591:79;;:::i;:::-;7553:119;7711:1;7736:61;7789:7;7780:6;7769:9;7765:22;7736:61;:::i;:::-;7726:71;;7682:125;7469:345;;;;:::o;7820:442::-;7969:4;8007:2;7996:9;7992:18;7984:26;;8020:71;8088:1;8077:9;8073:17;8064:6;8020:71;:::i;:::-;8101:72;8169:2;8158:9;8154:18;8145:6;8101:72;:::i;:::-;8183;8251:2;8240:9;8236:18;8227:6;8183:72;:::i;:::-;7820:442;;;;;;:::o;8268:332::-;8389:4;8427:2;8416:9;8412:18;8404:26;;8440:71;8508:1;8497:9;8493:17;8484:6;8440:71;:::i;:::-;8521:72;8589:2;8578:9;8574:18;8565:6;8521:72;:::i;:::-;8268:332;;;;;:::o;8606:180::-;8654:77;8651:1;8644:88;8751:4;8748:1;8741:15;8775:4;8772:1;8765:15;8792:191;8832:4;8852:20;8870:1;8852:20;:::i;:::-;8847:25;;8886:20;8904:1;8886:20;:::i;:::-;8881:25;;8925:1;8922;8919:8;8916:34;;;8930:18;;:::i;:::-;8916:34;8975:1;8972;8968:9;8960:17;;8792:191;;;;:::o;8989:305::-;9029:3;9048:20;9066:1;9048:20;:::i;:::-;9043:25;;9082:20;9100:1;9082:20;:::i;:::-;9077:25;;9236:1;9168:66;9164:74;9161:1;9158:81;9155:107;;;9242:18;;:::i;:::-;9155:107;9286:1;9283;9279:9;9272:16;;8989:305;;;;:::o;9300:180::-;9348:77;9345:1;9338:88;9445:4;9442:1;9435:15;9469:4;9466:1;9459:15;9486:185;9526:1;9543:20;9561:1;9543:20;:::i;:::-;9538:25;;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9616:1;9606:35;;9621:18;;:::i;:::-;9606:35;9663:1;9660;9656:9;9651:14;;9486:185;;;;:::o;9677:348::-;9717:7;9740:20;9758:1;9740:20;:::i;:::-;9735:25;;9774:20;9792:1;9774:20;:::i;:::-;9769:25;;9962:1;9894:66;9890:74;9887:1;9884:81;9879:1;9872:9;9865:17;9861:105;9858:131;;;9969:18;;:::i;:::-;9858:131;10017:1;10014;10010:9;9999:20;;9677:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1139200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"admin_fee()": "infinite",
								"deposit(address)": "infinite",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27161",
								"viewAdminFee()": "6789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 261,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "58D3A4CB28F30D9C87E8F79544F98F358CDE6227"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 626,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 626,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 490,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 490,
									"end": 626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 549,
									"end": 559,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 541,
									"end": 546,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 541,
									"end": 546,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 541,
									"end": 559,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 581,
									"end": 590,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 566,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 566,
									"end": 590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 566,
									"end": 590,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 566,
									"end": 590,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 597,
									"end": 598,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 603,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 597,
									"end": 603,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 597,
									"end": 603,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 597,
									"end": 603,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 616,
									"end": 620,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 610,
									"end": 620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 490,
									"end": 626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 3361,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220197c1ea7c673895fcbe8257d217e9dfa2994c15665a8465e4109475d0acfc11a64736f6c634300080f0033",
									".code": [
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "F340FA01"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "FEE3F7F9"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "1758D6F3"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3361,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3182,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3182,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2064,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2064,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1449,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1449,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2535,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2535,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2535,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 826,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 826,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2908,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 936,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 936,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3078,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 732,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3252,
											"end": 3333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3284,
											"end": 3296,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3252,
											"end": 3333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3325,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 807,
											"end": 808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 807,
											"end": 808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3182,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2233,
											"end": 2237,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2209,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2209,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2209,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2289,
											"end": 2299,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2284,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2273,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2327,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2346,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2309,
											"end": 2398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2371,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2371,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2309,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2429,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2483,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2472,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2501,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1545,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1534,
											"end": 1557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1526,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1583,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1583,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1620,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1575,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1711,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1711,
											"end": 1714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1706,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1696,
											"end": 1710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1696,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1734,
											"end": 1757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1757,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1779,
											"end": 1793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1779,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1869,
											"end": 1875,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1900,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1850,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1951,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1915,
											"end": 1951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1951,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6"
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1975,
											"end": 1991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2014,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1999,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1999,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1999,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2045,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1969,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2046,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 2056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2628,
											"end": 2640,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2628,
											"end": 2644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2695,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2704,
											"end": 2708,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2680,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2680,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2680,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2751,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2803,
											"end": 2815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 826,
											"end": 928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 732,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 897,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 897,
											"end": 922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2908,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 732,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 2982,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2983,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 3005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 3005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 3057,
											"end": 3061,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3033,
											"end": 3063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3033,
											"end": 3063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3033,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3012,
											"end": 3064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3012,
											"end": 3064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 3070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1016,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1027,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1005,
											"end": 1028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1036,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 997,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1086,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1063,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1063,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1063,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1063,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1114,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1173,
											"end": 1177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1159,
											"end": 1172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1159,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1229,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1210,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1244,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1244,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1330,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1294,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1330,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "2071A9F40FDEF4EA79C384BE80FD89A3C0CEC179FB2BDC12DB4DCEC9D3F246C6"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1371,
											"end": 1376,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1378,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1378,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1424,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1348,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1425,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3078,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 740,
											"end": 759,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 732,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 732,
											"end": 796,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 732,
											"end": 796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 3147,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3147,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3160,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1583,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1700,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1733,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1680,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1862,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1906,
											"end": 1911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1871,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1871,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2063,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2063,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2025,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2261,
											"end": 2268,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2208,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2208,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2344,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2344,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2486,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2595,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2620,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2750,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2878,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2961,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2983,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3101,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3110,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3272,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3280,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3425,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3553,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3720,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3709,
											"end": 3732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3737,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3821,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3702,
											"end": 3821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3740,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3740,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3819,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3740,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3821,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3702,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3885,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4110,
											"end": 4124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4136,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4551,
											"end": 4553,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4487,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4652,
											"end": 4655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4563,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5103,
											"end": 5107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4977,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 5108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 5108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5239,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5121,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5226,
											"end": 5231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5208,
											"end": 5232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5232,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5208,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5233,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5389,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5389,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5604,
											"end": 5609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5577,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5610,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5577,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5739,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 5744,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5709,
											"end": 5828,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5747,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5747,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5826,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5747,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5828,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5709,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5948,
											"end": 5955,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5946,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5892,
											"end": 5956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5892,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5882,
											"end": 5956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5882,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5838,
											"end": 5966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6155,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6155,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6146,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6146,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6128,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6115,
											"end": 6181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6115,
											"end": 6181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6307,
											"end": 6312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6276,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6276,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6263,
											"end": 6313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6263,
											"end": 6313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6459,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6325,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6447,
											"end": 6452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6416,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6416,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6403,
											"end": 6453,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6403,
											"end": 6453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6612,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6465,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6599,
											"end": 6604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6560,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6605,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6560,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6770,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6770,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7059,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7046,
											"end": 7055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7034,
											"end": 7060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7034,
											"end": 7060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7070,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7070,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7209,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7159,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7231,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7159,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7291,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7241,
											"end": 7313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7313,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7241,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 7320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7418,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7451,
											"end": 7456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7427,
											"end": 7457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7457,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7427,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7326,
											"end": 7463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7588,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7672,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7553,
											"end": 7672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7591,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7591,
											"end": 7670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7670,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7591,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7672,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7553,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7736,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7736,
											"end": 7797,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7736,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7682,
											"end": 7807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7469,
											"end": 7814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7969,
											"end": 7973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8009,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7996,
											"end": 8005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8020,
											"end": 8091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8020,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 8169,
											"end": 8171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8158,
											"end": 8167,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8145,
											"end": 8151,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8101,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8173,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 8101,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8249,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8227,
											"end": 8233,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8183,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8255,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8183,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7820,
											"end": 8262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8493,
											"end": 8510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 8440,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8587,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8521,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8593,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8521,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8606,
											"end": 8786,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8606,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 8731,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8751,
											"end": 8755,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8741,
											"end": 8756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8779,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8780,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8832,
											"end": 8836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8852,
											"end": 8872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8886,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 8904,
											"end": 8905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8886,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8886,
											"end": 8906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8886,
											"end": 8906,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 8886,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 8906,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 8906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8925,
											"end": 8926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8919,
											"end": 8927,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8916,
											"end": 8950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8916,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 8916,
											"end": 8950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8930,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8916,
											"end": 8950,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 8916,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 8977,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9029,
											"end": 9032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9048,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9048,
											"end": 9068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9048,
											"end": 9068,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9048,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9043,
											"end": 9068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9043,
											"end": 9068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9100,
											"end": 9101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9082,
											"end": 9102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9102,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9082,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9102,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9168,
											"end": 9234,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9164,
											"end": 9238,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9158,
											"end": 9239,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9155,
											"end": 9262,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9155,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 9155,
											"end": 9262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9242,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9155,
											"end": 9262,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 9155,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9272,
											"end": 9288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9272,
											"end": 9288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9300,
											"end": 9480,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 9300,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9348,
											"end": 9425,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9345,
											"end": 9346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9435,
											"end": 9450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9469,
											"end": 9473,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9466,
											"end": 9467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9474,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 9561,
											"end": 9562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9543,
											"end": 9563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9577,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9572,
											"end": 9597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9572,
											"end": 9597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 9606,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9665,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9740,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9740,
											"end": 9760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9740,
											"end": 9760,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9740,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9735,
											"end": 9760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9735,
											"end": 9760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 9792,
											"end": 9793,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9774,
											"end": 9794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9774,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 9774,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9769,
											"end": 9794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9962,
											"end": 9963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9894,
											"end": 9960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9890,
											"end": 9964,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9965,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9872,
											"end": 9881,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9882,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9861,
											"end": 9966,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9858,
											"end": 9989,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9858,
											"end": 9989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 9858,
											"end": 9989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9969,
											"end": 9987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9969,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9858,
											"end": 9989,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 9858,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10010,
											"end": 10019,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9677,
											"end": 10025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"admin_fee()": "fee3f7f9",
							"deposit(address)": "f340fa01",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"viewAdminFee()": "1758d6f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dcf_pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"price\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin_fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewAdminFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0x1466572f18851adc2b651a662716d39dbea1a5dc3acd123141ad1589983085e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91357afb4ef4eec8161064feba00067836bd2fab45d7bac9720bc414adaf2378\",\"dweb:/ipfs/QmbjwVqgHp3PhZsSX3RkeVqooSA37gEWL5o2pzk7xJmmdF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 406,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "fee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 408,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "last_balance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 410,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "admin",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 446,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 450,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							832
						]
					},
					"id": 833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 833,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 833,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 832,
							"linearizedBaseContracts": [
								832
							],
							"name": "treasury",
							"nameLocation": "192:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "212:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "206:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "225:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "245:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "238:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "238:6:2"
										},
										"referencedDeclaration": 77,
										"src": "238:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835386433613463623238663330643943383745384637393534346639384633353863646536323237",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "261:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x58d3a4cb28f30d9C87E8F79544f98F358cde6227"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "254:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "254:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "329:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "313:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 406,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "351:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "335:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "last_balance",
									"nameLocation": "375:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "359:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 407,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "408:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "392:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2071a9f40fdef4ea79c384be80fd89a3c0cec179fb2bdc12db4dcec9d3f246c6",
									"id": 418,
									"name": "price",
									"nameLocation": "424:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_pool",
												"nameLocation": "435:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "430:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "dcf_pool",
												"nameLocation": "450:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "465:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "460:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:46:2"
									},
									"src": "418:58:2"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "534:92:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "541:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 426,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "549:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "549:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "541:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "541:18:2"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "566:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 431,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "581:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "581:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "566:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "566:24:2"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "597:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "601:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "597:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "597:6:2"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "610:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "616:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "610:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "610:10:2"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "510:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "502:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "522:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "514:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:26:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:0:2"
									},
									"scope": 832,
									"src": "490:136:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "640:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "632:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "682:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 832,
									"src": "650:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 449,
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "658:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "650:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 448,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "669:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "721:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 453,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "740:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 454,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "749:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "749:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "740:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "732:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "732:64:2"
											},
											{
												"id": 460,
												"nodeType": "PlaceholderStatement",
												"src": "807:1:2"
											}
										]
									},
									"id": 462,
									"name": "onlyOwner",
									"nameLocation": "709:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:2:2"
									},
									"src": "700:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "888:40:2",
										"statements": [
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 471,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "897:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 473,
														"indexExpression": {
															"id": 472,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "897:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 474,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "917:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "897:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "897:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 468,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "879:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "879:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "835:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "853:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "845:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "864:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "859:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:26:2"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:2"
									},
									"scope": 832,
									"src": "826:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "988:453:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 484,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1005:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"expression": {
																		"id": 485,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1017:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1017:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1005:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1032:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1005:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "997:40:2"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1056:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1048:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1048:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1086:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 497,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 494,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1063:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1063:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1063:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1063:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1063:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1048:43:2"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1106:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 506,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1124:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 504,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1114:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1114:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1114:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1106:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1106:23:2"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1146:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1138:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1138:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"arguments": [
														{
															"id": 515,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1173:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 512,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1159:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1159:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1159:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1159:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:40:2"
											},
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1197:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "1189:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1189:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "1218:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "1210:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1189:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "1259:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1270:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 524,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1244:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1244:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "1244:37:2"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 531,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1294:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 534,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1309:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1309:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1309:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1309:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1294:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1294:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 542,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "1371:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 540,
																	"name": "last_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "1354:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "1354:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1354:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 548,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1402:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1394:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 546,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1394:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1394:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 544,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "1378:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1378:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1378:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 551,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1409:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1409:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1348:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "1343:82:2"
											}
										]
									},
									"functionSelector": "f340fa01",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "945:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "961:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "953:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:20:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 832,
									"src": "936:505:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "1517:539:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 564,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1534:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 567,
																"indexExpression": {
																	"expression": {
																		"id": 565,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1546:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1546:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1534:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1561:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1526:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1526:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 575,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "1599:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 573,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "1583:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1583:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1583:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 577,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "1610:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1583:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1575:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "1575:46:2"
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1640:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "1632:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1632:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"id": 584,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1661:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "1653:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1653:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1632:40:2"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1689:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "1681:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1681:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1720:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 591,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1711:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 589,
																	"name": "eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1696:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1696:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1696:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1696:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1681:44:2"
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 597,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1734:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 600,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "1752:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 598,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1742:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1742:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1734:23:2"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 604,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1766:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 607,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "1794:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 605,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "1779:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1779:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1779:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1766:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1766:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "1830:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 611,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1814:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1814:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1814:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1814:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1869:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 623,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1884:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1876:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1876:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1876:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1890:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 617,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1850:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1850:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1850:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "1850:51:2"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1915:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 631,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1938:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1930:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1930:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1930:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1930:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1915:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1915:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 639,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "1992:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 637,
																	"name": "last_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "1975:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "1975:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1975:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 645,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2023:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2015:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 643,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2015:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2015:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "1999:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1999:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1999:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 648,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2030:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2030:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1969:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "EmitStatement",
												"src": "1964:82:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1458:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1481:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1465:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1497:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1489:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:44:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:2"
									},
									"scope": 832,
									"src": "1449:607:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2128:399:2",
										"statements": [
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "2143:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2135:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2135:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2174:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 662,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2157:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2157:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2135:45:2"
											},
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2195:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2187:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2187:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 673,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2233:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2225:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2225:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2225:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 669,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2209:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2209:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2187:52:2"
											},
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "2258:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2250:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2250:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 681,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "2289:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 679,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "2273:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "2273:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2250:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2312:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 685,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2327:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "2327:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2327:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2312:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"nodeType": "IfStatement",
												"src": "2309:89:2",
												"trueBody": {
													"id": 695,
													"nodeType": "Block",
													"src": "2347:51:2",
													"statements": [
														{
															"expression": {
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 689,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "2356:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 690,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "2371:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "2371:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2371:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2356:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "2356:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2414:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2406:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"arguments": [
														{
															"id": 701,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2435:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 699,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2429:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2429:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2429:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2406:42:2"
											},
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2463:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2455:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2455:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [
														{
															"id": 708,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "2488:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 706,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2472:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2472:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2455:46:2"
											},
											{
												"expression": {
													"id": 711,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 705,
													"src": "2515:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 659,
												"id": 712,
												"nodeType": "Return",
												"src": "2508:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "2073:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "2089:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2081:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:20:2"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2120:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:9:2"
									},
									"scope": 832,
									"src": "2064:463:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2599:296:2",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "2614:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2606:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2606:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"arguments": [
														{
															"id": 725,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2645:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 723,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2628:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2628:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2628:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2606:45:2"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2666:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2658:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 734,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2704:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$832",
																		"typeString": "contract treasury"
																	}
																],
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2696:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 732,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2696:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2696:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 730,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2680:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2658:52:2"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2725:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2717:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2717:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"id": 742,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "2756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 740,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "2740:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "2740:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2740:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2717:50:2"
											},
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "2782:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2774:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"id": 749,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "2803:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 747,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2797:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2797:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2797:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:42:2"
											},
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2831:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "2823:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"id": 756,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 754,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "2840:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2840:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2840:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:46:2"
											},
											{
												"expression": {
													"id": 759,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 753,
													"src": "2883:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 760,
												"nodeType": "Return",
												"src": "2876:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "2544:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "2560:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2552:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:20:2"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2591:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:9:2"
									},
									"scope": 832,
									"src": "2535:360:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2952:118:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 774,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2991:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$832",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$832",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2983:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 772,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2983:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2983:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2983:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 769,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "2967:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2959:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 767,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2959:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2959:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2959:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2959:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2959:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3027:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 787,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3057:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$832",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3049:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 785,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3049:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3049:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "3033:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3033:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3033:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 779,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3012:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3012:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "3012:52:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 765,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2943:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2943:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "2917:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:2:2"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:0:2"
									},
									"scope": 832,
									"src": "2908:162:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "3116:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 800,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "3131:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3123:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3123:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3123:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3123:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "3123:30:2"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "3160:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3168:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3160:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3160:9:2"
											}
										]
									},
									"functionSelector": "fee3f7f9",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 796,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 795,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3107:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3107:9:2"
										}
									],
									"name": "admin_fee",
									"nameLocation": "3087:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3096:2:2"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3116:0:2"
									},
									"scope": 832,
									"src": "3078:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "3245:93:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 818,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3255:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 819,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3264:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3264:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3255:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "3308:25:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 825,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3317:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3317:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "3317:8:2"
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "3252:81:2",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "3275:29:2",
													"statements": [
														{
															"expression": {
																"id": 822,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "3291:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 817,
															"id": 823,
															"nodeType": "Return",
															"src": "3284:12:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1758d6f3",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 814,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 813,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3214:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3214:9:2"
										}
									],
									"name": "viewAdminFee",
									"nameLocation": "3191:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3203:2:2"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3237:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:9:2"
									},
									"scope": 832,
									"src": "3182:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 833,
							"src": "183:3178:2",
							"usedErrors": []
						}
					],
					"src": "33:3328:2"
				},
				"id": 2
			}
		}
	}
}