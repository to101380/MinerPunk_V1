{
	"id": "04f3385e86814c6fcaff8878f90bb592",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/ERC20/MinePower.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n// SPDX-License-Identifier: MIT\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    using SafeMath for uint;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    uint256 internal _TokenperBlock;\n\n    uint256 internal _startBlockNumber;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n\n      \n    mapping(address => mapping(uint256 => uint256))private _mineInfo;\n     /**\n     *[user][1] = last_block     \n     *[user][3] = accumulation_DCF    \n    */ \n\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _TokenperBlock = 5e18;\n        _startBlockNumber = block.number;\n    }\n\n\n\n    function MineStatus(address user)public view  returns(uint256){\n        uint256 difference = block.number.sub(_mineInfo[user][1]);\n        uint256 start = blockStatus(_mineInfo[user][1]);\n        uint256 end = blockStatus(block.number);\n        uint256 mined_area = start.add(end).mul(difference).div(2);\n        //All TOKENs that are connected and mined in these two regions\n        \n        uint dcf_amount = mined_area.mul(balanceOf(user)).div(_totalSupply);\n        return _mineInfo[user][3].add(dcf_amount);       \n    }\n   \n\n    // The number of DCF that can be mined in this Block\n    function blockStatus (uint256 _BlockNumber)public view  returns (uint256){\n        if(_BlockNumber < _startBlockNumber){\n            _BlockNumber = _startBlockNumber;\n        }\n        uint256 DCFperBlock = _TokenperBlock.mul(1e54);           \n        uint256 BlockDifficult = difficult(_BlockNumber);     \n        uint256 DugUP = DCFperBlock.div(BlockDifficult);\n        return DugUP;    \n    }\n\n\n    function difficult(uint _BlockNumber)public view  returns (uint256){\n        uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber);\n        BlockDifficult=BlockDifficult.mul(BlockDifficult).mul(BlockDifficult);\n        return BlockDifficult;\n    }    \n   \n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n        \n        _mineInfo[from][1]=block.number;\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n\n// File: minerpunk/ERC20/Power.sol\n\n\npragma solidity ^0.8.4;\n\n\n\ncontract DCOFF is ERC20,ERC20Burnable{\n    constructor() ERC20(\"Power\", \"Power\") {\n        _mint(msg.sender, 60000000 * 10 ** decimals());\n    }    \n\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC20/MinePower.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC20/MinePower.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DCOFF": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/ERC20/MinePower.sol\":19861:20012  contract DCOFF is ERC20,ERC20Burnable{... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/ERC20/MinePower.sol\":19904:20005  constructor() ERC20(\"Power\", \"Power\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6641:6827  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x506f776572000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x506f776572000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6715:6720  name_ */\n  dup2\n    /* \"minerpunk/ERC20/MinePower.sol\":6707:6712  _name */\n  0x05\n    /* \"minerpunk/ERC20/MinePower.sol\":6707:6720  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6740:6747  symbol_ */\n  dup1\n    /* \"minerpunk/ERC20/MinePower.sol\":6730:6737  _symbol */\n  0x06\n    /* \"minerpunk/ERC20/MinePower.sol\":6730:6747  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6774:6778  5e18 */\n  0x4563918244f40000\n    /* \"minerpunk/ERC20/MinePower.sol\":6757:6771  _TokenperBlock */\n  0x03\n    /* \"minerpunk/ERC20/MinePower.sol\":6757:6778  _TokenperBlock = 5e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6808:6820  block.number */\n  number\n    /* \"minerpunk/ERC20/MinePower.sol\":6788:6805  _startBlockNumber */\n  0x04\n    /* \"minerpunk/ERC20/MinePower.sol\":6788:6820  _startBlockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6641:6827  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":19952:19998  _mint(msg.sender, 60000000 * 10 ** decimals()) */\n  tag_9\n    /* \"minerpunk/ERC20/MinePower.sol\":19958:19968  msg.sender */\n  caller\n    /* \"minerpunk/ERC20/MinePower.sol\":19987:19997  decimals() */\n  tag_10\n    /* \"minerpunk/ERC20/MinePower.sol\":19987:19995  decimals */\n  shl(0x20, tag_11)\n    /* \"minerpunk/ERC20/MinePower.sol\":19987:19997  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"minerpunk/ERC20/MinePower.sol\":19981:19983  10 */\n  0x0a\n    /* \"minerpunk/ERC20/MinePower.sol\":19981:19997  10 ** decimals() */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"minerpunk/ERC20/MinePower.sol\":19970:19978  60000000 */\n  0x03938700\n    /* \"minerpunk/ERC20/MinePower.sol\":19970:19997  60000000 * 10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"minerpunk/ERC20/MinePower.sol\":19952:19957  _mint */\n  shl(0x20, tag_16)\n    /* \"minerpunk/ERC20/MinePower.sol\":19952:19998  _mint(msg.sender, 60000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"minerpunk/ERC20/MinePower.sol\":19861:20012  contract DCOFF is ERC20,ERC20Burnable{... */\n  jump(tag_17)\n    /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\ntag_11:\n    /* \"minerpunk/ERC20/MinePower.sol\":9156:9161  uint8 */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":9180:9182  18 */\n  0x12\n    /* \"minerpunk/ERC20/MinePower.sol\":9173:9182  return 18 */\n  swap1\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"minerpunk/ERC20/MinePower.sol\":14457:14846  function _mint(address account, uint256 amount) internal virtual {... */\ntag_16:\n    /* \"minerpunk/ERC20/MinePower.sol\":14559:14560  0 */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14540:14561  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"minerpunk/ERC20/MinePower.sol\":14540:14547  account */\n  dup3\n    /* \"minerpunk/ERC20/MinePower.sol\":14540:14561  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"minerpunk/ERC20/MinePower.sol\":14532:14597  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"minerpunk/ERC20/MinePower.sol\":14608:14657  _beforeTokenTransfer(address(0), account, amount) */\n  tag_23\n    /* \"minerpunk/ERC20/MinePower.sol\":14637:14638  0 */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14641:14648  account */\n  dup4\n    /* \"minerpunk/ERC20/MinePower.sol\":14650:14656  amount */\n  dup4\n    /* \"minerpunk/ERC20/MinePower.sol\":14608:14628  _beforeTokenTransfer */\n  shl(0x20, tag_24)\n    /* \"minerpunk/ERC20/MinePower.sol\":14608:14657  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"minerpunk/ERC20/MinePower.sol\":14684:14690  amount */\n  dup1\n    /* \"minerpunk/ERC20/MinePower.sol\":14668:14680  _totalSupply */\n  0x02\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14668:14690  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":14722:14728  amount */\n  dup1\n    /* \"minerpunk/ERC20/MinePower.sol\":14700:14709  _balances */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14700:14718  _balances[account] */\n  dup1\n    /* \"minerpunk/ERC20/MinePower.sol\":14710:14717  account */\n  dup5\n    /* \"minerpunk/ERC20/MinePower.sol\":14700:14718  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14700:14728  _balances[account] += amount */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":14764:14771  account */\n  dup2\n    /* \"minerpunk/ERC20/MinePower.sol\":14743:14780  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"minerpunk/ERC20/MinePower.sol\":14760:14761  0 */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14743:14780  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"minerpunk/ERC20/MinePower.sol\":14773:14779  amount */\n  dup4\n    /* \"minerpunk/ERC20/MinePower.sol\":14743:14780  Transfer(address(0), account, amount) */\n  mload(0x40)\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"minerpunk/ERC20/MinePower.sol\":14791:14839  _afterTokenTransfer(address(0), account, amount) */\n  tag_30\n    /* \"minerpunk/ERC20/MinePower.sol\":14819:14820  0 */\n  0x00\n    /* \"minerpunk/ERC20/MinePower.sol\":14823:14830  account */\n  dup4\n    /* \"minerpunk/ERC20/MinePower.sol\":14832:14838  amount */\n  dup4\n    /* \"minerpunk/ERC20/MinePower.sol\":14791:14810  _afterTokenTransfer */\n  shl(0x20, tag_31)\n    /* \"minerpunk/ERC20/MinePower.sol\":14791:14839  _afterTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"minerpunk/ERC20/MinePower.sol\":14457:14846  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC20/MinePower.sol\":17841:17962  function _beforeTokenTransfer(... */\ntag_24:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC20/MinePower.sol\":18550:18670  function _afterTokenTransfer(... */\ntag_31:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_34:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_35:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_36:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_37:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_68:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_70\n  tag_36\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":714:798   */\ntag_69:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_38:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_39:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_40:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_41:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_75\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1429:1468   */\n  tag_76\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_42:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_43:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_44:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_80\n    /* \"#utility.yul\":1818:1852   */\n  tag_81\n    /* \"#utility.yul\":1827:1851   */\n  tag_82\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_42\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1818:1852   */\n  tag_43\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1800:1853   */\n  tag_42\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_45:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_46:\n    /* \"#utility.yul\":2056:2095   */\n  tag_85\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_44\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2117:2208   */\n  tag_86\n    /* \"#utility.yul\":2166:2207   */\n  tag_87\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_45\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_41\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_47:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_48:\n    /* \"#utility.yul\":2377:2409   */\n  tag_90\n  tag_47\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2418:2483   */\n  tag_91\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_46\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_49:\n    /* \"#utility.yul\":2555:2675   */\ntag_93:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_96\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_48\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_50:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_99\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_38\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2906:2935   */\n  tag_100\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_39\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_101:\n    /* \"#utility.yul\":3133:3213   */\n  tag_102\n    /* \"#utility.yul\":3189:3211   */\n  tag_103\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_39\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_49\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_98:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_51:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_52:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_106\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_51\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_53:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_108\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_110\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_112\n  tag_35\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4038:4094   */\ntag_111:\n    /* \"#utility.yul\":4118:4156   */\n  tag_113\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_37\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4203:4270   */\n  tag_114\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_50\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_117:\n    /* \"#utility.yul\":5144:5211   */\n  tag_118\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_53\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_115)\n    /* \"#utility.yul\":4365:4983   */\ntag_116:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_119\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_120:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_124\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_52\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_123:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_115:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_54:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_55:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_56:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_128:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_132\n  tag_54\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5753:5803   */\ntag_131:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_133:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_134\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_55\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_57:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_135)\n    /* \"#utility.yul\":6617:6657   */\ntag_136:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_135)\n    /* \"#utility.yul\":6666:6702   */\ntag_137:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_138)\n    /* \"#utility.yul\":6805:6832   */\ntag_139:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_135)\n    /* \"#utility.yul\":6841:7032   */\ntag_140:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_142\n  tag_54\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6870:6913   */\ntag_141:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_144\n  tag_54\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6964:7004   */\ntag_143:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_135)\n    /* \"#utility.yul\":6755:7032   */\ntag_138:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_147\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7219:7259   */\ntag_146:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_135)\n    /* \"#utility.yul\":7041:7287   */\ntag_145:\n    /* \"#utility.yul\":7312:7354   */\n  tag_148\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_56\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_150\n  tag_54\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7364:7415   */\ntag_149:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_135:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_58:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_13:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_153\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_42\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_154\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_58\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_155\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_57\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_15:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_157\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_42\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_158\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_42\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_159\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_42\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_161\n  tag_54\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8104:8243   */\ntag_160:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8425   */\ntag_59:\n    /* \"#utility.yul\":8340:8351   */\n  0x00\n    /* \"#utility.yul\":8374:8380   */\n  dup3\n    /* \"#utility.yul\":8369:8372   */\n  dup3\n    /* \"#utility.yul\":8362:8381   */\n  mstore\n    /* \"#utility.yul\":8414:8418   */\n  0x20\n    /* \"#utility.yul\":8409:8412   */\n  dup3\n    /* \"#utility.yul\":8405:8419   */\n  add\n    /* \"#utility.yul\":8390:8419   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8425   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8431:8612   */\ntag_60:\n    /* \"#utility.yul\":8571:8604   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":8567:8568   */\n  0x00\n    /* \"#utility.yul\":8559:8565   */\n  dup3\n    /* \"#utility.yul\":8555:8569   */\n  add\n    /* \"#utility.yul\":8548:8605   */\n  mstore\n    /* \"#utility.yul\":8431:8612   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8618:8984   */\ntag_61:\n    /* \"#utility.yul\":8760:8763   */\n  0x00\n    /* \"#utility.yul\":8781:8848   */\n  tag_165\n    /* \"#utility.yul\":8845:8847   */\n  0x1f\n    /* \"#utility.yul\":8840:8843   */\n  dup4\n    /* \"#utility.yul\":8781:8848   */\n  tag_59\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8774:8848   */\n  swap2\n  pop\n    /* \"#utility.yul\":8857:8950   */\n  tag_166\n    /* \"#utility.yul\":8946:8949   */\n  dup3\n    /* \"#utility.yul\":8857:8950   */\n  tag_60\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8975:8977   */\n  0x20\n    /* \"#utility.yul\":8970:8973   */\n  dup3\n    /* \"#utility.yul\":8966:8978   */\n  add\n    /* \"#utility.yul\":8959:8978   */\n  swap1\n  pop\n    /* \"#utility.yul\":8618:8984   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8990:9409   */\ntag_22:\n    /* \"#utility.yul\":9156:9160   */\n  0x00\n    /* \"#utility.yul\":9194:9196   */\n  0x20\n    /* \"#utility.yul\":9183:9192   */\n  dup3\n    /* \"#utility.yul\":9179:9197   */\n  add\n    /* \"#utility.yul\":9171:9197   */\n  swap1\n  pop\n    /* \"#utility.yul\":9243:9252   */\n  dup2\n    /* \"#utility.yul\":9237:9241   */\n  dup2\n    /* \"#utility.yul\":9233:9253   */\n  sub\n    /* \"#utility.yul\":9229:9230   */\n  0x00\n    /* \"#utility.yul\":9218:9227   */\n  dup4\n    /* \"#utility.yul\":9214:9231   */\n  add\n    /* \"#utility.yul\":9207:9254   */\n  mstore\n    /* \"#utility.yul\":9271:9402   */\n  tag_168\n    /* \"#utility.yul\":9397:9401   */\n  dup2\n    /* \"#utility.yul\":9271:9402   */\n  tag_61\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":9263:9402   */\n  swap1\n  pop\n    /* \"#utility.yul\":8990:9409   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9415:9606   */\ntag_26:\n    /* \"#utility.yul\":9455:9458   */\n  0x00\n    /* \"#utility.yul\":9474:9494   */\n  tag_170\n    /* \"#utility.yul\":9492:9493   */\n  dup3\n    /* \"#utility.yul\":9474:9494   */\n  tag_42\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":9469:9494   */\n  swap2\n  pop\n    /* \"#utility.yul\":9508:9528   */\n  tag_171\n    /* \"#utility.yul\":9526:9527   */\n  dup4\n    /* \"#utility.yul\":9508:9528   */\n  tag_42\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":9503:9528   */\n  swap3\n  pop\n    /* \"#utility.yul\":9551:9552   */\n  dup3\n    /* \"#utility.yul\":9548:9549   */\n  dup3\n    /* \"#utility.yul\":9544:9553   */\n  add\n    /* \"#utility.yul\":9537:9553   */\n  swap1\n  pop\n    /* \"#utility.yul\":9572:9575   */\n  dup1\n    /* \"#utility.yul\":9569:9570   */\n  dup3\n    /* \"#utility.yul\":9566:9576   */\n  gt\n    /* \"#utility.yul\":9563:9599   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":9579:9597   */\n  tag_173\n  tag_54\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":9563:9599   */\ntag_172:\n    /* \"#utility.yul\":9415:9606   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9612:9730   */\ntag_62:\n    /* \"#utility.yul\":9699:9723   */\n  tag_175\n    /* \"#utility.yul\":9717:9722   */\n  dup2\n    /* \"#utility.yul\":9699:9723   */\n  tag_42\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9694:9697   */\n  dup3\n    /* \"#utility.yul\":9687:9724   */\n  mstore\n    /* \"#utility.yul\":9612:9730   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9736:9958   */\ntag_29:\n    /* \"#utility.yul\":9829:9833   */\n  0x00\n    /* \"#utility.yul\":9867:9869   */\n  0x20\n    /* \"#utility.yul\":9856:9865   */\n  dup3\n    /* \"#utility.yul\":9852:9870   */\n  add\n    /* \"#utility.yul\":9844:9870   */\n  swap1\n  pop\n    /* \"#utility.yul\":9880:9951   */\n  tag_177\n    /* \"#utility.yul\":9948:9949   */\n  0x00\n    /* \"#utility.yul\":9937:9946   */\n  dup4\n    /* \"#utility.yul\":9933:9950   */\n  add\n    /* \"#utility.yul\":9924:9930   */\n  dup5\n    /* \"#utility.yul\":9880:9951   */\n  tag_62\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9736:9958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC20/MinePower.sol\":19861:20012  contract DCOFF is ERC20,ERC20Burnable{... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/ERC20/MinePower.sol\":19861:20012  contract DCOFF is ERC20,ERC20Burnable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb8ba6007\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd993226b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4be3403c\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":19237:19326  function burn(uint256 amount) public virtual {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":19632:19793  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"minerpunk/ERC20/MinePower.sol\":8215:8228  string memory */\n      0x60\n        /* \"minerpunk/ERC20/MinePower.sol\":8247:8252  _name */\n      0x05\n        /* \"minerpunk/ERC20/MinePower.sol\":8240:8252  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"minerpunk/ERC20/MinePower.sol\":10521:10525  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10537:10550  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10565  _msgSender() */\n      tag_97\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10563  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10565  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"minerpunk/ERC20/MinePower.sol\":10537:10565  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10607  _approve(owner, spender, amount) */\n      tag_99\n        /* \"minerpunk/ERC20/MinePower.sol\":10584:10589  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":10591:10598  spender */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":10600:10606  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10583  _approve */\n      tag_100\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10607  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_99:\n        /* \"minerpunk/ERC20/MinePower.sol\":10624:10628  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":10617:10628  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n        /* \"minerpunk/ERC20/MinePower.sol\":9310:9317  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9336:9348  _totalSupply */\n      sload(0x02)\n        /* \"minerpunk/ERC20/MinePower.sol\":9329:9348  return _totalSupply */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n    tag_39:\n        /* \"minerpunk/ERC20/MinePower.sol\":11324:11328  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":11340:11355  address spender */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11370  _msgSender() */\n      tag_103\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11368  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11370  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"minerpunk/ERC20/MinePower.sol\":11340:11370  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11418  _spendAllowance(from, spender, amount) */\n      tag_104\n        /* \"minerpunk/ERC20/MinePower.sol\":11396:11400  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11402:11409  spender */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":11411:11417  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11395  _spendAllowance */\n      tag_105\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11418  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_104:\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11455  _transfer(from, to, amount) */\n      tag_106\n        /* \"minerpunk/ERC20/MinePower.sol\":11438:11442  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11444:11446  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11448:11454  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11437  _transfer */\n      tag_107\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11455  _transfer(from, to, amount) */\n      jump\t// in\n    tag_106:\n        /* \"minerpunk/ERC20/MinePower.sol\":11472:11476  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":11465:11476  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n    tag_42:\n        /* \"minerpunk/ERC20/MinePower.sol\":9156:9161  uint8 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9180:9182  18 */\n      0x12\n        /* \"minerpunk/ERC20/MinePower.sol\":9173:9182  return 18 */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_47:\n        /* \"minerpunk/ERC20/MinePower.sol\":11966:11970  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":11982:11995  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12010  _msgSender() */\n      tag_110\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12008  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12010  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"minerpunk/ERC20/MinePower.sol\":11982:12010  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12084  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_111\n        /* \"minerpunk/ERC20/MinePower.sol\":12029:12034  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":12036:12043  spender */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12073:12083  addedValue */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12070  allowance(owner, spender) */\n      tag_112\n        /* \"minerpunk/ERC20/MinePower.sol\":12055:12060  owner */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12062:12069  spender */\n      dup10\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12054  allowance */\n      tag_87\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12070  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12083  allowance(owner, spender) + addedValue */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12028  _approve */\n      tag_100\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12084  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_111:\n        /* \"minerpunk/ERC20/MinePower.sol\":12101:12105  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":12094:12105  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":19237:19326  function burn(uint256 amount) public virtual {... */\n    tag_52:\n        /* \"minerpunk/ERC20/MinePower.sol\":19292:19319  _burn(_msgSender(), amount) */\n      tag_116\n        /* \"minerpunk/ERC20/MinePower.sol\":19298:19310  _msgSender() */\n      tag_117\n        /* \"minerpunk/ERC20/MinePower.sol\":19298:19308  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":19298:19310  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"minerpunk/ERC20/MinePower.sol\":19312:19318  amount */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":19292:19297  _burn */\n      tag_118\n        /* \"minerpunk/ERC20/MinePower.sol\":19292:19319  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_116:\n        /* \"minerpunk/ERC20/MinePower.sol\":19237:19326  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n    tag_55:\n        /* \"minerpunk/ERC20/MinePower.sol\":7492:7499  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7528:7545  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7513:7525  _BlockNumber */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":7513:7545  _BlockNumber < _startBlockNumber */\n      lt\n        /* \"minerpunk/ERC20/MinePower.sol\":7510:7603  if(_BlockNumber < _startBlockNumber){... */\n      iszero\n      tag_120\n      jumpi\n        /* \"minerpunk/ERC20/MinePower.sol\":7575:7592  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7560:7592  _BlockNumber = _startBlockNumber */\n      swap2\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7510:7603  if(_BlockNumber < _startBlockNumber){... */\n    tag_120:\n        /* \"minerpunk/ERC20/MinePower.sol\":7612:7631  uint256 DCFperBlock */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7658  _TokenperBlock.mul(1e54) */\n      tag_121\n        /* \"minerpunk/ERC20/MinePower.sol\":7653:7657  1e54 */\n      0x0a70c3c40a64e6c51999090b65f67d9240000000000000\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7648  _TokenperBlock */\n      sload(0x03)\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7652  _TokenperBlock.mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7658  _TokenperBlock.mul(1e54) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"minerpunk/ERC20/MinePower.sol\":7612:7658  uint256 DCFperBlock = _TokenperBlock.mul(1e54) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7679:7701  uint256 BlockDifficult */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7727  difficult(_BlockNumber) */\n      tag_123\n        /* \"minerpunk/ERC20/MinePower.sol\":7714:7726  _BlockNumber */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7713  difficult */\n      tag_82\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7727  difficult(_BlockNumber) */\n      jump\t// in\n    tag_123:\n        /* \"minerpunk/ERC20/MinePower.sol\":7679:7727  uint256 BlockDifficult = difficult(_BlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7742:7755  uint256 DugUP */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7789  DCFperBlock.div(BlockDifficult) */\n      tag_124\n        /* \"minerpunk/ERC20/MinePower.sol\":7774:7788  BlockDifficult */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7769  DCFperBlock */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7773  DCFperBlock.div */\n      tag_125\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7789  DCFperBlock.div(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"minerpunk/ERC20/MinePower.sol\":7742:7789  uint256 DugUP = DCFperBlock.div(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7806:7811  DugUP */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":7799:7811  return DugUP */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_60:\n        /* \"minerpunk/ERC20/MinePower.sol\":9487:9494  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9522  _balances */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9531  _balances[account] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9523:9530  account */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9531  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":9506:9531  return _balances[account] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":19632:19793  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_64:\n        /* \"minerpunk/ERC20/MinePower.sol\":19708:19754  _spendAllowance(account, _msgSender(), amount) */\n      tag_128\n        /* \"minerpunk/ERC20/MinePower.sol\":19724:19731  account */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":19733:19745  _msgSender() */\n      tag_129\n        /* \"minerpunk/ERC20/MinePower.sol\":19733:19743  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":19733:19745  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"minerpunk/ERC20/MinePower.sol\":19747:19753  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":19708:19723  _spendAllowance */\n      tag_105\n        /* \"minerpunk/ERC20/MinePower.sol\":19708:19754  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_128:\n        /* \"minerpunk/ERC20/MinePower.sol\":19764:19786  _burn(account, amount) */\n      tag_130\n        /* \"minerpunk/ERC20/MinePower.sol\":19770:19777  account */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":19779:19785  amount */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":19764:19769  _burn */\n      tag_118\n        /* \"minerpunk/ERC20/MinePower.sol\":19764:19786  _burn(account, amount) */\n      jump\t// in\n    tag_130:\n        /* \"minerpunk/ERC20/MinePower.sol\":19632:19793  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"minerpunk/ERC20/MinePower.sol\":8428:8441  string memory */\n      0x60\n        /* \"minerpunk/ERC20/MinePower.sol\":8460:8467  _symbol */\n      0x06\n        /* \"minerpunk/ERC20/MinePower.sol\":8453:8467  return _symbol */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_91\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_91\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_70:\n        /* \"minerpunk/ERC20/MinePower.sol\":12692:12696  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":12708:12721  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12736  _msgSender() */\n      tag_138\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12734  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12736  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"minerpunk/ERC20/MinePower.sol\":12708:12736  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12746:12770  uint256 currentAllowance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12798  allowance(owner, spender) */\n      tag_139\n        /* \"minerpunk/ERC20/MinePower.sol\":12783:12788  owner */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":12790:12797  spender */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12782  allowance */\n      tag_87\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12798  allowance(owner, spender) */\n      jump\t// in\n    tag_139:\n        /* \"minerpunk/ERC20/MinePower.sol\":12746:12798  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12836:12851  subtractedValue */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":12816:12832  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":12816:12851  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":12808:12893  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12987  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_143\n        /* \"minerpunk/ERC20/MinePower.sol\":12936:12941  owner */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":12943:12950  spender */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12971:12986  subtractedValue */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12952:12968  currentAllowance */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":12952:12986  currentAllowance - subtractedValue */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12935  _approve */\n      tag_100\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12987  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_143:\n        /* \"minerpunk/ERC20/MinePower.sol\":13015:13019  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":13008:13019  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_74:\n        /* \"minerpunk/ERC20/MinePower.sol\":9813:9817  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9829:9842  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9857  _msgSender() */\n      tag_145\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9855  _msgSender */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9857  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"minerpunk/ERC20/MinePower.sol\":9829:9857  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9895  _transfer(owner, to, amount) */\n      tag_146\n        /* \"minerpunk/ERC20/MinePower.sol\":9877:9882  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":9884:9886  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":9888:9894  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9876  _transfer */\n      tag_107\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9895  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_146:\n        /* \"minerpunk/ERC20/MinePower.sol\":9912:9916  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":9905:9916  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n    tag_78:\n        /* \"minerpunk/ERC20/MinePower.sol\":6889:6896  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6907:6925  uint256 difference */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6964  block.number.sub(_mineInfo[user][1]) */\n      tag_148\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6954  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6960  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6955:6959  user */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6960  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6963  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6961:6962  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6963  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6940  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6944  block.number.sub */\n      tag_149\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6964  block.number.sub(_mineInfo[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"minerpunk/ERC20/MinePower.sol\":6907:6964  uint256 difference = block.number.sub(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":6974:6987  uint256 start */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7021  blockStatus(_mineInfo[user][1]) */\n      tag_150\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7011  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7017  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7012:7016  user */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7017  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7020  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7018:7019  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7020  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7001  blockStatus */\n      tag_55\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7021  blockStatus(_mineInfo[user][1]) */\n      jump\t// in\n    tag_150:\n        /* \"minerpunk/ERC20/MinePower.sol\":6974:7021  uint256 start = blockStatus(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7031:7042  uint256 end */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7070  blockStatus(block.number) */\n      tag_151\n        /* \"minerpunk/ERC20/MinePower.sol\":7057:7069  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7056  blockStatus */\n      tag_55\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7070  blockStatus(block.number) */\n      jump\t// in\n    tag_151:\n        /* \"minerpunk/ERC20/MinePower.sol\":7031:7070  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7080:7098  uint256 mined_area */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7138  start.add(end).mul(difference).div(2) */\n      tag_152\n        /* \"minerpunk/ERC20/MinePower.sol\":7136:7137  2 */\n      0x02\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7131  start.add(end).mul(difference) */\n      tag_153\n        /* \"minerpunk/ERC20/MinePower.sol\":7120:7130  difference */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7115  start.add(end) */\n      tag_154\n        /* \"minerpunk/ERC20/MinePower.sol\":7111:7114  end */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7106  start */\n      dup9\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7110  start.add */\n      tag_155\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7115  start.add(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7119  start.add(end).mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7131  start.add(end).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7135  start.add(end).mul(difference).div */\n      tag_125\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7138  start.add(end).mul(difference).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"minerpunk/ERC20/MinePower.sol\":7080:7138  uint256 mined_area = start.add(end).mul(difference).div(2) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7228:7243  uint dcf_amount */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7295  mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      tag_156\n        /* \"minerpunk/ERC20/MinePower.sol\":7282:7294  _totalSupply */\n      sload(0x02)\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7277  mined_area.mul(balanceOf(user)) */\n      tag_157\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7276  balanceOf(user) */\n      tag_158\n        /* \"minerpunk/ERC20/MinePower.sol\":7271:7275  user */\n      dup11\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7270  balanceOf */\n      tag_60\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7276  balanceOf(user) */\n      jump\t// in\n    tag_158:\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7256  mined_area */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7260  mined_area.mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7277  mined_area.mul(balanceOf(user)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7281  mined_area.mul(balanceOf(user)).div */\n      tag_125\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7295  mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"minerpunk/ERC20/MinePower.sol\":7228:7295  uint dcf_amount = mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7346  _mineInfo[user][3].add(dcf_amount) */\n      tag_159\n        /* \"minerpunk/ERC20/MinePower.sol\":7335:7345  dcf_amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7321  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7327  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7322:7326  user */\n      dup11\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7327  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7330  _mineInfo[user][3] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7328:7329  3 */\n      0x03\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7330  _mineInfo[user][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7334  _mineInfo[user][3].add */\n      tag_155\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7346  _mineInfo[user][3].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"minerpunk/ERC20/MinePower.sol\":7305:7346  return _mineInfo[user][3].add(dcf_amount) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n    tag_82:\n        /* \"minerpunk/ERC20/MinePower.sol\":7888:7895  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7906:7925  uint BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7971  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      tag_161\n        /* \"minerpunk/ERC20/MinePower.sol\":7953:7970  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7948  _BlockNumber.mul(1e18) */\n      tag_162\n        /* \"minerpunk/ERC20/MinePower.sol\":7943:7947  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7938  _BlockNumber */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7942  _BlockNumber.mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7948  _BlockNumber.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7952  _BlockNumber.mul(1e18).div */\n      tag_125\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7971  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"minerpunk/ERC20/MinePower.sol\":7906:7971  uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8050  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      tag_163\n        /* \"minerpunk/ERC20/MinePower.sol\":8035:8049  BlockDifficult */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8030  BlockDifficult.mul(BlockDifficult) */\n      tag_164\n        /* \"minerpunk/ERC20/MinePower.sol\":8015:8029  BlockDifficult */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8010  BlockDifficult */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8014  BlockDifficult.mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8030  BlockDifficult.mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8034  BlockDifficult.mul(BlockDifficult).mul */\n      tag_122\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8050  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"minerpunk/ERC20/MinePower.sol\":7981:8050  BlockDifficult=BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8067:8081  BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":8060:8081  return BlockDifficult */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_87:\n        /* \"minerpunk/ERC20/MinePower.sol\":10070:10077  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10107  _allowances */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10114  _allowances[owner] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10108:10113  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10114  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10123  _allowances[owner][spender] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10115:10122  spender */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10123  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":10089:10123  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":693:789  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"minerpunk/ERC20/MinePower.sol\":746:753  address */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":772:782  msg.sender */\n      caller\n        /* \"minerpunk/ERC20/MinePower.sol\":765:782  return msg.sender */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":693:789  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":16165:16535  function _approve(... */\n    tag_100:\n        /* \"minerpunk/ERC20/MinePower.sol\":16313:16314  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16315  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16301  owner */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16315  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":16288:16356  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"minerpunk/ERC20/MinePower.sol\":16393:16394  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16395  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16381  spender */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16395  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":16366:16434  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"minerpunk/ERC20/MinePower.sol\":16475:16481  amount */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16456  _allowances */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16463  _allowances[owner] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16457:16462  owner */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16463  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16472  _allowances[owner][spender] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16464:16471  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16472  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16481  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":16512:16519  spender */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16505:16510  owner */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"minerpunk/ERC20/MinePower.sol\":16521:16527  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC20/MinePower.sol\":16165:16535  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":16816:17257  function _spendAllowance(... */\n    tag_105:\n        /* \"minerpunk/ERC20/MinePower.sol\":16946:16970  uint256 currentAllowance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16998  allowance(owner, spender) */\n      tag_176\n        /* \"minerpunk/ERC20/MinePower.sol\":16983:16988  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16990:16997  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16982  allowance */\n      tag_87\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16998  allowance(owner, spender) */\n      jump\t// in\n    tag_176:\n        /* \"minerpunk/ERC20/MinePower.sol\":16946:16998  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":17032:17049  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"minerpunk/ERC20/MinePower.sol\":17012:17028  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17012:17049  currentAllowance != type(uint256).max */\n      eq\n        /* \"minerpunk/ERC20/MinePower.sol\":17008:17251  if (currentAllowance != type(uint256).max) {... */\n      tag_177\n      jumpi\n        /* \"minerpunk/ERC20/MinePower.sol\":17093:17099  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17073:17089  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17073:17099  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":17065:17133  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17226  _approve(owner, spender, currentAllowance - amount) */\n      tag_181\n        /* \"minerpunk/ERC20/MinePower.sol\":17184:17189  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17191:17198  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17219:17225  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17200:17216  currentAllowance */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17200:17225  currentAllowance - amount */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17183  _approve */\n      tag_100\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17226  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_181:\n        /* \"minerpunk/ERC20/MinePower.sol\":17008:17251  if (currentAllowance != type(uint256).max) {... */\n    tag_177:\n        /* \"minerpunk/ERC20/MinePower.sol\":16936:17257  {... */\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":16816:17257  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":13480:14181  function _transfer(... */\n    tag_107:\n        /* \"minerpunk/ERC20/MinePower.sol\":13622:13623  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13624  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13610  from */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13624  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13598:13666  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"minerpunk/ERC20/MinePower.sol\":13698:13699  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13686  to */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13676:13740  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13789  _beforeTokenTransfer(from, to, amount) */\n      tag_189\n        /* \"minerpunk/ERC20/MinePower.sol\":13772:13776  from */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13778:13780  to */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13782:13788  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13771  _beforeTokenTransfer */\n      tag_190\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13789  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_189:\n        /* \"minerpunk/ERC20/MinePower.sol\":13800:13819  uint256 fromBalance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13831  _balances */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13837  _balances[from] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13832:13836  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13837  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":13800:13837  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13870:13876  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13855:13866  fromBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13855:13876  fromBalance >= amount */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":13847:13919  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"minerpunk/ERC20/MinePower.sol\":13985:13991  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13971:13982  fromBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13971:13991  fromBalance - amount */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13962  _balances */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13968  _balances[from] */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":13963:13967  from */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13968  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13991  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":14028:14034  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14020  _balances */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14024  _balances[to] */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":14021:14023  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14024  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14034  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":14065:14067  to */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":14059:14063  from */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"minerpunk/ERC20/MinePower.sol\":14069:14075  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14124  _afterTokenTransfer(from, to, amount) */\n      tag_196\n        /* \"minerpunk/ERC20/MinePower.sol\":14107:14111  from */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14113:14115  to */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14117:14123  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14106  _afterTokenTransfer */\n      tag_197\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14124  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_196:\n        /* \"minerpunk/ERC20/MinePower.sol\":14162:14174  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14152  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14158  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14153:14157  from */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14158  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14161  _mineInfo[from][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14159:14160  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14161  _mineInfo[from][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14174  _mineInfo[from][1]=block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13588:14181  {... */\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13480:14181  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":15166:15742  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_118:\n        /* \"minerpunk/ERC20/MinePower.sol\":15268:15269  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15249:15270  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":15249:15256  account */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":15249:15270  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":15241:15308  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"minerpunk/ERC20/MinePower.sol\":15319:15368  _beforeTokenTransfer(account, address(0), amount) */\n      tag_202\n        /* \"minerpunk/ERC20/MinePower.sol\":15340:15347  account */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":15357:15358  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15361:15367  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":15319:15339  _beforeTokenTransfer */\n      tag_190\n        /* \"minerpunk/ERC20/MinePower.sol\":15319:15368  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_202:\n        /* \"minerpunk/ERC20/MinePower.sol\":15379:15401  uint256 accountBalance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15404:15413  _balances */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":15404:15422  _balances[account] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15414:15421  account */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":15404:15422  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":15379:15422  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":15458:15464  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":15440:15454  accountBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":15440:15464  accountBalance >= amount */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":15432:15503  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"minerpunk/ERC20/MinePower.sol\":15575:15581  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":15558:15572  accountBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":15558:15581  accountBalance - amount */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":15537:15546  _balances */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15537:15555  _balances[account] */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":15547:15554  account */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":15537:15555  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":15537:15581  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":15617:15623  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":15601:15613  _totalSupply */\n      0x02\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15601:15623  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":15665:15666  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15639:15676  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":15648:15655  account */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":15639:15676  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"minerpunk/ERC20/MinePower.sol\":15669:15675  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":15639:15676  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC20/MinePower.sol\":15687:15735  _afterTokenTransfer(account, address(0), amount) */\n      tag_209\n        /* \"minerpunk/ERC20/MinePower.sol\":15707:15714  account */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":15724:15725  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":15728:15734  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":15687:15706  _afterTokenTransfer */\n      tag_197\n        /* \"minerpunk/ERC20/MinePower.sol\":15687:15735  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_209:\n        /* \"minerpunk/ERC20/MinePower.sol\":15231:15742  {... */\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":15166:15742  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_217\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_219\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":17841:17962  function _beforeTokenTransfer(... */\n    tag_190:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":18550:18670  function _afterTokenTransfer(... */\n    tag_197:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_222:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_223:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_224:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_267:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_267)\n    tag_269:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_225:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_226:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_272\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_222\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":818:889   */\n      tag_273\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_223\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_274\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_224\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":988:1017   */\n      tag_275\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_225\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_277\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_226\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_228:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_230:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_231:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_283\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_230\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_232:\n        /* \"#utility.yul\":1983:2007   */\n      tag_285\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_286:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_233:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_288\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_232\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_234:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_235:\n        /* \"#utility.yul\":2339:2363   */\n      tag_291\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_234\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_292:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_236:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_294\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_235\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_297\n      tag_228\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2632:2751   */\n    tag_296:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_298\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_299\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_236\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_237:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_238:\n        /* \"#utility.yul\":3196:3217   */\n      tag_302\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_237\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_304\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_238\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_239:\n        /* \"#utility.yul\":3533:3557   */\n      tag_306\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_234\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_308\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_239\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_311\n      tag_228\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3908:4027   */\n    tag_310:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_312\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_233\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_313\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_233\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_314\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_236\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_240:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_241:\n        /* \"#utility.yul\":4598:4620   */\n      tag_317\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_240\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_319\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_241\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_51:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_322\n      tag_228\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4929:5048   */\n    tag_321:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_323\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_59:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_326\n      tag_228\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5264:5383   */\n    tag_325:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_327\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_86:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_330\n      tag_228\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5616:5735   */\n    tag_329:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_331\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_233\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_332\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_233\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6183   */\n    tag_242:\n        /* \"#utility.yul\":6051:6128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6041:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x22\n        /* \"#utility.yul\":6145:6146   */\n      0x04\n        /* \"#utility.yul\":6138:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x24\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6177   */\n      revert\n        /* \"#utility.yul\":6189:6509   */\n    tag_91:\n        /* \"#utility.yul\":6233:6239   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      0x02\n        /* \"#utility.yul\":6264:6268   */\n      dup3\n        /* \"#utility.yul\":6260:6272   */\n      div\n        /* \"#utility.yul\":6250:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6318   */\n      0x01\n        /* \"#utility.yul\":6311:6315   */\n      dup3\n        /* \"#utility.yul\":6307:6319   */\n      and\n        /* \"#utility.yul\":6338:6356   */\n      dup1\n        /* \"#utility.yul\":6328:6409   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6394:6398   */\n      0x7f\n        /* \"#utility.yul\":6386:6392   */\n      dup3\n        /* \"#utility.yul\":6382:6399   */\n      and\n        /* \"#utility.yul\":6372:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6409   */\n    tag_335:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6445:6459   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      dup2\n        /* \"#utility.yul\":6422:6460   */\n      sub\n        /* \"#utility.yul\":6419:6503   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6475:6493   */\n      tag_337\n      tag_242\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6419:6503   */\n    tag_336:\n        /* \"#utility.yul\":6240:6509   */\n      pop\n        /* \"#utility.yul\":6189:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6695   */\n    tag_243:\n        /* \"#utility.yul\":6563:6640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6553:6641   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x11\n        /* \"#utility.yul\":6657:6658   */\n      0x04\n        /* \"#utility.yul\":6650:6665   */\n      mstore\n        /* \"#utility.yul\":6684:6688   */\n      0x24\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6674:6689   */\n      revert\n        /* \"#utility.yul\":6701:6892   */\n    tag_114:\n        /* \"#utility.yul\":6741:6744   */\n      0x00\n        /* \"#utility.yul\":6760:6780   */\n      tag_340\n        /* \"#utility.yul\":6778:6779   */\n      dup3\n        /* \"#utility.yul\":6760:6780   */\n      tag_234\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6755:6780   */\n      swap2\n      pop\n        /* \"#utility.yul\":6794:6814   */\n      tag_341\n        /* \"#utility.yul\":6812:6813   */\n      dup4\n        /* \"#utility.yul\":6794:6814   */\n      tag_234\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6789:6814   */\n      swap3\n      pop\n        /* \"#utility.yul\":6837:6838   */\n      dup3\n        /* \"#utility.yul\":6834:6835   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      add\n        /* \"#utility.yul\":6823:6839   */\n      swap1\n      pop\n        /* \"#utility.yul\":6858:6861   */\n      dup1\n        /* \"#utility.yul\":6855:6856   */\n      dup3\n        /* \"#utility.yul\":6852:6862   */\n      gt\n        /* \"#utility.yul\":6849:6885   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":6865:6883   */\n      tag_343\n      tag_243\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6849:6885   */\n    tag_342:\n        /* \"#utility.yul\":6701:6892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7122   */\n    tag_244:\n        /* \"#utility.yul\":7038:7072   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7034:7035   */\n      0x00\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7022:7036   */\n      add\n        /* \"#utility.yul\":7015:7073   */\n      mstore\n        /* \"#utility.yul\":7107:7114   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7102:7104   */\n      0x20\n        /* \"#utility.yul\":7094:7100   */\n      dup3\n        /* \"#utility.yul\":7090:7105   */\n      add\n        /* \"#utility.yul\":7083:7115   */\n      mstore\n        /* \"#utility.yul\":6898:7122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7494   */\n    tag_245:\n        /* \"#utility.yul\":7270:7273   */\n      0x00\n        /* \"#utility.yul\":7291:7358   */\n      tag_346\n        /* \"#utility.yul\":7355:7357   */\n      0x25\n        /* \"#utility.yul\":7350:7353   */\n      dup4\n        /* \"#utility.yul\":7291:7358   */\n      tag_223\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7284:7358   */\n      swap2\n      pop\n        /* \"#utility.yul\":7367:7460   */\n      tag_347\n        /* \"#utility.yul\":7456:7459   */\n      dup3\n        /* \"#utility.yul\":7367:7460   */\n      tag_244\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7485:7487   */\n      0x40\n        /* \"#utility.yul\":7480:7483   */\n      dup3\n        /* \"#utility.yul\":7476:7488   */\n      add\n        /* \"#utility.yul\":7469:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7128:7494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7500:7919   */\n    tag_142:\n        /* \"#utility.yul\":7666:7670   */\n      0x00\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"#utility.yul\":7693:7702   */\n      dup3\n        /* \"#utility.yul\":7689:7707   */\n      add\n        /* \"#utility.yul\":7681:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7753:7762   */\n      dup2\n        /* \"#utility.yul\":7747:7751   */\n      dup2\n        /* \"#utility.yul\":7743:7763   */\n      sub\n        /* \"#utility.yul\":7739:7740   */\n      0x00\n        /* \"#utility.yul\":7728:7737   */\n      dup4\n        /* \"#utility.yul\":7724:7741   */\n      add\n        /* \"#utility.yul\":7717:7764   */\n      mstore\n        /* \"#utility.yul\":7781:7912   */\n      tag_349\n        /* \"#utility.yul\":7907:7911   */\n      dup2\n        /* \"#utility.yul\":7781:7912   */\n      tag_245\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7773:7912   */\n      swap1\n      pop\n        /* \"#utility.yul\":7500:7919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7925:8148   */\n    tag_246:\n        /* \"#utility.yul\":8065:8099   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8061:8062   */\n      0x00\n        /* \"#utility.yul\":8053:8059   */\n      dup3\n        /* \"#utility.yul\":8049:8063   */\n      add\n        /* \"#utility.yul\":8042:8100   */\n      mstore\n        /* \"#utility.yul\":8134:8140   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8129:8131   */\n      0x20\n        /* \"#utility.yul\":8121:8127   */\n      dup3\n        /* \"#utility.yul\":8117:8132   */\n      add\n        /* \"#utility.yul\":8110:8141   */\n      mstore\n        /* \"#utility.yul\":7925:8148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8520   */\n    tag_247:\n        /* \"#utility.yul\":8296:8299   */\n      0x00\n        /* \"#utility.yul\":8317:8384   */\n      tag_352\n        /* \"#utility.yul\":8381:8383   */\n      0x24\n        /* \"#utility.yul\":8376:8379   */\n      dup4\n        /* \"#utility.yul\":8317:8384   */\n      tag_223\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8310:8384   */\n      swap2\n      pop\n        /* \"#utility.yul\":8393:8486   */\n      tag_353\n        /* \"#utility.yul\":8482:8485   */\n      dup3\n        /* \"#utility.yul\":8393:8486   */\n      tag_246\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8511:8513   */\n      0x40\n        /* \"#utility.yul\":8506:8509   */\n      dup3\n        /* \"#utility.yul\":8502:8514   */\n      add\n        /* \"#utility.yul\":8495:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8154:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8945   */\n    tag_170:\n        /* \"#utility.yul\":8692:8696   */\n      0x00\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup3\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8707:8733   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:8788   */\n      dup2\n        /* \"#utility.yul\":8773:8777   */\n      dup2\n        /* \"#utility.yul\":8769:8789   */\n      sub\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8754:8763   */\n      dup4\n        /* \"#utility.yul\":8750:8767   */\n      add\n        /* \"#utility.yul\":8743:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8938   */\n      tag_355\n        /* \"#utility.yul\":8933:8937   */\n      dup2\n        /* \"#utility.yul\":8807:8938   */\n      tag_247\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8799:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8526:8945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8951:9172   */\n    tag_248:\n        /* \"#utility.yul\":9091:9125   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9079:9085   */\n      dup3\n        /* \"#utility.yul\":9075:9089   */\n      add\n        /* \"#utility.yul\":9068:9126   */\n      mstore\n        /* \"#utility.yul\":9160:9164   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9155:9157   */\n      0x20\n        /* \"#utility.yul\":9147:9153   */\n      dup3\n        /* \"#utility.yul\":9143:9158   */\n      add\n        /* \"#utility.yul\":9136:9165   */\n      mstore\n        /* \"#utility.yul\":8951:9172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9544   */\n    tag_249:\n        /* \"#utility.yul\":9320:9323   */\n      0x00\n        /* \"#utility.yul\":9341:9408   */\n      tag_358\n        /* \"#utility.yul\":9405:9407   */\n      0x22\n        /* \"#utility.yul\":9400:9403   */\n      dup4\n        /* \"#utility.yul\":9341:9408   */\n      tag_223\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9334:9408   */\n      swap2\n      pop\n        /* \"#utility.yul\":9417:9510   */\n      tag_359\n        /* \"#utility.yul\":9506:9509   */\n      dup3\n        /* \"#utility.yul\":9417:9510   */\n      tag_248\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9535:9537   */\n      0x40\n        /* \"#utility.yul\":9530:9533   */\n      dup3\n        /* \"#utility.yul\":9526:9538   */\n      add\n        /* \"#utility.yul\":9519:9538   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9969   */\n    tag_173:\n        /* \"#utility.yul\":9716:9720   */\n      0x00\n        /* \"#utility.yul\":9754:9756   */\n      0x20\n        /* \"#utility.yul\":9743:9752   */\n      dup3\n        /* \"#utility.yul\":9739:9757   */\n      add\n        /* \"#utility.yul\":9731:9757   */\n      swap1\n      pop\n        /* \"#utility.yul\":9803:9812   */\n      dup2\n        /* \"#utility.yul\":9797:9801   */\n      dup2\n        /* \"#utility.yul\":9793:9813   */\n      sub\n        /* \"#utility.yul\":9789:9790   */\n      0x00\n        /* \"#utility.yul\":9778:9787   */\n      dup4\n        /* \"#utility.yul\":9774:9791   */\n      add\n        /* \"#utility.yul\":9767:9814   */\n      mstore\n        /* \"#utility.yul\":9831:9962   */\n      tag_361\n        /* \"#utility.yul\":9957:9961   */\n      dup2\n        /* \"#utility.yul\":9831:9962   */\n      tag_249\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9823:9962   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9975:10154   */\n    tag_250:\n        /* \"#utility.yul\":10115:10146   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":10111:10112   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10099:10113   */\n      add\n        /* \"#utility.yul\":10092:10147   */\n      mstore\n        /* \"#utility.yul\":9975:10154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10526   */\n    tag_251:\n        /* \"#utility.yul\":10302:10305   */\n      0x00\n        /* \"#utility.yul\":10323:10390   */\n      tag_364\n        /* \"#utility.yul\":10387:10389   */\n      0x1d\n        /* \"#utility.yul\":10382:10385   */\n      dup4\n        /* \"#utility.yul\":10323:10390   */\n      tag_223\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10316:10390   */\n      swap2\n      pop\n        /* \"#utility.yul\":10399:10492   */\n      tag_365\n        /* \"#utility.yul\":10488:10491   */\n      dup3\n        /* \"#utility.yul\":10399:10492   */\n      tag_250\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10517:10519   */\n      0x20\n        /* \"#utility.yul\":10512:10515   */\n      dup3\n        /* \"#utility.yul\":10508:10520   */\n      add\n        /* \"#utility.yul\":10501:10520   */\n      swap1\n      pop\n        /* \"#utility.yul\":10160:10526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10532:10951   */\n    tag_180:\n        /* \"#utility.yul\":10698:10702   */\n      0x00\n        /* \"#utility.yul\":10736:10738   */\n      0x20\n        /* \"#utility.yul\":10725:10734   */\n      dup3\n        /* \"#utility.yul\":10721:10739   */\n      add\n        /* \"#utility.yul\":10713:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10794   */\n      dup2\n        /* \"#utility.yul\":10779:10783   */\n      dup2\n        /* \"#utility.yul\":10775:10795   */\n      sub\n        /* \"#utility.yul\":10771:10772   */\n      0x00\n        /* \"#utility.yul\":10760:10769   */\n      dup4\n        /* \"#utility.yul\":10756:10773   */\n      add\n        /* \"#utility.yul\":10749:10796   */\n      mstore\n        /* \"#utility.yul\":10813:10944   */\n      tag_367\n        /* \"#utility.yul\":10939:10943   */\n      dup2\n        /* \"#utility.yul\":10813:10944   */\n      tag_251\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10805:10944   */\n      swap1\n      pop\n        /* \"#utility.yul\":10532:10951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10957:11181   */\n    tag_252:\n        /* \"#utility.yul\":11097:11131   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11093:11094   */\n      0x00\n        /* \"#utility.yul\":11085:11091   */\n      dup3\n        /* \"#utility.yul\":11081:11095   */\n      add\n        /* \"#utility.yul\":11074:11132   */\n      mstore\n        /* \"#utility.yul\":11166:11173   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11161:11163   */\n      0x20\n        /* \"#utility.yul\":11153:11159   */\n      dup3\n        /* \"#utility.yul\":11149:11164   */\n      add\n        /* \"#utility.yul\":11142:11174   */\n      mstore\n        /* \"#utility.yul\":10957:11181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11553   */\n    tag_253:\n        /* \"#utility.yul\":11329:11332   */\n      0x00\n        /* \"#utility.yul\":11350:11417   */\n      tag_370\n        /* \"#utility.yul\":11414:11416   */\n      0x25\n        /* \"#utility.yul\":11409:11412   */\n      dup4\n        /* \"#utility.yul\":11350:11417   */\n      tag_223\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11343:11417   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11519   */\n      tag_371\n        /* \"#utility.yul\":11515:11518   */\n      dup3\n        /* \"#utility.yul\":11426:11519   */\n      tag_252\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11544:11546   */\n      0x40\n        /* \"#utility.yul\":11539:11542   */\n      dup3\n        /* \"#utility.yul\":11535:11547   */\n      add\n        /* \"#utility.yul\":11528:11547   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11978   */\n    tag_185:\n        /* \"#utility.yul\":11725:11729   */\n      0x00\n        /* \"#utility.yul\":11763:11765   */\n      0x20\n        /* \"#utility.yul\":11752:11761   */\n      dup3\n        /* \"#utility.yul\":11748:11766   */\n      add\n        /* \"#utility.yul\":11740:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11812:11821   */\n      dup2\n        /* \"#utility.yul\":11806:11810   */\n      dup2\n        /* \"#utility.yul\":11802:11822   */\n      sub\n        /* \"#utility.yul\":11798:11799   */\n      0x00\n        /* \"#utility.yul\":11787:11796   */\n      dup4\n        /* \"#utility.yul\":11783:11800   */\n      add\n        /* \"#utility.yul\":11776:11823   */\n      mstore\n        /* \"#utility.yul\":11840:11971   */\n      tag_373\n        /* \"#utility.yul\":11966:11970   */\n      dup2\n        /* \"#utility.yul\":11840:11971   */\n      tag_253\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11832:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":11559:11978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11984:12206   */\n    tag_254:\n        /* \"#utility.yul\":12124:12158   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12120:12121   */\n      0x00\n        /* \"#utility.yul\":12112:12118   */\n      dup3\n        /* \"#utility.yul\":12108:12122   */\n      add\n        /* \"#utility.yul\":12101:12159   */\n      mstore\n        /* \"#utility.yul\":12193:12198   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12188:12190   */\n      0x20\n        /* \"#utility.yul\":12180:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12191   */\n      add\n        /* \"#utility.yul\":12169:12199   */\n      mstore\n        /* \"#utility.yul\":11984:12206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12578   */\n    tag_255:\n        /* \"#utility.yul\":12354:12357   */\n      0x00\n        /* \"#utility.yul\":12375:12442   */\n      tag_376\n        /* \"#utility.yul\":12439:12441   */\n      0x23\n        /* \"#utility.yul\":12434:12437   */\n      dup4\n        /* \"#utility.yul\":12375:12442   */\n      tag_223\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12368:12442   */\n      swap2\n      pop\n        /* \"#utility.yul\":12451:12544   */\n      tag_377\n        /* \"#utility.yul\":12540:12543   */\n      dup3\n        /* \"#utility.yul\":12451:12544   */\n      tag_254\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12569:12571   */\n      0x40\n        /* \"#utility.yul\":12564:12567   */\n      dup3\n        /* \"#utility.yul\":12560:12572   */\n      add\n        /* \"#utility.yul\":12553:12572   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:13003   */\n    tag_188:\n        /* \"#utility.yul\":12750:12754   */\n      0x00\n        /* \"#utility.yul\":12788:12790   */\n      0x20\n        /* \"#utility.yul\":12777:12786   */\n      dup3\n        /* \"#utility.yul\":12773:12791   */\n      add\n        /* \"#utility.yul\":12765:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12837:12846   */\n      dup2\n        /* \"#utility.yul\":12831:12835   */\n      dup2\n        /* \"#utility.yul\":12827:12847   */\n      sub\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12812:12821   */\n      dup4\n        /* \"#utility.yul\":12808:12825   */\n      add\n        /* \"#utility.yul\":12801:12848   */\n      mstore\n        /* \"#utility.yul\":12865:12996   */\n      tag_379\n        /* \"#utility.yul\":12991:12995   */\n      dup2\n        /* \"#utility.yul\":12865:12996   */\n      tag_255\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12857:12996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12584:13003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13009:13234   */\n    tag_256:\n        /* \"#utility.yul\":13149:13183   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13137:13143   */\n      dup3\n        /* \"#utility.yul\":13133:13147   */\n      add\n        /* \"#utility.yul\":13126:13184   */\n      mstore\n        /* \"#utility.yul\":13218:13226   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13205:13211   */\n      dup3\n        /* \"#utility.yul\":13201:13216   */\n      add\n        /* \"#utility.yul\":13194:13227   */\n      mstore\n        /* \"#utility.yul\":13009:13234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13240:13606   */\n    tag_257:\n        /* \"#utility.yul\":13382:13385   */\n      0x00\n        /* \"#utility.yul\":13403:13470   */\n      tag_382\n        /* \"#utility.yul\":13467:13469   */\n      0x26\n        /* \"#utility.yul\":13462:13465   */\n      dup4\n        /* \"#utility.yul\":13403:13470   */\n      tag_223\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13396:13470   */\n      swap2\n      pop\n        /* \"#utility.yul\":13479:13572   */\n      tag_383\n        /* \"#utility.yul\":13568:13571   */\n      dup3\n        /* \"#utility.yul\":13479:13572   */\n      tag_256\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13597:13599   */\n      0x40\n        /* \"#utility.yul\":13592:13595   */\n      dup3\n        /* \"#utility.yul\":13588:13600   */\n      add\n        /* \"#utility.yul\":13581:13600   */\n      swap1\n      pop\n        /* \"#utility.yul\":13240:13606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13612:14031   */\n    tag_193:\n        /* \"#utility.yul\":13778:13782   */\n      0x00\n        /* \"#utility.yul\":13816:13818   */\n      0x20\n        /* \"#utility.yul\":13805:13814   */\n      dup3\n        /* \"#utility.yul\":13801:13819   */\n      add\n        /* \"#utility.yul\":13793:13819   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:13874   */\n      dup2\n        /* \"#utility.yul\":13859:13863   */\n      dup2\n        /* \"#utility.yul\":13855:13875   */\n      sub\n        /* \"#utility.yul\":13851:13852   */\n      0x00\n        /* \"#utility.yul\":13840:13849   */\n      dup4\n        /* \"#utility.yul\":13836:13853   */\n      add\n        /* \"#utility.yul\":13829:13876   */\n      mstore\n        /* \"#utility.yul\":13893:14024   */\n      tag_385\n        /* \"#utility.yul\":14019:14023   */\n      dup2\n        /* \"#utility.yul\":13893:14024   */\n      tag_257\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13885:14024   */\n      swap1\n      pop\n        /* \"#utility.yul\":13612:14031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14037:14257   */\n    tag_258:\n        /* \"#utility.yul\":14177:14211   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":14173:14174   */\n      0x00\n        /* \"#utility.yul\":14165:14171   */\n      dup3\n        /* \"#utility.yul\":14161:14175   */\n      add\n        /* \"#utility.yul\":14154:14212   */\n      mstore\n        /* \"#utility.yul\":14246:14249   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14241:14243   */\n      0x20\n        /* \"#utility.yul\":14233:14239   */\n      dup3\n        /* \"#utility.yul\":14229:14244   */\n      add\n        /* \"#utility.yul\":14222:14250   */\n      mstore\n        /* \"#utility.yul\":14037:14257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14263:14629   */\n    tag_259:\n        /* \"#utility.yul\":14405:14408   */\n      0x00\n        /* \"#utility.yul\":14426:14493   */\n      tag_388\n        /* \"#utility.yul\":14490:14492   */\n      0x21\n        /* \"#utility.yul\":14485:14488   */\n      dup4\n        /* \"#utility.yul\":14426:14493   */\n      tag_223\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14419:14493   */\n      swap2\n      pop\n        /* \"#utility.yul\":14502:14595   */\n      tag_389\n        /* \"#utility.yul\":14591:14594   */\n      dup3\n        /* \"#utility.yul\":14502:14595   */\n      tag_258\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14620:14622   */\n      0x40\n        /* \"#utility.yul\":14615:14618   */\n      dup3\n        /* \"#utility.yul\":14611:14623   */\n      add\n        /* \"#utility.yul\":14604:14623   */\n      swap1\n      pop\n        /* \"#utility.yul\":14263:14629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14635:15054   */\n    tag_201:\n        /* \"#utility.yul\":14801:14805   */\n      0x00\n        /* \"#utility.yul\":14839:14841   */\n      0x20\n        /* \"#utility.yul\":14828:14837   */\n      dup3\n        /* \"#utility.yul\":14824:14842   */\n      add\n        /* \"#utility.yul\":14816:14842   */\n      swap1\n      pop\n        /* \"#utility.yul\":14888:14897   */\n      dup2\n        /* \"#utility.yul\":14882:14886   */\n      dup2\n        /* \"#utility.yul\":14878:14898   */\n      sub\n        /* \"#utility.yul\":14874:14875   */\n      0x00\n        /* \"#utility.yul\":14863:14872   */\n      dup4\n        /* \"#utility.yul\":14859:14876   */\n      add\n        /* \"#utility.yul\":14852:14899   */\n      mstore\n        /* \"#utility.yul\":14916:15047   */\n      tag_391\n        /* \"#utility.yul\":15042:15046   */\n      dup2\n        /* \"#utility.yul\":14916:15047   */\n      tag_259\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14908:15047   */\n      swap1\n      pop\n        /* \"#utility.yul\":14635:15054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15060:15281   */\n    tag_260:\n        /* \"#utility.yul\":15200:15234   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":15196:15197   */\n      0x00\n        /* \"#utility.yul\":15188:15194   */\n      dup3\n        /* \"#utility.yul\":15184:15198   */\n      add\n        /* \"#utility.yul\":15177:15235   */\n      mstore\n        /* \"#utility.yul\":15269:15273   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15264:15266   */\n      0x20\n        /* \"#utility.yul\":15256:15262   */\n      dup3\n        /* \"#utility.yul\":15252:15267   */\n      add\n        /* \"#utility.yul\":15245:15274   */\n      mstore\n        /* \"#utility.yul\":15060:15281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15287:15653   */\n    tag_261:\n        /* \"#utility.yul\":15429:15432   */\n      0x00\n        /* \"#utility.yul\":15450:15517   */\n      tag_394\n        /* \"#utility.yul\":15514:15516   */\n      0x22\n        /* \"#utility.yul\":15509:15512   */\n      dup4\n        /* \"#utility.yul\":15450:15517   */\n      tag_223\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":15443:15517   */\n      swap2\n      pop\n        /* \"#utility.yul\":15526:15619   */\n      tag_395\n        /* \"#utility.yul\":15615:15618   */\n      dup3\n        /* \"#utility.yul\":15526:15619   */\n      tag_260\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15644:15646   */\n      0x40\n        /* \"#utility.yul\":15639:15642   */\n      dup3\n        /* \"#utility.yul\":15635:15647   */\n      add\n        /* \"#utility.yul\":15628:15647   */\n      swap1\n      pop\n        /* \"#utility.yul\":15287:15653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15659:16078   */\n    tag_205:\n        /* \"#utility.yul\":15825:15829   */\n      0x00\n        /* \"#utility.yul\":15863:15865   */\n      0x20\n        /* \"#utility.yul\":15852:15861   */\n      dup3\n        /* \"#utility.yul\":15848:15866   */\n      add\n        /* \"#utility.yul\":15840:15866   */\n      swap1\n      pop\n        /* \"#utility.yul\":15912:15921   */\n      dup2\n        /* \"#utility.yul\":15906:15910   */\n      dup2\n        /* \"#utility.yul\":15902:15922   */\n      sub\n        /* \"#utility.yul\":15898:15899   */\n      0x00\n        /* \"#utility.yul\":15887:15896   */\n      dup4\n        /* \"#utility.yul\":15883:15900   */\n      add\n        /* \"#utility.yul\":15876:15923   */\n      mstore\n        /* \"#utility.yul\":15940:16071   */\n      tag_397\n        /* \"#utility.yul\":16066:16070   */\n      dup2\n        /* \"#utility.yul\":15940:16071   */\n      tag_261\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15932:16071   */\n      swap1\n      pop\n        /* \"#utility.yul\":15659:16078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16084:16278   */\n    tag_207:\n        /* \"#utility.yul\":16124:16128   */\n      0x00\n        /* \"#utility.yul\":16144:16164   */\n      tag_399\n        /* \"#utility.yul\":16162:16163   */\n      dup3\n        /* \"#utility.yul\":16144:16164   */\n      tag_234\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":16139:16164   */\n      swap2\n      pop\n        /* \"#utility.yul\":16178:16198   */\n      tag_400\n        /* \"#utility.yul\":16196:16197   */\n      dup4\n        /* \"#utility.yul\":16178:16198   */\n      tag_234\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":16173:16198   */\n      swap3\n      pop\n        /* \"#utility.yul\":16222:16223   */\n      dup3\n        /* \"#utility.yul\":16219:16220   */\n      dup3\n        /* \"#utility.yul\":16215:16224   */\n      sub\n        /* \"#utility.yul\":16207:16224   */\n      swap1\n      pop\n        /* \"#utility.yul\":16246:16247   */\n      dup2\n        /* \"#utility.yul\":16240:16244   */\n      dup2\n        /* \"#utility.yul\":16237:16248   */\n      gt\n        /* \"#utility.yul\":16234:16271   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":16251:16269   */\n      tag_402\n      tag_243\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":16234:16271   */\n    tag_401:\n        /* \"#utility.yul\":16084:16278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16284:16694   */\n    tag_212:\n        /* \"#utility.yul\":16324:16331   */\n      0x00\n        /* \"#utility.yul\":16347:16367   */\n      tag_404\n        /* \"#utility.yul\":16365:16366   */\n      dup3\n        /* \"#utility.yul\":16347:16367   */\n      tag_234\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":16342:16367   */\n      swap2\n      pop\n        /* \"#utility.yul\":16381:16401   */\n      tag_405\n        /* \"#utility.yul\":16399:16400   */\n      dup4\n        /* \"#utility.yul\":16381:16401   */\n      tag_234\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16376:16401   */\n      swap3\n      pop\n        /* \"#utility.yul\":16436:16437   */\n      dup3\n        /* \"#utility.yul\":16433:16434   */\n      dup3\n        /* \"#utility.yul\":16429:16438   */\n      mul\n        /* \"#utility.yul\":16458:16488   */\n      tag_406\n        /* \"#utility.yul\":16476:16487   */\n      dup2\n        /* \"#utility.yul\":16458:16488   */\n      tag_234\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":16447:16488   */\n      swap2\n      pop\n        /* \"#utility.yul\":16637:16638   */\n      dup3\n        /* \"#utility.yul\":16628:16635   */\n      dup3\n        /* \"#utility.yul\":16624:16639   */\n      div\n        /* \"#utility.yul\":16621:16622   */\n      dup5\n        /* \"#utility.yul\":16618:16640   */\n      eq\n        /* \"#utility.yul\":16598:16599   */\n      dup4\n        /* \"#utility.yul\":16591:16600   */\n      iszero\n        /* \"#utility.yul\":16571:16654   */\n      or\n        /* \"#utility.yul\":16548:16687   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":16667:16685   */\n      tag_408\n      tag_243\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":16548:16687   */\n    tag_407:\n        /* \"#utility.yul\":16332:16694   */\n      pop\n        /* \"#utility.yul\":16284:16694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16700:16880   */\n    tag_262:\n        /* \"#utility.yul\":16748:16825   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16745:16746   */\n      0x00\n        /* \"#utility.yul\":16738:16826   */\n      mstore\n        /* \"#utility.yul\":16845:16849   */\n      0x12\n        /* \"#utility.yul\":16842:16843   */\n      0x04\n        /* \"#utility.yul\":16835:16850   */\n      mstore\n        /* \"#utility.yul\":16869:16873   */\n      0x24\n        /* \"#utility.yul\":16866:16867   */\n      0x00\n        /* \"#utility.yul\":16859:16874   */\n      revert\n        /* \"#utility.yul\":16886:17071   */\n    tag_215:\n        /* \"#utility.yul\":16926:16927   */\n      0x00\n        /* \"#utility.yul\":16943:16963   */\n      tag_411\n        /* \"#utility.yul\":16961:16962   */\n      dup3\n        /* \"#utility.yul\":16943:16963   */\n      tag_234\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":16938:16963   */\n      swap2\n      pop\n        /* \"#utility.yul\":16977:16997   */\n      tag_412\n        /* \"#utility.yul\":16995:16996   */\n      dup4\n        /* \"#utility.yul\":16977:16997   */\n      tag_234\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":16972:16997   */\n      swap3\n      pop\n        /* \"#utility.yul\":17016:17017   */\n      dup3\n        /* \"#utility.yul\":17006:17041   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":17021:17039   */\n      tag_414\n      tag_262\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":17006:17041   */\n    tag_413:\n        /* \"#utility.yul\":17063:17064   */\n      dup3\n        /* \"#utility.yul\":17060:17061   */\n      dup3\n        /* \"#utility.yul\":17056:17065   */\n      div\n        /* \"#utility.yul\":17051:17065   */\n      swap1\n      pop\n        /* \"#utility.yul\":16886:17071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202edb111f92ec3b08f2cc8555d076438250b224a7bf8d88674412acc41029990264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_498": {
									"entryPoint": null,
									"id": 498,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1187": {
									"entryPoint": 646,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1176": {
									"entryPoint": 641,
									"id": 1176,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1005": {
									"entryPoint": 265,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_668": {
									"entryPoint": 256,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9961:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:2"
															},
															"nodeType": "YulIf",
															"src": "623:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:2"
															},
															"nodeType": "YulIf",
															"src": "714:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:2",
														"type": ""
													}
												],
												"src": "484:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:2",
														"type": ""
													}
												],
												"src": "810:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:2",
														"type": ""
													}
												],
												"src": "957:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:2",
														"type": ""
													}
												],
												"src": "1056:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:2",
														"type": ""
													}
												],
												"src": "1169:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"src": "1568:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													}
												],
												"src": "1651:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:2",
														"type": ""
													}
												],
												"src": "1717:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:2",
														"type": ""
													}
												],
												"src": "1865:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:2",
														"type": ""
													}
												],
												"src": "1946:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:2",
														"type": ""
													}
												],
												"src": "2221:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:2",
														"type": ""
													}
												],
												"src": "2300:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:2",
																"statements": []
															},
															"src": "2555:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:2",
														"type": ""
													}
												],
												"src": "2495:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:2"
															},
															"nodeType": "YulIf",
															"src": "2777:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:2",
														"type": ""
													}
												],
												"src": "2687:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:2",
														"type": ""
													}
												],
												"src": "3236:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:2",
														"type": ""
													}
												],
												"src": "3359:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:2",
														"type": ""
													}
												],
												"src": "3533:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:2"
															},
															"nodeType": "YulIf",
															"src": "4038:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:2",
																					"statements": []
																				},
																				"src": "4524:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:2",
														"type": ""
													}
												],
												"src": "3833:1395:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5262:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5481:34:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:13:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5452:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5462:8:2",
														"type": ""
													}
												],
												"src": "5420:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:775:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5611:15:2",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5620:6:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5635:14:2",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5644:5:2"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5693:677:2",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5781:22:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:2"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:2"
																		},
																		"nodeType": "YulIf",
																		"src": "5753:50:2"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5848:419:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6228:25:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:2"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:2"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:2"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:2"
																		},
																		"nodeType": "YulIf",
																		"src": "5816:451:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6280:23:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:2"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:2"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:2"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6316:44:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:2"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:2"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:15:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5682:2:2",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5662:3:2",
																"statements": []
															},
															"src": "5658:712:2"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5556:6:2",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5564:5:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5571:8:2",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5581:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5589:5:2",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5596:4:2",
														"type": ""
													}
												],
												"src": "5528:848:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:1013:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:20:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6639:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:2",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6650:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:16:2"
															},
															"nodeType": "YulIf",
															"src": "6617:40:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:20:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6684:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6695:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:12:2"
															},
															"nodeType": "YulIf",
															"src": "6666:36:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6812:20:2",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6814:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:2",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:2"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6825:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6805:27:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6856:176:2",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6891:22:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:2",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:2"
																				},
																				"nodeType": "YulIf",
																				"src": "6870:43:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6926:25:2",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:2",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:2"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:2"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:2"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6982:22:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:2"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:2"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:2"
																				},
																				"nodeType": "YulIf",
																				"src": "6964:40:2"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7017:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6841:191:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:2",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6762:4:2"
															},
															"nodeType": "YulSwitch",
															"src": "6755:277:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7164:123:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7178:28:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:2"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:2"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:2"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7237:22:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:2"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:2"
																		},
																		"nodeType": "YulIf",
																		"src": "7219:40:2"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7272:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:2",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:2",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:2",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:111:2"
															},
															"nodeType": "YulIf",
															"src": "7041:246:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7297:57:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:2"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:2"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:42:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:2"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7393:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:2"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:25:2"
															},
															"nodeType": "YulIf",
															"src": "7364:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7424:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:2"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:16:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6412:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6418:8:2",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6428:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6436:5:2",
														"type": ""
													}
												],
												"src": "6382:1073:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7504:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7514:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7486:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7496:7:2",
														"type": ""
													}
												],
												"src": "7461:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7617:217:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7627:31:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:23:2"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7667:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:25:2"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7714:113:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:104:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7592:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7598:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7611:5:2",
														"type": ""
													}
												],
												"src": "7553:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7888:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7898:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7903:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7932:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7985:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8003:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8221:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8107:113:2"
															},
															"nodeType": "YulIf",
															"src": "8104:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7871:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7874:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7880:7:2",
														"type": ""
													}
												],
												"src": "7840:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8352:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8369:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8374:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8362:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8362:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8390:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8409:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8405:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8405:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8390:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8324:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8329:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8340:11:2",
														"type": ""
													}
												],
												"src": "8256:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8537:75:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8559:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8567:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8555:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8555:14:2"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8571:33:2",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8548:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8548:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8548:57:2"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8529:6:2",
														"type": ""
													}
												],
												"src": "8431:181:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8764:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8774:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8840:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8781:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8774:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8946:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "8857:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8857:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8857:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8959:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8975:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8966:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8966:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8752:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8760:3:2",
														"type": ""
													}
												],
												"src": "8618:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9161:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9171:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9183:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9179:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9171:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9218:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9229:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9214:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9237:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9207:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9207:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9263:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9397:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9271:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9263:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9141:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9156:4:2",
														"type": ""
													}
												],
												"src": "8990:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9459:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9469:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9492:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9474:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9469:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9503:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9526:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9508:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9503:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9537:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9548:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9551:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9544:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9544:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9577:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9579:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9579:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9579:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9569:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9572:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9566:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:10:2"
															},
															"nodeType": "YulIf",
															"src": "9563:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9446:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9449:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9455:3:2",
														"type": ""
													}
												],
												"src": "9415:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9677:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9694:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9717:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9699:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9699:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9687:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9687:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9665:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9672:3:2",
														"type": ""
													}
												],
												"src": "9612:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9834:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9844:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9856:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9867:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9852:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9924:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9937:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9948:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9933:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9933:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9880:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9880:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9880:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9806:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9818:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9829:4:2",
														"type": ""
													}
												],
												"src": "9736:222:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F776572000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F776572000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x505 JUMP JUMPDEST POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x505 JUMP JUMPDEST POP PUSH8 0x4563918244F40000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0xFA CALLER PUSH3 0xCF PUSH3 0x100 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0xDD SWAP2 SWAP1 PUSH3 0x77C JUMP JUMPDEST PUSH4 0x3938700 PUSH3 0xEE SWAP2 SWAP1 PUSH3 0x7CD JUMP JUMPDEST PUSH3 0x109 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x904 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x172 SWAP1 PUSH3 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x18F PUSH1 0x0 DUP4 DUP4 PUSH3 0x281 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A3 SWAP2 SWAP1 PUSH3 0x89B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1FA SWAP2 SWAP1 PUSH3 0x89B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x261 SWAP2 SWAP1 PUSH3 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x27D PUSH1 0x0 DUP4 DUP4 PUSH3 0x286 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x30D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x323 JUMPI PUSH3 0x322 PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x38D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x34E JUMP JUMPDEST PUSH3 0x399 DUP7 DUP4 PUSH3 0x34E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E6 PUSH3 0x3E0 PUSH3 0x3DA DUP5 PUSH3 0x3B1 JUMP JUMPDEST PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x3B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x402 DUP4 PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0x41A PUSH3 0x411 DUP3 PUSH3 0x3ED JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x35B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x431 PUSH3 0x422 JUMP JUMPDEST PUSH3 0x43E DUP2 DUP5 DUP5 PUSH3 0x3F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x466 JUMPI PUSH3 0x45A PUSH1 0x0 DUP3 PUSH3 0x427 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x444 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4B5 JUMPI PUSH3 0x47F DUP2 PUSH3 0x329 JUMP JUMPDEST PUSH3 0x48A DUP5 PUSH3 0x33E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x49A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4B2 PUSH3 0x4A9 DUP6 PUSH3 0x33E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x443 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4DA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4BA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F5 DUP4 DUP4 PUSH3 0x4C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x510 DUP3 PUSH3 0x28B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52C JUMPI PUSH3 0x52B PUSH3 0x296 JUMP JUMPDEST JUMPDEST PUSH3 0x538 DUP3 SLOAD PUSH3 0x2F4 JUMP JUMPDEST PUSH3 0x545 DUP3 DUP3 DUP6 PUSH3 0x46A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x57D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x568 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x574 DUP6 DUP3 PUSH3 0x4E7 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5E4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x58D DUP7 PUSH3 0x329 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x590 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5D7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5D3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x67A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x652 JUMPI PUSH3 0x651 PUSH3 0x5EC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x662 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x672 DUP6 PUSH3 0x61B JUMP JUMPDEST SWAP5 POP PUSH3 0x632 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x695 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x768 JUMP JUMPDEST DUP2 PUSH3 0x6A5 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x768 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6BE JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6C9 JUMPI PUSH3 0x6FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x768 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6DE JUMPI PUSH3 0x6DD PUSH3 0x5EC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x6F8 JUMPI PUSH3 0x6F7 PUSH3 0x5EC JUMP JUMPDEST JUMPDEST POP PUSH3 0x768 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x739 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x733 JUMPI PUSH3 0x732 PUSH3 0x5EC JUMP JUMPDEST JUMPDEST PUSH3 0x768 JUMP JUMPDEST PUSH3 0x748 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x628 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x762 JUMPI PUSH3 0x761 PUSH3 0x5EC JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x789 DUP3 PUSH3 0x3B1 JUMP JUMPDEST SWAP2 POP PUSH3 0x796 DUP4 PUSH3 0x76F JUMP JUMPDEST SWAP3 POP PUSH3 0x7C5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7DA DUP3 PUSH3 0x3B1 JUMP JUMPDEST SWAP2 POP PUSH3 0x7E7 DUP4 PUSH3 0x3B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x7F7 DUP2 PUSH3 0x3B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x811 JUMPI PUSH3 0x810 PUSH3 0x5EC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x861 PUSH1 0x1F DUP4 PUSH3 0x818 JUMP JUMPDEST SWAP2 POP PUSH3 0x86E DUP3 PUSH3 0x829 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x894 DUP2 PUSH3 0x852 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A8 DUP3 PUSH3 0x3B1 JUMP JUMPDEST SWAP2 POP PUSH3 0x8B5 DUP4 PUSH3 0x3B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x8D0 JUMPI PUSH3 0x8CF PUSH3 0x5EC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8E1 DUP2 PUSH3 0x3B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8FE PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x8D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABE DUP1 PUSH3 0x914 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x365 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x20B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3A4 SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D0 SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x400 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP2 DUP6 DUP6 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45F PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x46C DUP6 DUP3 DUP6 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x477 DUP6 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x497 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x4B8 DUP2 DUP6 DUP6 PUSH2 0x4A9 DUP6 DUP10 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x4CE PUSH2 0x97A JUMP JUMPDEST DUP3 PUSH2 0xEAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x517 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x3 SLOAD PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x524 DUP5 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53B DUP3 DUP5 PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP3 PUSH2 0x59C PUSH2 0x97A JUMP JUMPDEST DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x5AC DUP3 DUP3 PUSH2 0xEAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x5BF SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5EB SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x638 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x638 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x64D PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x65B DUP3 DUP7 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C4 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x6D1 DUP2 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x743 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x10AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7AE NUMBER PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EA PUSH1 0x2 PUSH2 0x7DC DUP7 PUSH2 0x7CE DUP7 DUP9 PUSH2 0x10C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x81D PUSH1 0x2 SLOAD PUSH2 0x80F PUSH2 0x800 DUP11 PUSH2 0x548 JUMP JUMPDEST DUP6 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x883 DUP2 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C1 PUSH1 0x4 SLOAD PUSH2 0x8B3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8E8 DUP2 PUSH2 0x8DA DUP4 DUP5 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP5 DUP5 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBD1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x982 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAC SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC0 DUP4 DUP4 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE50 DUP5 DUP5 DUP5 PUSH2 0x10DF JUMP JUMPDEST NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF12 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF27 DUP3 PUSH1 0x0 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1004 SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x107D DUP4 PUSH1 0x0 DUP5 PUSH2 0x10DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1146 DUP3 PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x1150 DUP2 DUP6 PUSH2 0x10EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1160 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x112A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118E DUP2 DUP5 PUSH2 0x113B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C6 DUP3 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x11BB JUMP JUMPDEST DUP2 EQ PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F3 DUP2 PUSH2 0x11CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1265 DUP6 DUP3 DUP7 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1284 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x11F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F6 DUP7 DUP3 DUP8 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1307 DUP7 DUP3 DUP8 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1318 DUP7 DUP3 DUP8 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1338 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1353 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136F JUMPI PUSH2 0x136E PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137D DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP5 DUP3 DUP6 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E9 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x13F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B0 JUMPI PUSH2 0x14AF PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1512 PUSH1 0x25 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x151D DUP3 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 PUSH1 0x24 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x15AF DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D3 DUP2 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH1 0x22 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1665 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A2 PUSH1 0x1D DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D1 DUP2 PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1734 PUSH1 0x25 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x173F DUP3 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1763 DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C6 PUSH1 0x23 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x17D1 DUP3 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 PUSH1 0x26 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1863 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA PUSH1 0x21 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197C PUSH1 0x22 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BD DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C8 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F1 DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FC DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A0A DUP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A62 DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6D DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xDB GT 0x1F SWAP3 0xEC EXTCODESIZE ADDMOD CALLCODE 0xCC DUP6 SSTORE 0xD0 PUSH23 0x438250B224A7BF8D88674412ACC41029990264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "19861:151:1:-:0;;;19904:101;;;;;;;;;;6641:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6715:5;6707;:13;;;;;;:::i;:::-;;6740:7;6730;:17;;;;;;:::i;:::-;;6774:4;6757:14;:21;;;;6808:12;6788:17;:32;;;;6641:186;;19952:46:::1;19958:10;19987;:8;;;:10;;:::i;:::-;19981:2;:16;;;;:::i;:::-;19970:8;:27;;;;:::i;:::-;19952:5;;;:46;;:::i;:::-;19861:151:::0;;9098:91;9156:5;9180:2;9173:9;;9098:91;:::o;14457:389::-;14559:1;14540:21;;:7;:21;;;14532:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;14608:49;14637:1;14641:7;14650:6;14608:20;;;:49;;:::i;:::-;14684:6;14668:12;;:22;;;;;;;:::i;:::-;;;;;;;;14722:6;14700:9;:18;14710:7;14700:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;14764:7;14743:37;;14760:1;14743:37;;;14773:6;14743:37;;;;;;:::i;:::-;;;;;;;;14791:48;14819:1;14823:7;14832:6;14791:19;;;:48;;:::i;:::-;14457:389;;:::o;17841:121::-;;;;:::o;18550:120::-;;;;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:169::-;8340:11;8374:6;8369:3;8362:19;8414:4;8409:3;8405:14;8390:29;;8256:169;;;;:::o;8431:181::-;8571:33;8567:1;8559:6;8555:14;8548:57;8431:181;:::o;8618:366::-;8760:3;8781:67;8845:2;8840:3;8781:67;:::i;:::-;8774:74;;8857:93;8946:3;8857:93;:::i;:::-;8975:2;8970:3;8966:12;8959:19;;8618:366;;;:::o;8990:419::-;9156:4;9194:2;9183:9;9179:18;9171:26;;9243:9;9237:4;9233:20;9229:1;9218:9;9214:17;9207:47;9271:131;9397:4;9271:131;:::i;:::-;9263:139;;8990:419;;;:::o;9415:191::-;9455:3;9474:20;9492:1;9474:20;:::i;:::-;9469:25;;9508:20;9526:1;9508:20;:::i;:::-;9503:25;;9551:1;9548;9544:9;9537:16;;9572:3;9569:1;9566:10;9563:36;;;9579:18;;:::i;:::-;9563:36;9415:191;;;;:::o;9612:118::-;9699:24;9717:5;9699:24;:::i;:::-;9694:3;9687:37;9612:118;;:::o;9736:222::-;9829:4;9867:2;9856:9;9852:18;9844:26;;9880:71;9948:1;9937:9;9933:17;9924:6;9880:71;:::i;:::-;9736:222;;;;:::o;19861:151:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineStatus_569": {
									"entryPoint": 1756,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_1187": {
									"entryPoint": 4319,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1122": {
									"entryPoint": 2434,
									"id": 1122,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1176": {
									"entryPoint": 4314,
									"id": 1176,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1077": {
									"entryPoint": 3756,
									"id": 1077,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_323": {
									"entryPoint": 2426,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1165": {
									"entryPoint": 2891,
									"id": 1165,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_949": {
									"entryPoint": 3031,
									"id": 949,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 4292,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_735": {
									"entryPoint": 2291,
									"id": 735,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_760": {
									"entryPoint": 1063,
									"id": 760,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_692": {
									"entryPoint": 1352,
									"id": 692,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockStatus_608": {
									"entryPoint": 1239,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1228": {
									"entryPoint": 1424,
									"id": 1228,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1207": {
									"entryPoint": 1219,
									"id": 1207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_668": {
									"entryPoint": 1155,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_863": {
									"entryPoint": 1602,
									"id": 863,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@difficult_638": {
									"entryPoint": 2191,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 4248,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_822": {
									"entryPoint": 1164,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 4226,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_648": {
									"entryPoint": 917,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 4270,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_658": {
									"entryPoint": 1456,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_678": {
									"entryPoint": 1098,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_793": {
									"entryPoint": 1108,
									"id": 793,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_717": {
									"entryPoint": 1721,
									"id": 717,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17074:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:2",
														"type": ""
													}
												],
												"src": "112:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:2",
																"statements": []
															},
															"src": "378:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:2",
														"type": ""
													}
												],
												"src": "287:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:2",
														"type": ""
													}
												],
												"src": "539:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:2",
														"type": ""
													}
												],
												"src": "647:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:2",
														"type": ""
													}
												],
												"src": "1030:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:2",
														"type": ""
													}
												],
												"src": "1349:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:2",
														"type": ""
													}
												],
												"src": "1676:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:2",
														"type": ""
													}
												],
												"src": "1808:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:2"
															},
															"nodeType": "YulIf",
															"src": "1963:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:2",
														"type": ""
													}
												],
												"src": "1910:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:2",
														"type": ""
													}
												],
												"src": "2038:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:2",
														"type": ""
													}
												],
												"src": "2183:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:2"
															},
															"nodeType": "YulIf",
															"src": "2319:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:2",
														"type": ""
													}
												],
												"src": "2266:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:2",
														"type": ""
													}
												],
												"src": "2394:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:2"
															},
															"nodeType": "YulIf",
															"src": "2632:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:2",
														"type": ""
													}
												],
												"src": "2539:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:2",
														"type": ""
													}
												],
												"src": "3019:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:2",
														"type": ""
													}
												],
												"src": "3115:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:2",
														"type": ""
													}
												],
												"src": "3230:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:2",
														"type": ""
													}
												],
												"src": "3446:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:2",
														"type": ""
													}
												],
												"src": "3570:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:2"
															},
															"nodeType": "YulIf",
															"src": "3908:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:2",
														"type": ""
													}
												],
												"src": "3798:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:2",
														"type": ""
													}
												],
												"src": "4423:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:2",
														"type": ""
													}
												],
												"src": "4515:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:2",
														"type": ""
													}
												],
												"src": "4633:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:2"
															},
															"nodeType": "YulIf",
															"src": "4929:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:2",
														"type": ""
													}
												],
												"src": "4853:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:2"
															},
															"nodeType": "YulIf",
															"src": "5264:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:2",
														"type": ""
													}
												],
												"src": "5188:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:2"
															},
															"nodeType": "YulIf",
															"src": "5616:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5745:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5789:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5872:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5917:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5579:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5591:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5599:6:2",
														"type": ""
													}
												],
												"src": "5523:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6003:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6240:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6250:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6281:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6311:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6285:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6358:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6372:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6386:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6394:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6382:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6382:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6338:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:26:2"
															},
															"nodeType": "YulIf",
															"src": "6328:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6461:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6475:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6475:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6425:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6445:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6422:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:38:2"
															},
															"nodeType": "YulIf",
															"src": "6419:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6224:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6233:6:2",
														"type": ""
													}
												],
												"src": "6189:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6681:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6515:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6745:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6755:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6778:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6760:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6834:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6837:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6863:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6865:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6865:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6865:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6855:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6858:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6852:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:10:2"
															},
															"nodeType": "YulIf",
															"src": "6849:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6732:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6735:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6741:3:2",
														"type": ""
													}
												],
												"src": "6701:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7004:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7026:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7022:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7022:14:2"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7038:34:2",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:15:2"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7107:7:2",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6996:6:2",
														"type": ""
													}
												],
												"src": "6898:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7284:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7291:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7456:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7367:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7367:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7469:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7480:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7476:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7262:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7270:3:2",
														"type": ""
													}
												],
												"src": "7128:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7671:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7681:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7739:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7747:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7753:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7717:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7907:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7781:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7651:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7666:4:2",
														"type": ""
													}
												],
												"src": "7500:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8053:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8065:34:2",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8121:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8129:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8117:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8117:15:2"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8134:6:2",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8023:6:2",
														"type": ""
													}
												],
												"src": "7925:223:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8300:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8376:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8381:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8317:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8393:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8393:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8495:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8506:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8288:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8296:3:2",
														"type": ""
													}
												],
												"src": "8154:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8697:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8707:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8715:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8707:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8765:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8750:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8773:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8779:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8743:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8743:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8933:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8807:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8692:4:2",
														"type": ""
													}
												],
												"src": "8526:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9079:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9075:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9091:34:2",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9068:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9147:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9143:15:2"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9160:4:2",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9136:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9136:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9049:6:2",
														"type": ""
													}
												],
												"src": "8951:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9324:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9417:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9519:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9530:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9535:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9519:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9312:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9320:3:2",
														"type": ""
													}
												],
												"src": "9178:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9721:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9731:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9739:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9731:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9797:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9803:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9793:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9767:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9767:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9823:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9957:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9831:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9823:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9701:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9716:4:2",
														"type": ""
													}
												],
												"src": "9550:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10081:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10111:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10099:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10099:14:2"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10115:31:2",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10092:55:2"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10073:6:2",
														"type": ""
													}
												],
												"src": "9975:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10316:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10382:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10323:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10488:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10399:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10399:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10517:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10501:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10294:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10302:3:2",
														"type": ""
													}
												],
												"src": "10160:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10703:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10713:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10721:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10713:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10779:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10805:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10939:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10813:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10805:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10683:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10698:4:2",
														"type": ""
													}
												],
												"src": "10532:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11093:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11097:34:2",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11153:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11161:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:15:2"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11166:7:2",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11055:6:2",
														"type": ""
													}
												],
												"src": "10957:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11333:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11343:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11409:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11414:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11350:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11343:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11515:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11426:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11426:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11321:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11329:3:2",
														"type": ""
													}
												],
												"src": "11187:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11740:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11752:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11798:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11806:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11812:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11802:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11776:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11776:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11832:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11966:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11840:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11832:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11710:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11725:4:2",
														"type": ""
													}
												],
												"src": "11559:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12090:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12112:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12108:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12124:34:2",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12101:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12101:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12180:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12188:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:15:2"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12193:5:2",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12169:30:2"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12082:6:2",
														"type": ""
													}
												],
												"src": "11984:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12358:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12368:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12375:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12451:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12451:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12553:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12564:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12560:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12346:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12354:3:2",
														"type": ""
													}
												],
												"src": "12212:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12755:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12765:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12777:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12765:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12812:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12823:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12808:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12831:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12837:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12827:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12801:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12801:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12801:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12857:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12991:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12865:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12865:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12735:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12750:4:2",
														"type": ""
													}
												],
												"src": "12584:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13115:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13137:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13149:34:2",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13126:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13205:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13201:15:2"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13218:8:2",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13194:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13107:6:2",
														"type": ""
													}
												],
												"src": "13009:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13386:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13396:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13462:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13403:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13403:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13568:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13479:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13581:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13597:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13374:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13382:3:2",
														"type": ""
													}
												],
												"src": "13240:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13783:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13793:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13793:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13840:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13851:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13836:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13859:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13855:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13829:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13829:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13829:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13885:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14019:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13893:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13885:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13763:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13778:4:2",
														"type": ""
													}
												],
												"src": "13612:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14143:114:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14165:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14173:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14161:14:2"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14177:34:2",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14154:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14233:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14241:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14229:15:2"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14246:3:2",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14222:28:2"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14135:6:2",
														"type": ""
													}
												],
												"src": "14037:220:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14409:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14419:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14485:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14490:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14426:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14426:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14591:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "14502:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14502:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14502:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14604:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14615:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14620:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14611:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14604:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14397:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14405:3:2",
														"type": ""
													}
												],
												"src": "14263:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14806:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14816:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14828:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14839:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14824:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14824:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14816:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14863:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14874:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14859:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14882:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14888:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14878:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14878:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14852:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14852:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14852:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14908:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15042:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14916:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14908:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14786:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14801:4:2",
														"type": ""
													}
												],
												"src": "14635:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15166:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15188:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15196:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15184:14:2"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15200:34:2",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15177:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15177:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15177:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15256:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15264:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15252:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15252:15:2"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15269:4:2",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15245:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15245:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15245:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15158:6:2",
														"type": ""
													}
												],
												"src": "15060:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15433:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15443:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15509:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15514:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15450:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15450:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15443:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15615:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "15526:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15526:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15628:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15639:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15644:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15635:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15628:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15421:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15429:3:2",
														"type": ""
													}
												],
												"src": "15287:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15830:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15840:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15852:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15863:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15848:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15840:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15887:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15898:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15883:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15883:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15906:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15912:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15876:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15876:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15876:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15932:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16066:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15940:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15932:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15810:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15825:4:2",
														"type": ""
													}
												],
												"src": "15659:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16129:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16139:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16162:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16144:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16144:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16139:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16173:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16196:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16178:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16178:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16173:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16207:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16219:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16222:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16215:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16215:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16207:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16249:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16251:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16251:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16251:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "16240:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16246:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16237:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16237:11:2"
															},
															"nodeType": "YulIf",
															"src": "16234:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16115:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16118:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16124:4:2",
														"type": ""
													}
												],
												"src": "16084:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16332:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16342:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16365:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16347:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16347:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16342:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16376:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16399:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16381:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16376:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16410:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16433:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16436:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16429:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16429:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "16414:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16447:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "16476:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16458:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16458:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16447:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16665:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16667:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16667:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16667:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16598:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16591:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16591:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "16621:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "16628:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "16637:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "16624:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16624:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "16618:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16618:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "16571:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16571:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16551:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16551:113:2"
															},
															"nodeType": "YulIf",
															"src": "16548:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16315:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16318:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16324:7:2",
														"type": ""
													}
												],
												"src": "16284:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16728:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16745:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16748:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16738:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16738:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16738:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16842:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16845:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16835:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16835:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16866:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16869:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16859:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16859:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16859:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16700:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16928:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16938:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16961:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16943:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16943:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16938:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16972:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16995:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16977:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16977:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16972:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17019:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17021:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17021:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17021:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17016:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17009:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17009:9:2"
															},
															"nodeType": "YulIf",
															"src": "17006:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17051:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17060:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17063:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17056:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17056:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17051:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16917:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16920:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16926:1:2",
														"type": ""
													}
												],
												"src": "16886:185:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102d5578063b8ba600714610305578063d993226b14610335578063dd62ed3e1461036557610100565b806370a082311461023b57806379cc67901461026b57806395d89b4114610287578063a457c2d7146102a557610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806342966c68146101ef5780634be3403c1461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610395565b60405161011a9190611174565b60405180910390f35b61013d6004803603810190610138919061122f565b610427565b60405161014a919061128a565b60405180910390f35b61015b61044a565b60405161016891906112b4565b60405180910390f35b61018b600480360381019061018691906112cf565b610454565b604051610198919061128a565b60405180910390f35b6101a9610483565b6040516101b6919061133e565b60405180910390f35b6101d960048036038101906101d4919061122f565b61048c565b6040516101e6919061128a565b60405180910390f35b61020960048036038101906102049190611359565b6104c3565b005b61022560048036038101906102209190611359565b6104d7565b60405161023291906112b4565b60405180910390f35b61025560048036038101906102509190611386565b610548565b60405161026291906112b4565b60405180910390f35b6102856004803603810190610280919061122f565b610590565b005b61028f6105b0565b60405161029c9190611174565b60405180910390f35b6102bf60048036038101906102ba919061122f565b610642565b6040516102cc919061128a565b60405180910390f35b6102ef60048036038101906102ea919061122f565b6106b9565b6040516102fc919061128a565b60405180910390f35b61031f600480360381019061031a9190611386565b6106dc565b60405161032c91906112b4565b60405180910390f35b61034f600480360381019061034a9190611359565b61088f565b60405161035c91906112b4565b60405180910390f35b61037f600480360381019061037a91906113b3565b6108f3565b60405161038c91906112b4565b60405180910390f35b6060600580546103a490611422565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090611422565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b60008061043261097a565b905061043f818585610982565b600191505092915050565b6000600254905090565b60008061045f61097a565b905061046c858285610b4b565b610477858585610bd7565b60019150509392505050565b60006012905090565b60008061049761097a565b90506104b88185856104a985896108f3565b6104b39190611482565b610982565b600191505092915050565b6104d46104ce61097a565b82610eac565b50565b60006004548210156104e95760045491505b6000610517760a70c3c40a64e6c51999090b65f67d924000000000000060035461108290919063ffffffff16565b905060006105248461088f565b9050600061053b828461109890919063ffffffff16565b9050809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105a28261059c61097a565b83610b4b565b6105ac8282610eac565b5050565b6060600680546105bf90611422565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90611422565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b5050505050905090565b60008061064d61097a565b9050600061065b82866108f3565b9050838110156106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790611528565b60405180910390fd5b6106ad8286868403610982565b60019250505092915050565b6000806106c461097a565b90506106d1818585610bd7565b600191505092915050565b600080610743600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002054436110ae90919063ffffffff16565b905060006107a1600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020546104d7565b905060006107ae436104d7565b905060006107ea60026107dc866107ce86886110c490919063ffffffff16565b61108290919063ffffffff16565b61109890919063ffffffff16565b9050600061081d60025461080f6108008a610548565b8561108290919063ffffffff16565b61109890919063ffffffff16565b905061088381600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060038152602001908152602001600020546110c490919063ffffffff16565b95505050505050919050565b6000806108c16004546108b3670de0b6b3a76400008661108290919063ffffffff16565b61109890919063ffffffff16565b90506108e8816108da838461108290919063ffffffff16565b61108290919063ffffffff16565b905080915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e8906115ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a579061164c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b3e91906112b4565b60405180910390a3505050565b6000610b5784846108f3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bd15781811015610bc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bba906116b8565b60405180910390fd5b610bd08484848403610982565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3d9061174a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac906117dc565b60405180910390fd5b610cc08383836110da565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3d9061186e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd99190611482565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3d91906112b4565b60405180910390a3610e508484846110df565b43600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000208190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1290611900565b60405180910390fd5b610f27826000836110da565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa490611992565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461100491906119b2565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161106991906112b4565b60405180910390a361107d836000846110df565b505050565b6000818361109091906119e6565b905092915050565b600081836110a69190611a57565b905092915050565b600081836110bc91906119b2565b905092915050565b600081836110d29190611482565b905092915050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561111e578082015181840152602081019050611103565b60008484015250505050565b6000601f19601f8301169050919050565b6000611146826110e4565b61115081856110ef565b9350611160818560208601611100565b6111698161112a565b840191505092915050565b6000602082019050818103600083015261118e818461113b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c68261119b565b9050919050565b6111d6816111bb565b81146111e157600080fd5b50565b6000813590506111f3816111cd565b92915050565b6000819050919050565b61120c816111f9565b811461121757600080fd5b50565b60008135905061122981611203565b92915050565b6000806040838503121561124657611245611196565b5b6000611254858286016111e4565b92505060206112658582860161121a565b9150509250929050565b60008115159050919050565b6112848161126f565b82525050565b600060208201905061129f600083018461127b565b92915050565b6112ae816111f9565b82525050565b60006020820190506112c960008301846112a5565b92915050565b6000806000606084860312156112e8576112e7611196565b5b60006112f6868287016111e4565b9350506020611307868287016111e4565b92505060406113188682870161121a565b9150509250925092565b600060ff82169050919050565b61133881611322565b82525050565b6000602082019050611353600083018461132f565b92915050565b60006020828403121561136f5761136e611196565b5b600061137d8482850161121a565b91505092915050565b60006020828403121561139c5761139b611196565b5b60006113aa848285016111e4565b91505092915050565b600080604083850312156113ca576113c9611196565b5b60006113d8858286016111e4565b92505060206113e9858286016111e4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143a57607f821691505b60208210810361144d5761144c6113f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061148d826111f9565b9150611498836111f9565b92508282019050808211156114b0576114af611453565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006115126025836110ef565b915061151d826114b6565b604082019050919050565b6000602082019050818103600083015261154181611505565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115a46024836110ef565b91506115af82611548565b604082019050919050565b600060208201905081810360008301526115d381611597565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006116366022836110ef565b9150611641826115da565b604082019050919050565b6000602082019050818103600083015261166581611629565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116a2601d836110ef565b91506116ad8261166c565b602082019050919050565b600060208201905081810360008301526116d181611695565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006117346025836110ef565b915061173f826116d8565b604082019050919050565b6000602082019050818103600083015261176381611727565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117c66023836110ef565b91506117d18261176a565b604082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118586026836110ef565b9150611863826117fc565b604082019050919050565b600060208201905081810360008301526118878161184b565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006118ea6021836110ef565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061197c6022836110ef565b915061198782611920565b604082019050919050565b600060208201905081810360008301526119ab8161196f565b9050919050565b60006119bd826111f9565b91506119c8836111f9565b92508282039050818111156119e0576119df611453565b5b92915050565b60006119f1826111f9565b91506119fc836111f9565b9250828202611a0a816111f9565b91508282048414831517611a2157611a20611453565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a62826111f9565b9150611a6d836111f9565b925082611a7d57611a7c611a28565b5b82820490509291505056fea26469706673582212202edb111f92ec3b08f2cc8555d076438250b224a7bf8d88674412acc41029990264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x365 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x20B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3A4 SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D0 SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x400 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP2 DUP6 DUP6 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45F PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x46C DUP6 DUP3 DUP6 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x477 DUP6 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x497 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x4B8 DUP2 DUP6 DUP6 PUSH2 0x4A9 DUP6 DUP10 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x4CE PUSH2 0x97A JUMP JUMPDEST DUP3 PUSH2 0xEAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x517 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x3 SLOAD PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x524 DUP5 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53B DUP3 DUP5 PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP3 PUSH2 0x59C PUSH2 0x97A JUMP JUMPDEST DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x5AC DUP3 DUP3 PUSH2 0xEAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x5BF SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5EB SWAP1 PUSH2 0x1422 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x638 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x638 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x64D PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x65B DUP3 DUP7 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C4 PUSH2 0x97A JUMP JUMPDEST SWAP1 POP PUSH2 0x6D1 DUP2 DUP6 DUP6 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x743 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x10AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7AE NUMBER PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EA PUSH1 0x2 PUSH2 0x7DC DUP7 PUSH2 0x7CE DUP7 DUP9 PUSH2 0x10C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x81D PUSH1 0x2 SLOAD PUSH2 0x80F PUSH2 0x800 DUP11 PUSH2 0x548 JUMP JUMPDEST DUP6 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x883 DUP2 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C1 PUSH1 0x4 SLOAD PUSH2 0x8B3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1098 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8E8 DUP2 PUSH2 0x8DA DUP4 DUP5 PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1082 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP5 DUP5 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBD1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x982 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAC SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC0 DUP4 DUP4 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE50 DUP5 DUP5 DUP5 PUSH2 0x10DF JUMP JUMPDEST NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF12 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF27 DUP3 PUSH1 0x0 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1004 SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x107D DUP4 PUSH1 0x0 DUP5 PUSH2 0x10DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1146 DUP3 PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x1150 DUP2 DUP6 PUSH2 0x10EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1160 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x112A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118E DUP2 DUP5 PUSH2 0x113B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C6 DUP3 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x11BB JUMP JUMPDEST DUP2 EQ PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F3 DUP2 PUSH2 0x11CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1265 DUP6 DUP3 DUP7 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1284 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x11F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E8 JUMPI PUSH2 0x12E7 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F6 DUP7 DUP3 DUP8 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1307 DUP7 DUP3 DUP8 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1318 DUP7 DUP3 DUP8 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1338 DUP2 PUSH2 0x1322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1353 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136F JUMPI PUSH2 0x136E PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137D DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP5 DUP3 DUP6 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x1196 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E9 DUP6 DUP3 DUP7 ADD PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x13F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B0 JUMPI PUSH2 0x14AF PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1512 PUSH1 0x25 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x151D DUP3 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 PUSH1 0x24 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x15AF DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D3 DUP2 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH1 0x22 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1665 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A2 PUSH1 0x1D DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D1 DUP2 PUSH2 0x1695 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1734 PUSH1 0x25 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x173F DUP3 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1763 DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C6 PUSH1 0x23 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x17D1 DUP3 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 PUSH1 0x26 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1863 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA PUSH1 0x21 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197C PUSH1 0x22 DUP4 PUSH2 0x10EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BD DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C8 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x1453 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F1 DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FC DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A0A DUP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A62 DUP3 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6D DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x1A28 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xDB GT 0x1F SWAP3 0xEC EXTCODESIZE ADDMOD CALLCODE 0xCC DUP6 SSTORE 0xD0 PUSH23 0x438250B224A7BF8D88674412ACC41029990264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "19861:151:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10438:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9249:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11197:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9098:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11878:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19237:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7427:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9413:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19632:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8372:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12599:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9734:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6835:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7829:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9981:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8161:98;8215:13;8247:5;8240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:98;:::o;10438:197::-;10521:4;10537:13;10553:12;:10;:12::i;:::-;10537:28;;10575:32;10584:5;10591:7;10600:6;10575:8;:32::i;:::-;10624:4;10617:11;;;10438:197;;;;:::o;9249:106::-;9310:7;9336:12;;9329:19;;9249:106;:::o;11197:286::-;11324:4;11340:15;11358:12;:10;:12::i;:::-;11340:30;;11380:38;11396:4;11402:7;11411:6;11380:15;:38::i;:::-;11428:27;11438:4;11444:2;11448:6;11428:9;:27::i;:::-;11472:4;11465:11;;;11197:286;;;;;:::o;9098:91::-;9156:5;9180:2;9173:9;;9098:91;:::o;11878:234::-;11966:4;11982:13;11998:12;:10;:12::i;:::-;11982:28;;12020:64;12029:5;12036:7;12073:10;12045:25;12055:5;12062:7;12045:9;:25::i;:::-;:38;;;;:::i;:::-;12020:8;:64::i;:::-;12101:4;12094:11;;;11878:234;;;;:::o;19237:89::-;19292:27;19298:12;:10;:12::i;:::-;19312:6;19292:5;:27::i;:::-;19237:89;:::o;7427:395::-;7492:7;7528:17;;7513:12;:32;7510:93;;;7575:17;;7560:32;;7510:93;7612:19;7634:24;7653:4;7634:14;;:18;;:24;;;;:::i;:::-;7612:46;;7679:22;7704:23;7714:12;7704:9;:23::i;:::-;7679:48;;7742:13;7758:31;7774:14;7758:11;:15;;:31;;;;:::i;:::-;7742:47;;7806:5;7799:12;;;;;7427:395;;;:::o;9413:125::-;9487:7;9513:9;:18;9523:7;9513:18;;;;;;;;;;;;;;;;9506:25;;9413:125;;;:::o;19632:161::-;19708:46;19724:7;19733:12;:10;:12::i;:::-;19747:6;19708:15;:46::i;:::-;19764:22;19770:7;19779:6;19764:5;:22::i;:::-;19632:161;;:::o;8372:102::-;8428:13;8460:7;8453:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8372:102;:::o;12599:427::-;12692:4;12708:13;12724:12;:10;:12::i;:::-;12708:28;;12746:24;12773:25;12783:5;12790:7;12773:9;:25::i;:::-;12746:52;;12836:15;12816:16;:35;;12808:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;12927:60;12936:5;12943:7;12971:15;12952:16;:34;12927:8;:60::i;:::-;13015:4;13008:11;;;;12599:427;;;;:::o;9734:189::-;9813:4;9829:13;9845:12;:10;:12::i;:::-;9829:28;;9867;9877:5;9884:2;9888:6;9867:9;:28::i;:::-;9912:4;9905:11;;;9734:189;;;;:::o;6835:525::-;6889:7;6907:18;6928:36;6945:9;:15;6955:4;6945:15;;;;;;;;;;;;;;;:18;6961:1;6945:18;;;;;;;;;;;;6928:12;:16;;:36;;;;:::i;:::-;6907:57;;6974:13;6990:31;7002:9;:15;7012:4;7002:15;;;;;;;;;;;;;;;:18;7018:1;7002:18;;;;;;;;;;;;6990:11;:31::i;:::-;6974:47;;7031:11;7045:25;7057:12;7045:11;:25::i;:::-;7031:39;;7080:18;7101:37;7136:1;7101:30;7120:10;7101:14;7111:3;7101:5;:9;;:14;;;;:::i;:::-;:18;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;7080:58;;7228:15;7246:49;7282:12;;7246:31;7261:15;7271:4;7261:9;:15::i;:::-;7246:10;:14;;:31;;;;:::i;:::-;:35;;:49;;;;:::i;:::-;7228:67;;7312:34;7335:10;7312:9;:15;7322:4;7312:15;;;;;;;;;;;;;;;:18;7328:1;7312:18;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;7305:41;;;;;;;6835:525;;;:::o;7829:259::-;7888:7;7906:19;7926:45;7953:17;;7926:22;7943:4;7926:12;:16;;:22;;;;:::i;:::-;:26;;:45;;;;:::i;:::-;7906:65;;7996:54;8035:14;7996:34;8015:14;7996;:18;;:34;;;;:::i;:::-;:38;;:54;;;;:::i;:::-;7981:69;;8067:14;8060:21;;;7829:259;;;:::o;9981:149::-;10070:7;10096:11;:18;10108:5;10096:18;;;;;;;;;;;;;;;:27;10115:7;10096:27;;;;;;;;;;;;;;;;10089:34;;9981:149;;;;:::o;693:96::-;746:7;772:10;765:17;;693:96;:::o;16165:370::-;16313:1;16296:19;;:5;:19;;;16288:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16393:1;16374:21;;:7;:21;;;16366:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16475:6;16445:11;:18;16457:5;16445:18;;;;;;;;;;;;;;;:27;16464:7;16445:27;;;;;;;;;;;;;;;:36;;;;16512:7;16496:32;;16505:5;16496:32;;;16521:6;16496:32;;;;;;:::i;:::-;;;;;;;;16165:370;;;:::o;16816:441::-;16946:24;16973:25;16983:5;16990:7;16973:9;:25::i;:::-;16946:52;;17032:17;17012:16;:37;17008:243;;17093:6;17073:16;:26;;17065:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;17175:51;17184:5;17191:7;17219:6;17200:16;:25;17175:8;:51::i;:::-;17008:243;16936:321;16816:441;;;:::o;13480:701::-;13622:1;13606:18;;:4;:18;;;13598:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;13698:1;13684:16;;:2;:16;;;13676:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;13751:38;13772:4;13778:2;13782:6;13751:20;:38::i;:::-;13800:19;13822:9;:15;13832:4;13822:15;;;;;;;;;;;;;;;;13800:37;;13870:6;13855:11;:21;;13847:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;13985:6;13971:11;:20;13953:9;:15;13963:4;13953:15;;;;;;;;;;;;;;;:38;;;;14028:6;14011:9;:13;14021:2;14011:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;14065:2;14050:26;;14059:4;14050:26;;;14069:6;14050:26;;;;;;:::i;:::-;;;;;;;;14087:37;14107:4;14113:2;14117:6;14087:19;:37::i;:::-;14162:12;14143:9;:15;14153:4;14143:15;;;;;;;;;;;;;;;:18;14159:1;14143:18;;;;;;;;;;;:31;;;;13588:593;13480:701;;;:::o;15166:576::-;15268:1;15249:21;;:7;:21;;;15241:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;15319:49;15340:7;15357:1;15361:6;15319:20;:49::i;:::-;15379:22;15404:9;:18;15414:7;15404:18;;;;;;;;;;;;;;;;15379:43;;15458:6;15440:14;:24;;15432:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;15575:6;15558:14;:23;15537:9;:18;15547:7;15537:18;;;;;;;;;;;;;;;:44;;;;15617:6;15601:12;;:22;;;;;;;:::i;:::-;;;;;;;;15665:1;15639:37;;15648:7;15639:37;;;15669:6;15639:37;;;;;;:::i;:::-;;;;;;;;15687:48;15707:7;15724:1;15728:6;15687:19;:48::i;:::-;15231:511;15166:576;;:::o;3465:96:0:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;17841:121:1:-;;;;:::o;18550:120::-;;;;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:180::-;6563:77;6560:1;6553:88;6660:4;6657:1;6650:15;6684:4;6681:1;6674:15;6701:191;6741:3;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6837:1;6834;6830:9;6823:16;;6858:3;6855:1;6852:10;6849:36;;;6865:18;;:::i;:::-;6849:36;6701:191;;;;:::o;6898:224::-;7038:34;7034:1;7026:6;7022:14;7015:58;7107:7;7102:2;7094:6;7090:15;7083:32;6898:224;:::o;7128:366::-;7270:3;7291:67;7355:2;7350:3;7291:67;:::i;:::-;7284:74;;7367:93;7456:3;7367:93;:::i;:::-;7485:2;7480:3;7476:12;7469:19;;7128:366;;;:::o;7500:419::-;7666:4;7704:2;7693:9;7689:18;7681:26;;7753:9;7747:4;7743:20;7739:1;7728:9;7724:17;7717:47;7781:131;7907:4;7781:131;:::i;:::-;7773:139;;7500:419;;;:::o;7925:223::-;8065:34;8061:1;8053:6;8049:14;8042:58;8134:6;8129:2;8121:6;8117:15;8110:31;7925:223;:::o;8154:366::-;8296:3;8317:67;8381:2;8376:3;8317:67;:::i;:::-;8310:74;;8393:93;8482:3;8393:93;:::i;:::-;8511:2;8506:3;8502:12;8495:19;;8154:366;;;:::o;8526:419::-;8692:4;8730:2;8719:9;8715:18;8707:26;;8779:9;8773:4;8769:20;8765:1;8754:9;8750:17;8743:47;8807:131;8933:4;8807:131;:::i;:::-;8799:139;;8526:419;;;:::o;8951:221::-;9091:34;9087:1;9079:6;9075:14;9068:58;9160:4;9155:2;9147:6;9143:15;9136:29;8951:221;:::o;9178:366::-;9320:3;9341:67;9405:2;9400:3;9341:67;:::i;:::-;9334:74;;9417:93;9506:3;9417:93;:::i;:::-;9535:2;9530:3;9526:12;9519:19;;9178:366;;;:::o;9550:419::-;9716:4;9754:2;9743:9;9739:18;9731:26;;9803:9;9797:4;9793:20;9789:1;9778:9;9774:17;9767:47;9831:131;9957:4;9831:131;:::i;:::-;9823:139;;9550:419;;;:::o;9975:179::-;10115:31;10111:1;10103:6;10099:14;10092:55;9975:179;:::o;10160:366::-;10302:3;10323:67;10387:2;10382:3;10323:67;:::i;:::-;10316:74;;10399:93;10488:3;10399:93;:::i;:::-;10517:2;10512:3;10508:12;10501:19;;10160:366;;;:::o;10532:419::-;10698:4;10736:2;10725:9;10721:18;10713:26;;10785:9;10779:4;10775:20;10771:1;10760:9;10756:17;10749:47;10813:131;10939:4;10813:131;:::i;:::-;10805:139;;10532:419;;;:::o;10957:224::-;11097:34;11093:1;11085:6;11081:14;11074:58;11166:7;11161:2;11153:6;11149:15;11142:32;10957:224;:::o;11187:366::-;11329:3;11350:67;11414:2;11409:3;11350:67;:::i;:::-;11343:74;;11426:93;11515:3;11426:93;:::i;:::-;11544:2;11539:3;11535:12;11528:19;;11187:366;;;:::o;11559:419::-;11725:4;11763:2;11752:9;11748:18;11740:26;;11812:9;11806:4;11802:20;11798:1;11787:9;11783:17;11776:47;11840:131;11966:4;11840:131;:::i;:::-;11832:139;;11559:419;;;:::o;11984:222::-;12124:34;12120:1;12112:6;12108:14;12101:58;12193:5;12188:2;12180:6;12176:15;12169:30;11984:222;:::o;12212:366::-;12354:3;12375:67;12439:2;12434:3;12375:67;:::i;:::-;12368:74;;12451:93;12540:3;12451:93;:::i;:::-;12569:2;12564:3;12560:12;12553:19;;12212:366;;;:::o;12584:419::-;12750:4;12788:2;12777:9;12773:18;12765:26;;12837:9;12831:4;12827:20;12823:1;12812:9;12808:17;12801:47;12865:131;12991:4;12865:131;:::i;:::-;12857:139;;12584:419;;;:::o;13009:225::-;13149:34;13145:1;13137:6;13133:14;13126:58;13218:8;13213:2;13205:6;13201:15;13194:33;13009:225;:::o;13240:366::-;13382:3;13403:67;13467:2;13462:3;13403:67;:::i;:::-;13396:74;;13479:93;13568:3;13479:93;:::i;:::-;13597:2;13592:3;13588:12;13581:19;;13240:366;;;:::o;13612:419::-;13778:4;13816:2;13805:9;13801:18;13793:26;;13865:9;13859:4;13855:20;13851:1;13840:9;13836:17;13829:47;13893:131;14019:4;13893:131;:::i;:::-;13885:139;;13612:419;;;:::o;14037:220::-;14177:34;14173:1;14165:6;14161:14;14154:58;14246:3;14241:2;14233:6;14229:15;14222:28;14037:220;:::o;14263:366::-;14405:3;14426:67;14490:2;14485:3;14426:67;:::i;:::-;14419:74;;14502:93;14591:3;14502:93;:::i;:::-;14620:2;14615:3;14611:12;14604:19;;14263:366;;;:::o;14635:419::-;14801:4;14839:2;14828:9;14824:18;14816:26;;14888:9;14882:4;14878:20;14874:1;14863:9;14859:17;14852:47;14916:131;15042:4;14916:131;:::i;:::-;14908:139;;14635:419;;;:::o;15060:221::-;15200:34;15196:1;15188:6;15184:14;15177:58;15269:4;15264:2;15256:6;15252:15;15245:29;15060:221;:::o;15287:366::-;15429:3;15450:67;15514:2;15509:3;15450:67;:::i;:::-;15443:74;;15526:93;15615:3;15526:93;:::i;:::-;15644:2;15639:3;15635:12;15628:19;;15287:366;;;:::o;15659:419::-;15825:4;15863:2;15852:9;15848:18;15840:26;;15912:9;15906:4;15902:20;15898:1;15887:9;15883:17;15876:47;15940:131;16066:4;15940:131;:::i;:::-;15932:139;;15659:419;;;:::o;16084:194::-;16124:4;16144:20;16162:1;16144:20;:::i;:::-;16139:25;;16178:20;16196:1;16178:20;:::i;:::-;16173:25;;16222:1;16219;16215:9;16207:17;;16246:1;16240:4;16237:11;16234:37;;;16251:18;;:::i;:::-;16234:37;16084:194;;;;:::o;16284:410::-;16324:7;16347:20;16365:1;16347:20;:::i;:::-;16342:25;;16381:20;16399:1;16381:20;:::i;:::-;16376:25;;16436:1;16433;16429:9;16458:30;16476:11;16458:30;:::i;:::-;16447:41;;16637:1;16628:7;16624:15;16621:1;16618:22;16598:1;16591:9;16571:83;16548:139;;16667:18;;:::i;:::-;16548:139;16332:362;16284:410;;;;:::o;16700:180::-;16748:77;16745:1;16738:88;16845:4;16842:1;16835:15;16869:4;16866:1;16859:15;16886:185;16926:1;16943:20;16961:1;16943:20;:::i;:::-;16938:25;;16977:20;16995:1;16977:20;:::i;:::-;16972:25;;17016:1;17006:35;;17021:18;;:::i;:::-;17006:35;17063:1;17060;17056:9;17051:14;;16886:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1369200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MineStatus(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"blockStatus(uint256)": "infinite",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "366",
								"decreaseAllowance(address,uint256)": "infinite",
								"difficult(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19904,
									"end": 20005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "506F776572000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "506F776572000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6715,
									"end": 6720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6712,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6707,
									"end": 6720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6740,
									"end": 6747,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6737,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6730,
									"end": 6747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6778,
									"name": "PUSH",
									"source": 1,
									"value": "4563918244F40000"
								},
								{
									"begin": 6757,
									"end": 6771,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6808,
									"end": 6820,
									"name": "NUMBER",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6805,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 19952,
									"end": 19998,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 19958,
									"end": 19968,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 19987,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 19987,
									"end": 19995,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 19987,
									"end": 19995,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 19987,
									"end": 19995,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 19987,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 19987,
									"end": 19997,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 19987,
									"end": 19997,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 19987,
									"end": 19997,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 19987,
									"end": 19997,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19981,
									"end": 19983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 19981,
									"end": 19997,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 19981,
									"end": 19997,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19970,
									"end": 19978,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "3938700"
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 19970,
									"end": 19997,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 19970,
									"end": 19997,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19952,
									"end": 19957,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 19952,
									"end": 19957,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 19952,
									"end": 19957,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 19952,
									"end": 19998,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 19952,
									"end": 19998,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 19952,
									"end": 19998,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 19952,
									"end": 19998,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 19952,
									"end": 19998,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9189,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 9098,
									"end": 9189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9156,
									"end": 9161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9180,
									"end": 9182,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 9173,
									"end": 9182,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9173,
									"end": 9182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9098,
									"end": 9189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14457,
									"end": 14846,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 14457,
									"end": 14846,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14559,
									"end": 14560,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14540,
									"end": 14561,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14540,
									"end": 14561,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14540,
									"end": 14547,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14540,
									"end": 14561,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14540,
									"end": 14561,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14540,
									"end": 14561,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14532,
									"end": 14597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14532,
									"end": 14597,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14608,
									"end": 14657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 14637,
									"end": 14638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14641,
									"end": 14648,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14650,
									"end": 14656,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14608,
									"end": 14628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 14608,
									"end": 14628,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14608,
									"end": 14628,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14608,
									"end": 14657,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14608,
									"end": 14657,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 14608,
									"end": 14657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14608,
									"end": 14657,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 14608,
									"end": 14657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14684,
									"end": 14690,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14680,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 14668,
									"end": 14680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 14668,
									"end": 14690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 14668,
									"end": 14690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14722,
									"end": 14728,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14709,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14710,
									"end": 14717,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14718,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 14700,
									"end": 14728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 14700,
									"end": 14728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14764,
									"end": 14771,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14760,
									"end": 14761,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 14773,
									"end": 14779,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 14743,
									"end": 14780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14743,
									"end": 14780,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 14791,
									"end": 14839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 14819,
									"end": 14820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14823,
									"end": 14830,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14832,
									"end": 14838,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14791,
									"end": 14810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 14791,
									"end": 14810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14791,
									"end": 14810,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14791,
									"end": 14839,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14791,
									"end": 14839,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 14791,
									"end": 14839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14791,
									"end": 14839,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 14791,
									"end": 14839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14457,
									"end": 14846,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14457,
									"end": 14846,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14457,
									"end": 14846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17841,
									"end": 17962,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 17841,
									"end": 17962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 17841,
									"end": 17962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17841,
									"end": 17962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17841,
									"end": 17962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 17841,
									"end": 17962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18550,
									"end": 18670,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 18550,
									"end": 18670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18550,
									"end": 18670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18550,
									"end": 18670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18550,
									"end": 18670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 18550,
									"end": 18670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 2,
									"value": "91"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "96"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "103"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 2,
									"value": "102"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 2,
									"value": "111"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 2,
									"value": "113"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 2,
									"value": "124"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 2,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "147"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 2,
									"value": "147"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 2,
									"value": "146"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 2,
									"value": "145"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "149"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 2,
									"value": "149"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "153"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 2,
									"value": "153"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "154"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 2,
									"value": "154"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "155"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 2,
									"value": "155"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "157"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 2,
									"value": "157"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "158"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 2,
									"value": "158"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "159"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 2,
									"value": "159"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "160"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "161"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 2,
									"value": "161"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 2,
									"value": "160"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8340,
									"end": 8351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8374,
									"end": 8380,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8369,
									"end": 8372,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8362,
									"end": 8381,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8414,
									"end": 8418,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8409,
									"end": 8412,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8405,
									"end": 8419,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8390,
									"end": 8419,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8390,
									"end": 8419,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8256,
									"end": 8425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8612,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 8431,
									"end": 8612,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8571,
									"end": 8604,
									"name": "PUSH",
									"source": 2,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 8567,
									"end": 8568,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8559,
									"end": 8565,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8555,
									"end": 8569,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8548,
									"end": 8605,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8612,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8618,
									"end": 8984,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 8618,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8760,
									"end": 8763,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8781,
									"end": 8848,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "165"
								},
								{
									"begin": 8845,
									"end": 8847,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 8840,
									"end": 8843,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8781,
									"end": 8848,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 8781,
									"end": 8848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8781,
									"end": 8848,
									"name": "tag",
									"source": 2,
									"value": "165"
								},
								{
									"begin": 8781,
									"end": 8848,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8774,
									"end": 8848,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8774,
									"end": 8848,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8857,
									"end": 8950,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "166"
								},
								{
									"begin": 8946,
									"end": 8949,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8857,
									"end": 8950,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 8857,
									"end": 8950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8857,
									"end": 8950,
									"name": "tag",
									"source": 2,
									"value": "166"
								},
								{
									"begin": 8857,
									"end": 8950,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8975,
									"end": 8977,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8970,
									"end": 8973,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8966,
									"end": 8978,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8959,
									"end": 8978,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8959,
									"end": 8978,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8618,
									"end": 8984,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8618,
									"end": 8984,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8618,
									"end": 8984,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8618,
									"end": 8984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8990,
									"end": 9409,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 8990,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9156,
									"end": 9160,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9194,
									"end": 9196,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9183,
									"end": 9192,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9179,
									"end": 9197,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9171,
									"end": 9197,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9171,
									"end": 9197,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9243,
									"end": 9252,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9237,
									"end": 9241,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9233,
									"end": 9253,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9229,
									"end": 9230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9218,
									"end": 9227,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9214,
									"end": 9231,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9207,
									"end": 9254,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9271,
									"end": 9402,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "168"
								},
								{
									"begin": 9397,
									"end": 9401,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9271,
									"end": 9402,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 9271,
									"end": 9402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9271,
									"end": 9402,
									"name": "tag",
									"source": 2,
									"value": "168"
								},
								{
									"begin": 9271,
									"end": 9402,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9263,
									"end": 9402,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9263,
									"end": 9402,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8990,
									"end": 9409,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8990,
									"end": 9409,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8990,
									"end": 9409,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8990,
									"end": 9409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9455,
									"end": 9458,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9474,
									"end": 9494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "170"
								},
								{
									"begin": 9492,
									"end": 9493,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9474,
									"end": 9494,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 9474,
									"end": 9494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9474,
									"end": 9494,
									"name": "tag",
									"source": 2,
									"value": "170"
								},
								{
									"begin": 9474,
									"end": 9494,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9469,
									"end": 9494,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9469,
									"end": 9494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "171"
								},
								{
									"begin": 9526,
									"end": 9527,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 9508,
									"end": 9528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9508,
									"end": 9528,
									"name": "tag",
									"source": 2,
									"value": "171"
								},
								{
									"begin": 9508,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9503,
									"end": 9528,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9503,
									"end": 9528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9551,
									"end": 9552,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9548,
									"end": 9549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9544,
									"end": 9553,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9537,
									"end": 9553,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9537,
									"end": 9553,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9572,
									"end": 9575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9569,
									"end": 9570,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9566,
									"end": 9576,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 9563,
									"end": 9599,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 9563,
									"end": 9599,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "172"
								},
								{
									"begin": 9563,
									"end": 9599,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "173"
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 9579,
									"end": 9597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "tag",
									"source": 2,
									"value": "173"
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9563,
									"end": 9599,
									"name": "tag",
									"source": 2,
									"value": "172"
								},
								{
									"begin": 9563,
									"end": 9599,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9415,
									"end": 9606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9612,
									"end": 9730,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 9612,
									"end": 9730,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9699,
									"end": 9723,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "175"
								},
								{
									"begin": 9717,
									"end": 9722,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9699,
									"end": 9723,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 9699,
									"end": 9723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9699,
									"end": 9723,
									"name": "tag",
									"source": 2,
									"value": "175"
								},
								{
									"begin": 9699,
									"end": 9723,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9694,
									"end": 9697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9687,
									"end": 9724,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9612,
									"end": 9730,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9612,
									"end": 9730,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9612,
									"end": 9730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9829,
									"end": 9833,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9867,
									"end": 9869,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9856,
									"end": 9865,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9852,
									"end": 9870,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9844,
									"end": 9870,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9844,
									"end": 9870,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9880,
									"end": 9951,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "177"
								},
								{
									"begin": 9948,
									"end": 9949,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9937,
									"end": 9946,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9933,
									"end": 9950,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9880,
									"end": 9951,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 9880,
									"end": 9951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9880,
									"end": 9951,
									"name": "tag",
									"source": 2,
									"value": "177"
								},
								{
									"begin": 9880,
									"end": 9951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9736,
									"end": 9958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 19861,
									"end": 20012,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202edb111f92ec3b08f2cc8555d076438250b224a7bf8d88674412acc41029990264736f6c63430008110033",
									".code": [
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "B8BA6007"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "D993226B"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "79CC6790"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "4BE3403C"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20012,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 19237,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 19237,
											"end": 19326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 19632,
											"end": 19793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19632,
											"end": 19793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8240,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8240,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10553,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10553,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10584,
											"end": 10589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10575,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9310,
											"end": 9317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9336,
											"end": 9348,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9336,
											"end": 9348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11358,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11358,
											"end": 11370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11396,
											"end": 11400,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11380,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11428,
											"end": 11455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11476,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 11995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 11998,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11998,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 12029,
											"end": 12034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12055,
											"end": 12060,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12069,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12045,
											"end": 12070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12045,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12020,
											"end": 12084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19292,
											"end": 19319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 19298,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 19298,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 19298,
											"end": 19310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19298,
											"end": 19310,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 19298,
											"end": 19310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19312,
											"end": 19318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19292,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 19292,
											"end": 19319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19292,
											"end": 19319,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 19292,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19237,
											"end": 19326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 1,
											"value": "A70C3C40A64E6C51999090B65F67D9240000000000000"
										},
										{
											"begin": 7634,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7634,
											"end": 7648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7704,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7774,
											"end": 7788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7758,
											"end": 7773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19708,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 19724,
											"end": 19731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19733,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 19733,
											"end": 19743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 19733,
											"end": 19745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19733,
											"end": 19745,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 19733,
											"end": 19745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19747,
											"end": 19753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19708,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 19708,
											"end": 19754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19708,
											"end": 19754,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 19708,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19764,
											"end": 19786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 19770,
											"end": 19777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19779,
											"end": 19785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19764,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 19764,
											"end": 19786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19764,
											"end": 19786,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 19764,
											"end": 19786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19632,
											"end": 19793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8460,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8453,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8453,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12708,
											"end": 12721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12724,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12724,
											"end": 12736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 12783,
											"end": 12788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12773,
											"end": 12798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12851,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12851,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 12808,
											"end": 12893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 12936,
											"end": 12941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12950,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12927,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13015,
											"end": 13019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9845,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9845,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9877,
											"end": 9882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9886,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9867,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9916,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6940,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6990,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7045,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7106,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7101,
											"end": 7119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7261,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7246,
											"end": 7281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7335,
											"end": 7345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7321,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7326,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7312,
											"end": 7334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7953,
											"end": 7970,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7953,
											"end": 7970,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7926,
											"end": 7938,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7926,
											"end": 7952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8035,
											"end": 8049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8015,
											"end": 8029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8010,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7996,
											"end": 8034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10089,
											"end": 10123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10089,
											"end": 10123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 693,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 765,
											"end": 782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16288,
											"end": 16356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16393,
											"end": 16394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16366,
											"end": 16434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16475,
											"end": 16481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16456,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16457,
											"end": 16462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16464,
											"end": 16471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16512,
											"end": 16519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16521,
											"end": 16527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16496,
											"end": 16528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16983,
											"end": 16988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 16997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 16973,
											"end": 16998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17032,
											"end": 17049,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17049,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17093,
											"end": 17099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17099,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 17065,
											"end": 17133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 17184,
											"end": 17189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17225,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17175,
											"end": 17226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13598,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13698,
											"end": 13699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 13676,
											"end": 13740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13772,
											"end": 13776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 13780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 13751,
											"end": 13789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 13876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13876,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13847,
											"end": 13919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 13991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14021,
											"end": 14023,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 14011,
											"end": 14034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14065,
											"end": 14067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14059,
											"end": 14063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14069,
											"end": 14075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 14050,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14107,
											"end": 14111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14113,
											"end": 14115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14117,
											"end": 14123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 14087,
											"end": 14124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14174,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14152,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14159,
											"end": 14160,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15742,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 15166,
											"end": 15742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15268,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15241,
											"end": 15308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15241,
											"end": 15308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15340,
											"end": 15347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15319,
											"end": 15368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15368,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15319,
											"end": 15368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15379,
											"end": 15401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15404,
											"end": 15413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15414,
											"end": 15421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15379,
											"end": 15422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15379,
											"end": 15422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15458,
											"end": 15464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15440,
											"end": 15454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15440,
											"end": 15464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15440,
											"end": 15464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15432,
											"end": 15503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15432,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15558,
											"end": 15572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15558,
											"end": 15581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15554,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15581,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15617,
											"end": 15623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15613,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 15601,
											"end": 15613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15601,
											"end": 15623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15648,
											"end": 15655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15669,
											"end": 15675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 15639,
											"end": 15676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15676,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15687,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15707,
											"end": 15714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15687,
											"end": 15706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15687,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15687,
											"end": 15735,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15687,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6051,
											"end": 6128,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6422,
											"end": 6460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6475,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6563,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6657,
											"end": 6658,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6760,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6862,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6865,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7072,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7107,
											"end": 7114,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7291,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7367,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 7763,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7724,
											"end": 7741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7781,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8065,
											"end": 8099,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8100,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "PUSH",
											"source": 2,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8121,
											"end": 8127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8110,
											"end": 8141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8296,
											"end": 8299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8376,
											"end": 8379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8317,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 8393,
											"end": 8486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8743,
											"end": 8790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8807,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9091,
											"end": 9125,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9155,
											"end": 9157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9153,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9136,
											"end": 9165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9341,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9417,
											"end": 9510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9814,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 9957,
											"end": 9961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9831,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10115,
											"end": 10146,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 10111,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10099,
											"end": 10113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10387,
											"end": 10389,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 10323,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10399,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10698,
											"end": 10702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10721,
											"end": 10739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10760,
											"end": 10769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 10813,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11097,
											"end": 11131,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11081,
											"end": 11095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11074,
											"end": 11132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11173,
											"name": "PUSH",
											"source": 2,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11149,
											"end": 11164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 11409,
											"end": 11412,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11350,
											"end": 11417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 11515,
											"end": 11518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 11426,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11535,
											"end": 11547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11752,
											"end": 11761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11812,
											"end": 11821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11806,
											"end": 11810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11783,
											"end": 11800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11776,
											"end": 11823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11840,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12158,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12101,
											"end": 12159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12193,
											"end": 12198,
											"name": "PUSH",
											"source": 2,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12188,
											"end": 12190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12176,
											"end": 12191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12169,
											"end": 12199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12375,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12451,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12564,
											"end": 12567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12560,
											"end": 12572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12831,
											"end": 12835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12827,
											"end": 12847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12808,
											"end": 12825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12801,
											"end": 12848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12865,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13133,
											"end": 13147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13184,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13226,
											"name": "PUSH",
											"source": 2,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13205,
											"end": 13211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13201,
											"end": 13216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13194,
											"end": 13227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 13403,
											"end": 13470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 13568,
											"end": 13571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 13479,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13597,
											"end": 13599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13588,
											"end": 13600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13859,
											"end": 13863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13855,
											"end": 13875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13851,
											"end": 13852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13836,
											"end": 13853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13829,
											"end": 13876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 14019,
											"end": 14023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 13893,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14211,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14161,
											"end": 14175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14154,
											"end": 14212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14246,
											"end": 14249,
											"name": "PUSH",
											"source": 2,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14241,
											"end": 14243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14229,
											"end": 14244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14222,
											"end": 14250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14490,
											"end": 14492,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 14485,
											"end": 14488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14426,
											"end": 14493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14419,
											"end": 14493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14419,
											"end": 14493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14591,
											"end": 14594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 14502,
											"end": 14595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14620,
											"end": 14622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14611,
											"end": 14623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14604,
											"end": 14623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14604,
											"end": 14623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14263,
											"end": 14629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14801,
											"end": 14805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14839,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 14837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14824,
											"end": 14842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14816,
											"end": 14842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14816,
											"end": 14842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14888,
											"end": 14897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14882,
											"end": 14886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14878,
											"end": 14898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14874,
											"end": 14875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14859,
											"end": 14876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14852,
											"end": 14899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14916,
											"end": 15047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 15047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 15047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 15054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15200,
											"end": 15234,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 15196,
											"end": 15197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15184,
											"end": 15198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15177,
											"end": 15235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "PUSH",
											"source": 2,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15264,
											"end": 15266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15256,
											"end": 15262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15060,
											"end": 15281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15514,
											"end": 15516,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 15509,
											"end": 15512,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 15450,
											"end": 15517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15443,
											"end": 15517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15443,
											"end": 15517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 15615,
											"end": 15618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 15526,
											"end": 15619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15644,
											"end": 15646,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15635,
											"end": 15647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15628,
											"end": 15647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15628,
											"end": 15647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15287,
											"end": 15653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15852,
											"end": 15861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15840,
											"end": 15866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15840,
											"end": 15866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15912,
											"end": 15921,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15906,
											"end": 15910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15902,
											"end": 15922,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15898,
											"end": 15899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15883,
											"end": 15900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15876,
											"end": 15923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 16066,
											"end": 16070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 15940,
											"end": 16071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15932,
											"end": 16071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15932,
											"end": 16071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15659,
											"end": 16078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16124,
											"end": 16128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 16162,
											"end": 16163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16144,
											"end": 16164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16139,
											"end": 16164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16139,
											"end": 16164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 16196,
											"end": 16197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16178,
											"end": 16198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16178,
											"end": 16198,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 16178,
											"end": 16198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16173,
											"end": 16198,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16173,
											"end": 16198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16222,
											"end": 16223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16219,
											"end": 16220,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16215,
											"end": 16224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16246,
											"end": 16247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16240,
											"end": 16244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16237,
											"end": 16248,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16234,
											"end": 16271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16234,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 16234,
											"end": 16271,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 16251,
											"end": 16269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16234,
											"end": 16271,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 16234,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16084,
											"end": 16278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16324,
											"end": 16331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16365,
											"end": 16366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16347,
											"end": 16367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16367,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 16347,
											"end": 16367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16342,
											"end": 16367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16342,
											"end": 16367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16381,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16399,
											"end": 16400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16381,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16381,
											"end": 16401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16381,
											"end": 16401,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 16381,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16376,
											"end": 16401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16376,
											"end": 16401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16436,
											"end": 16437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16433,
											"end": 16434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16438,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16458,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 16476,
											"end": 16487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16458,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16458,
											"end": 16488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16458,
											"end": 16488,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 16458,
											"end": 16488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16447,
											"end": 16488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16447,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16637,
											"end": 16638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16628,
											"end": 16635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16624,
											"end": 16639,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 16621,
											"end": 16622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16618,
											"end": 16640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16598,
											"end": 16599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16591,
											"end": 16600,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16571,
											"end": 16654,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16667,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16667,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 16667,
											"end": 16685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16667,
											"end": 16685,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 16667,
											"end": 16685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 16548,
											"end": 16687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16332,
											"end": 16694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16700,
											"end": 16880,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 16700,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16748,
											"end": 16825,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16745,
											"end": 16746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16738,
											"end": 16826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16845,
											"end": 16849,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 16842,
											"end": 16843,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16835,
											"end": 16850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16873,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 16866,
											"end": 16867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16859,
											"end": 16874,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16926,
											"end": 16927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16943,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 16961,
											"end": 16962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16943,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16943,
											"end": 16963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16943,
											"end": 16963,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 16943,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16938,
											"end": 16963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16938,
											"end": 16963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16977,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 16995,
											"end": 16996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16977,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16977,
											"end": 16997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16977,
											"end": 16997,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 16977,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16972,
											"end": 16997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16972,
											"end": 16997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17016,
											"end": 17017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17006,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 17006,
											"end": 17041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17021,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 17021,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17021,
											"end": 17039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17021,
											"end": 17039,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 17021,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17006,
											"end": 17041,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 17006,
											"end": 17041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17063,
											"end": 17064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17060,
											"end": 17061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17056,
											"end": 17065,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16886,
											"end": 17071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC20/MinePower.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"difficult(uint256)": "d993226b",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"DCOFF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 449,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 455,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 457,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 459,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_TokenperBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 461,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 463,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 465,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 472,
								"contract": "minerpunk/ERC20/MinePower.sol:DCOFF",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"_mineInfo": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/ERC20/MinePower.sol\":5788:18672  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/ERC20/MinePower.sol\":6641:6827  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"minerpunk/ERC20/MinePower.sol\":6715:6720  name_ */\n  dup2\n    /* \"minerpunk/ERC20/MinePower.sol\":6707:6712  _name */\n  0x05\n    /* \"minerpunk/ERC20/MinePower.sol\":6707:6720  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6740:6747  symbol_ */\n  dup1\n    /* \"minerpunk/ERC20/MinePower.sol\":6730:6737  _symbol */\n  0x06\n    /* \"minerpunk/ERC20/MinePower.sol\":6730:6747  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6774:6778  5e18 */\n  0x4563918244f40000\n    /* \"minerpunk/ERC20/MinePower.sol\":6757:6771  _TokenperBlock */\n  0x03\n    /* \"minerpunk/ERC20/MinePower.sol\":6757:6778  _TokenperBlock = 5e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6808:6820  block.number */\n  number\n    /* \"minerpunk/ERC20/MinePower.sol\":6788:6805  _startBlockNumber */\n  0x04\n    /* \"minerpunk/ERC20/MinePower.sol\":6788:6820  _startBlockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":6641:6827  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"minerpunk/ERC20/MinePower.sol\":5788:18672  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC20/MinePower.sol\":5788:18672  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/ERC20/MinePower.sol\":5788:18672  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb8ba6007\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd993226b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4be3403c\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"minerpunk/ERC20/MinePower.sol\":8215:8228  string memory */\n      0x60\n        /* \"minerpunk/ERC20/MinePower.sol\":8247:8252  _name */\n      0x05\n        /* \"minerpunk/ERC20/MinePower.sol\":8240:8252  return _name */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8161:8259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"minerpunk/ERC20/MinePower.sol\":10521:10525  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10537:10550  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10565  _msgSender() */\n      tag_89\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10563  _msgSender */\n      tag_90\n        /* \"minerpunk/ERC20/MinePower.sol\":10553:10565  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"minerpunk/ERC20/MinePower.sol\":10537:10565  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10607  _approve(owner, spender, amount) */\n      tag_91\n        /* \"minerpunk/ERC20/MinePower.sol\":10584:10589  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":10591:10598  spender */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":10600:10606  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10583  _approve */\n      tag_92\n        /* \"minerpunk/ERC20/MinePower.sol\":10575:10607  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_91:\n        /* \"minerpunk/ERC20/MinePower.sol\":10624:10628  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":10617:10628  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":10438:10635  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_31:\n        /* \"minerpunk/ERC20/MinePower.sol\":9310:9317  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9336:9348  _totalSupply */\n      sload(0x02)\n        /* \"minerpunk/ERC20/MinePower.sol\":9329:9348  return _totalSupply */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9249:9355  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n    tag_37:\n        /* \"minerpunk/ERC20/MinePower.sol\":11324:11328  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":11340:11355  address spender */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11370  _msgSender() */\n      tag_95\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11368  _msgSender */\n      tag_90\n        /* \"minerpunk/ERC20/MinePower.sol\":11358:11370  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"minerpunk/ERC20/MinePower.sol\":11340:11370  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11418  _spendAllowance(from, spender, amount) */\n      tag_96\n        /* \"minerpunk/ERC20/MinePower.sol\":11396:11400  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11402:11409  spender */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":11411:11417  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11395  _spendAllowance */\n      tag_97\n        /* \"minerpunk/ERC20/MinePower.sol\":11380:11418  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_96:\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11455  _transfer(from, to, amount) */\n      tag_98\n        /* \"minerpunk/ERC20/MinePower.sol\":11438:11442  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11444:11446  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11448:11454  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11437  _transfer */\n      tag_99\n        /* \"minerpunk/ERC20/MinePower.sol\":11428:11455  _transfer(from, to, amount) */\n      jump\t// in\n    tag_98:\n        /* \"minerpunk/ERC20/MinePower.sol\":11472:11476  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":11465:11476  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11197:11483  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n    tag_40:\n        /* \"minerpunk/ERC20/MinePower.sol\":9156:9161  uint8 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9180:9182  18 */\n      0x12\n        /* \"minerpunk/ERC20/MinePower.sol\":9173:9182  return 18 */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9098:9189  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"minerpunk/ERC20/MinePower.sol\":11966:11970  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":11982:11995  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12010  _msgSender() */\n      tag_102\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12008  _msgSender */\n      tag_90\n        /* \"minerpunk/ERC20/MinePower.sol\":11998:12010  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"minerpunk/ERC20/MinePower.sol\":11982:12010  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12084  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_103\n        /* \"minerpunk/ERC20/MinePower.sol\":12029:12034  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":12036:12043  spender */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12073:12083  addedValue */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12070  allowance(owner, spender) */\n      tag_104\n        /* \"minerpunk/ERC20/MinePower.sol\":12055:12060  owner */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":12062:12069  spender */\n      dup10\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12054  allowance */\n      tag_79\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12070  allowance(owner, spender) */\n      jump\t// in\n    tag_104:\n        /* \"minerpunk/ERC20/MinePower.sol\":12045:12083  allowance(owner, spender) + addedValue */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12028  _approve */\n      tag_92\n        /* \"minerpunk/ERC20/MinePower.sol\":12020:12084  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_103:\n        /* \"minerpunk/ERC20/MinePower.sol\":12101:12105  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":12094:12105  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":11878:12112  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n    tag_50:\n        /* \"minerpunk/ERC20/MinePower.sol\":7492:7499  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7528:7545  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7513:7525  _BlockNumber */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":7513:7545  _BlockNumber < _startBlockNumber */\n      lt\n        /* \"minerpunk/ERC20/MinePower.sol\":7510:7603  if(_BlockNumber < _startBlockNumber){... */\n      iszero\n      tag_108\n      jumpi\n        /* \"minerpunk/ERC20/MinePower.sol\":7575:7592  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7560:7592  _BlockNumber = _startBlockNumber */\n      swap2\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7510:7603  if(_BlockNumber < _startBlockNumber){... */\n    tag_108:\n        /* \"minerpunk/ERC20/MinePower.sol\":7612:7631  uint256 DCFperBlock */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7658  _TokenperBlock.mul(1e54) */\n      tag_109\n        /* \"minerpunk/ERC20/MinePower.sol\":7653:7657  1e54 */\n      0x0a70c3c40a64e6c51999090b65f67d9240000000000000\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7648  _TokenperBlock */\n      sload(0x03)\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7652  _TokenperBlock.mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7634:7658  _TokenperBlock.mul(1e54) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"minerpunk/ERC20/MinePower.sol\":7612:7658  uint256 DCFperBlock = _TokenperBlock.mul(1e54) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7679:7701  uint256 BlockDifficult */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7727  difficult(_BlockNumber) */\n      tag_111\n        /* \"minerpunk/ERC20/MinePower.sol\":7714:7726  _BlockNumber */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7713  difficult */\n      tag_74\n        /* \"minerpunk/ERC20/MinePower.sol\":7704:7727  difficult(_BlockNumber) */\n      jump\t// in\n    tag_111:\n        /* \"minerpunk/ERC20/MinePower.sol\":7679:7727  uint256 BlockDifficult = difficult(_BlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7742:7755  uint256 DugUP */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7789  DCFperBlock.div(BlockDifficult) */\n      tag_112\n        /* \"minerpunk/ERC20/MinePower.sol\":7774:7788  BlockDifficult */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7769  DCFperBlock */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7773  DCFperBlock.div */\n      tag_113\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7758:7789  DCFperBlock.div(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"minerpunk/ERC20/MinePower.sol\":7742:7789  uint256 DugUP = DCFperBlock.div(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7806:7811  DugUP */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":7799:7811  return DugUP */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7427:7822  function blockStatus (uint256 _BlockNumber)public view  returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_55:\n        /* \"minerpunk/ERC20/MinePower.sol\":9487:9494  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9522  _balances */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9531  _balances[account] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9523:9530  account */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":9513:9531  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":9506:9531  return _balances[account] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9413:9538  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n    tag_58:\n        /* \"minerpunk/ERC20/MinePower.sol\":8428:8441  string memory */\n      0x60\n        /* \"minerpunk/ERC20/MinePower.sol\":8460:8467  _symbol */\n      0x06\n        /* \"minerpunk/ERC20/MinePower.sol\":8453:8467  return _symbol */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_83\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_83\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8372:8474  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_62:\n        /* \"minerpunk/ERC20/MinePower.sol\":12692:12696  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":12708:12721  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12736  _msgSender() */\n      tag_122\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12734  _msgSender */\n      tag_90\n        /* \"minerpunk/ERC20/MinePower.sol\":12724:12736  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"minerpunk/ERC20/MinePower.sol\":12708:12736  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12746:12770  uint256 currentAllowance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12798  allowance(owner, spender) */\n      tag_123\n        /* \"minerpunk/ERC20/MinePower.sol\":12783:12788  owner */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":12790:12797  spender */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12782  allowance */\n      tag_79\n        /* \"minerpunk/ERC20/MinePower.sol\":12773:12798  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"minerpunk/ERC20/MinePower.sol\":12746:12798  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12836:12851  subtractedValue */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":12816:12832  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":12816:12851  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":12808:12893  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12987  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_127\n        /* \"minerpunk/ERC20/MinePower.sol\":12936:12941  owner */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":12943:12950  spender */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12971:12986  subtractedValue */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":12952:12968  currentAllowance */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":12952:12986  currentAllowance - subtractedValue */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12935  _approve */\n      tag_92\n        /* \"minerpunk/ERC20/MinePower.sol\":12927:12987  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_127:\n        /* \"minerpunk/ERC20/MinePower.sol\":13015:13019  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":13008:13019  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":12599:13026  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_66:\n        /* \"minerpunk/ERC20/MinePower.sol\":9813:9817  bool */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":9829:9842  address owner */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9857  _msgSender() */\n      tag_129\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9855  _msgSender */\n      tag_90\n        /* \"minerpunk/ERC20/MinePower.sol\":9845:9857  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"minerpunk/ERC20/MinePower.sol\":9829:9857  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9895  _transfer(owner, to, amount) */\n      tag_130\n        /* \"minerpunk/ERC20/MinePower.sol\":9877:9882  owner */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":9884:9886  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":9888:9894  amount */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9876  _transfer */\n      tag_99\n        /* \"minerpunk/ERC20/MinePower.sol\":9867:9895  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"minerpunk/ERC20/MinePower.sol\":9912:9916  true */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":9905:9916  return true */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9734:9923  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n    tag_70:\n        /* \"minerpunk/ERC20/MinePower.sol\":6889:6896  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6907:6925  uint256 difference */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6964  block.number.sub(_mineInfo[user][1]) */\n      tag_132\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6954  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6960  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6955:6959  user */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6960  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6963  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6961:6962  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":6945:6963  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6940  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6944  block.number.sub */\n      tag_133\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":6928:6964  block.number.sub(_mineInfo[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"minerpunk/ERC20/MinePower.sol\":6907:6964  uint256 difference = block.number.sub(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":6974:6987  uint256 start */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7021  blockStatus(_mineInfo[user][1]) */\n      tag_134\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7011  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7017  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7012:7016  user */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7017  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7020  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7018:7019  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":7002:7020  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7001  blockStatus */\n      tag_50\n        /* \"minerpunk/ERC20/MinePower.sol\":6990:7021  blockStatus(_mineInfo[user][1]) */\n      jump\t// in\n    tag_134:\n        /* \"minerpunk/ERC20/MinePower.sol\":6974:7021  uint256 start = blockStatus(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7031:7042  uint256 end */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7070  blockStatus(block.number) */\n      tag_135\n        /* \"minerpunk/ERC20/MinePower.sol\":7057:7069  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7056  blockStatus */\n      tag_50\n        /* \"minerpunk/ERC20/MinePower.sol\":7045:7070  blockStatus(block.number) */\n      jump\t// in\n    tag_135:\n        /* \"minerpunk/ERC20/MinePower.sol\":7031:7070  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7080:7098  uint256 mined_area */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7138  start.add(end).mul(difference).div(2) */\n      tag_136\n        /* \"minerpunk/ERC20/MinePower.sol\":7136:7137  2 */\n      0x02\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7131  start.add(end).mul(difference) */\n      tag_137\n        /* \"minerpunk/ERC20/MinePower.sol\":7120:7130  difference */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7115  start.add(end) */\n      tag_138\n        /* \"minerpunk/ERC20/MinePower.sol\":7111:7114  end */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7106  start */\n      dup9\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7110  start.add */\n      tag_139\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7115  start.add(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7119  start.add(end).mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7131  start.add(end).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7135  start.add(end).mul(difference).div */\n      tag_113\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7101:7138  start.add(end).mul(difference).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"minerpunk/ERC20/MinePower.sol\":7080:7138  uint256 mined_area = start.add(end).mul(difference).div(2) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7228:7243  uint dcf_amount */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7295  mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      tag_140\n        /* \"minerpunk/ERC20/MinePower.sol\":7282:7294  _totalSupply */\n      sload(0x02)\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7277  mined_area.mul(balanceOf(user)) */\n      tag_141\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7276  balanceOf(user) */\n      tag_142\n        /* \"minerpunk/ERC20/MinePower.sol\":7271:7275  user */\n      dup11\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7270  balanceOf */\n      tag_55\n        /* \"minerpunk/ERC20/MinePower.sol\":7261:7276  balanceOf(user) */\n      jump\t// in\n    tag_142:\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7256  mined_area */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7260  mined_area.mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7277  mined_area.mul(balanceOf(user)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7281  mined_area.mul(balanceOf(user)).div */\n      tag_113\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7246:7295  mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"minerpunk/ERC20/MinePower.sol\":7228:7295  uint dcf_amount = mined_area.mul(balanceOf(user)).div(_totalSupply) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7346  _mineInfo[user][3].add(dcf_amount) */\n      tag_143\n        /* \"minerpunk/ERC20/MinePower.sol\":7335:7345  dcf_amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7321  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7327  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7322:7326  user */\n      dup11\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7327  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7330  _mineInfo[user][3] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7328:7329  3 */\n      0x03\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7330  _mineInfo[user][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7334  _mineInfo[user][3].add */\n      tag_139\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7312:7346  _mineInfo[user][3].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"minerpunk/ERC20/MinePower.sol\":7305:7346  return _mineInfo[user][3].add(dcf_amount) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":6835:7360  function MineStatus(address user)public view  returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n    tag_74:\n        /* \"minerpunk/ERC20/MinePower.sol\":7888:7895  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":7906:7925  uint BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7971  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      tag_145\n        /* \"minerpunk/ERC20/MinePower.sol\":7953:7970  _startBlockNumber */\n      sload(0x04)\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7948  _BlockNumber.mul(1e18) */\n      tag_146\n        /* \"minerpunk/ERC20/MinePower.sol\":7943:7947  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7938  _BlockNumber */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7942  _BlockNumber.mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7948  _BlockNumber.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7952  _BlockNumber.mul(1e18).div */\n      tag_113\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7926:7971  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"minerpunk/ERC20/MinePower.sol\":7906:7971  uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8050  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      tag_147\n        /* \"minerpunk/ERC20/MinePower.sol\":8035:8049  BlockDifficult */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8030  BlockDifficult.mul(BlockDifficult) */\n      tag_148\n        /* \"minerpunk/ERC20/MinePower.sol\":8015:8029  BlockDifficult */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8010  BlockDifficult */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8014  BlockDifficult.mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8030  BlockDifficult.mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8034  BlockDifficult.mul(BlockDifficult).mul */\n      tag_110\n      swap1\n        /* \"minerpunk/ERC20/MinePower.sol\":7996:8050  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"minerpunk/ERC20/MinePower.sol\":7981:8050  BlockDifficult=BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":8067:8081  BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":8060:8081  return BlockDifficult */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":7829:8088  function difficult(uint _BlockNumber)public view  returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_79:\n        /* \"minerpunk/ERC20/MinePower.sol\":10070:10077  uint256 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10107  _allowances */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10114  _allowances[owner] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10108:10113  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10114  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10123  _allowances[owner][spender] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":10115:10122  spender */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":10096:10123  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":10089:10123  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":9981:10130  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":693:789  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"minerpunk/ERC20/MinePower.sol\":746:753  address */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":772:782  msg.sender */\n      caller\n        /* \"minerpunk/ERC20/MinePower.sol\":765:782  return msg.sender */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":693:789  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":16165:16535  function _approve(... */\n    tag_92:\n        /* \"minerpunk/ERC20/MinePower.sol\":16313:16314  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16315  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16301  owner */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16296:16315  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":16288:16356  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"minerpunk/ERC20/MinePower.sol\":16393:16394  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16395  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16381  spender */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":16374:16395  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":16366:16434  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"minerpunk/ERC20/MinePower.sol\":16475:16481  amount */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16456  _allowances */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16463  _allowances[owner] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16457:16462  owner */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16463  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16472  _allowances[owner][spender] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16464:16471  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16472  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":16445:16481  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":16512:16519  spender */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":16505:16510  owner */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"minerpunk/ERC20/MinePower.sol\":16521:16527  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":16496:16528  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC20/MinePower.sol\":16165:16535  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":16816:17257  function _spendAllowance(... */\n    tag_97:\n        /* \"minerpunk/ERC20/MinePower.sol\":16946:16970  uint256 currentAllowance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16998  allowance(owner, spender) */\n      tag_160\n        /* \"minerpunk/ERC20/MinePower.sol\":16983:16988  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16990:16997  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16982  allowance */\n      tag_79\n        /* \"minerpunk/ERC20/MinePower.sol\":16973:16998  allowance(owner, spender) */\n      jump\t// in\n    tag_160:\n        /* \"minerpunk/ERC20/MinePower.sol\":16946:16998  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":17032:17049  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"minerpunk/ERC20/MinePower.sol\":17012:17028  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17012:17049  currentAllowance != type(uint256).max */\n      eq\n        /* \"minerpunk/ERC20/MinePower.sol\":17008:17251  if (currentAllowance != type(uint256).max) {... */\n      tag_161\n      jumpi\n        /* \"minerpunk/ERC20/MinePower.sol\":17093:17099  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17073:17089  currentAllowance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":17073:17099  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":17065:17133  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17226  _approve(owner, spender, currentAllowance - amount) */\n      tag_165\n        /* \"minerpunk/ERC20/MinePower.sol\":17184:17189  owner */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17191:17198  spender */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17219:17225  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17200:17216  currentAllowance */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":17200:17225  currentAllowance - amount */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17183  _approve */\n      tag_92\n        /* \"minerpunk/ERC20/MinePower.sol\":17175:17226  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_165:\n        /* \"minerpunk/ERC20/MinePower.sol\":17008:17251  if (currentAllowance != type(uint256).max) {... */\n    tag_161:\n        /* \"minerpunk/ERC20/MinePower.sol\":16936:17257  {... */\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":16816:17257  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":13480:14181  function _transfer(... */\n    tag_99:\n        /* \"minerpunk/ERC20/MinePower.sol\":13622:13623  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13624  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13610  from */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13606:13624  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13598:13666  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"minerpunk/ERC20/MinePower.sol\":13698:13699  0 */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13686  to */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":13684:13700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13676:13740  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13789  _beforeTokenTransfer(from, to, amount) */\n      tag_173\n        /* \"minerpunk/ERC20/MinePower.sol\":13772:13776  from */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13778:13780  to */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13782:13788  amount */\n      dup4\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13771  _beforeTokenTransfer */\n      tag_174\n        /* \"minerpunk/ERC20/MinePower.sol\":13751:13789  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_173:\n        /* \"minerpunk/ERC20/MinePower.sol\":13800:13819  uint256 fromBalance */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13831  _balances */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13837  _balances[from] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13832:13836  from */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":13822:13837  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC20/MinePower.sol\":13800:13837  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13870:13876  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13855:13866  fromBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13855:13876  fromBalance >= amount */\n      lt\n      iszero\n        /* \"minerpunk/ERC20/MinePower.sol\":13847:13919  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"minerpunk/ERC20/MinePower.sol\":13985:13991  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13971:13982  fromBalance */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":13971:13991  fromBalance - amount */\n      sub\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13962  _balances */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13968  _balances[from] */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":13963:13967  from */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13968  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":13953:13991  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":14028:14034  amount */\n      dup2\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14020  _balances */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14024  _balances[to] */\n      dup1\n        /* \"minerpunk/ERC20/MinePower.sol\":14021:14023  to */\n      dup6\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14024  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14011:14034  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":14065:14067  to */\n      dup3\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC20/MinePower.sol\":14059:14063  from */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"minerpunk/ERC20/MinePower.sol\":14069:14075  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14050:14076  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14124  _afterTokenTransfer(from, to, amount) */\n      tag_180\n        /* \"minerpunk/ERC20/MinePower.sol\":14107:14111  from */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14113:14115  to */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14117:14123  amount */\n      dup5\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14106  _afterTokenTransfer */\n      tag_181\n        /* \"minerpunk/ERC20/MinePower.sol\":14087:14124  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_180:\n        /* \"minerpunk/ERC20/MinePower.sol\":14162:14174  block.number */\n      number\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14152  _mineInfo */\n      0x07\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14158  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14153:14157  from */\n      dup7\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14158  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14161  _mineInfo[from][1] */\n      0x00\n        /* \"minerpunk/ERC20/MinePower.sol\":14159:14160  1 */\n      0x01\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14161  _mineInfo[from][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC20/MinePower.sol\":14143:14174  _mineInfo[from][1]=block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13588:14181  {... */\n      pop\n        /* \"minerpunk/ERC20/MinePower.sol\":13480:14181  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_192\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":17841:17962  function _beforeTokenTransfer(... */\n    tag_174:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC20/MinePower.sol\":18550:18670  function _afterTokenTransfer(... */\n    tag_181:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_195:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_196:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_197:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_236:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_236)\n    tag_238:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_198:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_199:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_241\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_195\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":818:889   */\n      tag_242\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_196\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_243\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_197\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":988:1017   */\n      tag_244\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_198\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_23:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_246\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_199\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_201:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_203:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_204:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_252\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_203\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_205:\n        /* \"#utility.yul\":1983:2007   */\n      tag_254\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_204\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_255:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_206:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_257\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_205\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_207:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_208:\n        /* \"#utility.yul\":2339:2363   */\n      tag_260\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_207\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_261:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_209:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_263\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_208\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_26:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_266\n      tag_201\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2632:2751   */\n    tag_265:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_267\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_206\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_268\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_209\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_210:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_211:\n        /* \"#utility.yul\":3196:3217   */\n      tag_271\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_210\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_29:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_273\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_211\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_212:\n        /* \"#utility.yul\":3533:3557   */\n      tag_275\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_207\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_33:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_277\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_212\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_36:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_280\n      tag_201\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3908:4027   */\n    tag_279:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_281\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_206\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_282\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_206\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_283\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_209\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_213:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_214:\n        /* \"#utility.yul\":4598:4620   */\n      tag_286\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_213\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_42:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_288\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_214\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_49:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_291\n      tag_201\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4929:5048   */\n    tag_290:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_292\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_209\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_54:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_295\n      tag_201\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5264:5383   */\n    tag_294:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_296\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_206\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_78:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_299\n      tag_201\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5616:5735   */\n    tag_298:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_300\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_206\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_301\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_206\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6183   */\n    tag_215:\n        /* \"#utility.yul\":6051:6128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6041:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x22\n        /* \"#utility.yul\":6145:6146   */\n      0x04\n        /* \"#utility.yul\":6138:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x24\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6177   */\n      revert\n        /* \"#utility.yul\":6189:6509   */\n    tag_83:\n        /* \"#utility.yul\":6233:6239   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      0x02\n        /* \"#utility.yul\":6264:6268   */\n      dup3\n        /* \"#utility.yul\":6260:6272   */\n      div\n        /* \"#utility.yul\":6250:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6318   */\n      0x01\n        /* \"#utility.yul\":6311:6315   */\n      dup3\n        /* \"#utility.yul\":6307:6319   */\n      and\n        /* \"#utility.yul\":6338:6356   */\n      dup1\n        /* \"#utility.yul\":6328:6409   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":6394:6398   */\n      0x7f\n        /* \"#utility.yul\":6386:6392   */\n      dup3\n        /* \"#utility.yul\":6382:6399   */\n      and\n        /* \"#utility.yul\":6372:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6409   */\n    tag_304:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6445:6459   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      dup2\n        /* \"#utility.yul\":6422:6460   */\n      sub\n        /* \"#utility.yul\":6419:6503   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":6475:6493   */\n      tag_306\n      tag_215\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6419:6503   */\n    tag_305:\n        /* \"#utility.yul\":6240:6509   */\n      pop\n        /* \"#utility.yul\":6189:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6695   */\n    tag_216:\n        /* \"#utility.yul\":6563:6640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6553:6641   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x11\n        /* \"#utility.yul\":6657:6658   */\n      0x04\n        /* \"#utility.yul\":6650:6665   */\n      mstore\n        /* \"#utility.yul\":6684:6688   */\n      0x24\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6674:6689   */\n      revert\n        /* \"#utility.yul\":6701:6892   */\n    tag_106:\n        /* \"#utility.yul\":6741:6744   */\n      0x00\n        /* \"#utility.yul\":6760:6780   */\n      tag_309\n        /* \"#utility.yul\":6778:6779   */\n      dup3\n        /* \"#utility.yul\":6760:6780   */\n      tag_207\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6755:6780   */\n      swap2\n      pop\n        /* \"#utility.yul\":6794:6814   */\n      tag_310\n        /* \"#utility.yul\":6812:6813   */\n      dup4\n        /* \"#utility.yul\":6794:6814   */\n      tag_207\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6789:6814   */\n      swap3\n      pop\n        /* \"#utility.yul\":6837:6838   */\n      dup3\n        /* \"#utility.yul\":6834:6835   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      add\n        /* \"#utility.yul\":6823:6839   */\n      swap1\n      pop\n        /* \"#utility.yul\":6858:6861   */\n      dup1\n        /* \"#utility.yul\":6855:6856   */\n      dup3\n        /* \"#utility.yul\":6852:6862   */\n      gt\n        /* \"#utility.yul\":6849:6885   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":6865:6883   */\n      tag_312\n      tag_216\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6849:6885   */\n    tag_311:\n        /* \"#utility.yul\":6701:6892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7122   */\n    tag_217:\n        /* \"#utility.yul\":7038:7072   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7034:7035   */\n      0x00\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7022:7036   */\n      add\n        /* \"#utility.yul\":7015:7073   */\n      mstore\n        /* \"#utility.yul\":7107:7114   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7102:7104   */\n      0x20\n        /* \"#utility.yul\":7094:7100   */\n      dup3\n        /* \"#utility.yul\":7090:7105   */\n      add\n        /* \"#utility.yul\":7083:7115   */\n      mstore\n        /* \"#utility.yul\":6898:7122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7494   */\n    tag_218:\n        /* \"#utility.yul\":7270:7273   */\n      0x00\n        /* \"#utility.yul\":7291:7358   */\n      tag_315\n        /* \"#utility.yul\":7355:7357   */\n      0x25\n        /* \"#utility.yul\":7350:7353   */\n      dup4\n        /* \"#utility.yul\":7291:7358   */\n      tag_196\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7284:7358   */\n      swap2\n      pop\n        /* \"#utility.yul\":7367:7460   */\n      tag_316\n        /* \"#utility.yul\":7456:7459   */\n      dup3\n        /* \"#utility.yul\":7367:7460   */\n      tag_217\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7485:7487   */\n      0x40\n        /* \"#utility.yul\":7480:7483   */\n      dup3\n        /* \"#utility.yul\":7476:7488   */\n      add\n        /* \"#utility.yul\":7469:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7128:7494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7500:7919   */\n    tag_126:\n        /* \"#utility.yul\":7666:7670   */\n      0x00\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"#utility.yul\":7693:7702   */\n      dup3\n        /* \"#utility.yul\":7689:7707   */\n      add\n        /* \"#utility.yul\":7681:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7753:7762   */\n      dup2\n        /* \"#utility.yul\":7747:7751   */\n      dup2\n        /* \"#utility.yul\":7743:7763   */\n      sub\n        /* \"#utility.yul\":7739:7740   */\n      0x00\n        /* \"#utility.yul\":7728:7737   */\n      dup4\n        /* \"#utility.yul\":7724:7741   */\n      add\n        /* \"#utility.yul\":7717:7764   */\n      mstore\n        /* \"#utility.yul\":7781:7912   */\n      tag_318\n        /* \"#utility.yul\":7907:7911   */\n      dup2\n        /* \"#utility.yul\":7781:7912   */\n      tag_218\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7773:7912   */\n      swap1\n      pop\n        /* \"#utility.yul\":7500:7919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7925:8148   */\n    tag_219:\n        /* \"#utility.yul\":8065:8099   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8061:8062   */\n      0x00\n        /* \"#utility.yul\":8053:8059   */\n      dup3\n        /* \"#utility.yul\":8049:8063   */\n      add\n        /* \"#utility.yul\":8042:8100   */\n      mstore\n        /* \"#utility.yul\":8134:8140   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8129:8131   */\n      0x20\n        /* \"#utility.yul\":8121:8127   */\n      dup3\n        /* \"#utility.yul\":8117:8132   */\n      add\n        /* \"#utility.yul\":8110:8141   */\n      mstore\n        /* \"#utility.yul\":7925:8148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8520   */\n    tag_220:\n        /* \"#utility.yul\":8296:8299   */\n      0x00\n        /* \"#utility.yul\":8317:8384   */\n      tag_321\n        /* \"#utility.yul\":8381:8383   */\n      0x24\n        /* \"#utility.yul\":8376:8379   */\n      dup4\n        /* \"#utility.yul\":8317:8384   */\n      tag_196\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8310:8384   */\n      swap2\n      pop\n        /* \"#utility.yul\":8393:8486   */\n      tag_322\n        /* \"#utility.yul\":8482:8485   */\n      dup3\n        /* \"#utility.yul\":8393:8486   */\n      tag_219\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8511:8513   */\n      0x40\n        /* \"#utility.yul\":8506:8509   */\n      dup3\n        /* \"#utility.yul\":8502:8514   */\n      add\n        /* \"#utility.yul\":8495:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8154:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8945   */\n    tag_154:\n        /* \"#utility.yul\":8692:8696   */\n      0x00\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup3\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8707:8733   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:8788   */\n      dup2\n        /* \"#utility.yul\":8773:8777   */\n      dup2\n        /* \"#utility.yul\":8769:8789   */\n      sub\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8754:8763   */\n      dup4\n        /* \"#utility.yul\":8750:8767   */\n      add\n        /* \"#utility.yul\":8743:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8938   */\n      tag_324\n        /* \"#utility.yul\":8933:8937   */\n      dup2\n        /* \"#utility.yul\":8807:8938   */\n      tag_220\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8799:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8526:8945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8951:9172   */\n    tag_221:\n        /* \"#utility.yul\":9091:9125   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9079:9085   */\n      dup3\n        /* \"#utility.yul\":9075:9089   */\n      add\n        /* \"#utility.yul\":9068:9126   */\n      mstore\n        /* \"#utility.yul\":9160:9164   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9155:9157   */\n      0x20\n        /* \"#utility.yul\":9147:9153   */\n      dup3\n        /* \"#utility.yul\":9143:9158   */\n      add\n        /* \"#utility.yul\":9136:9165   */\n      mstore\n        /* \"#utility.yul\":8951:9172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9544   */\n    tag_222:\n        /* \"#utility.yul\":9320:9323   */\n      0x00\n        /* \"#utility.yul\":9341:9408   */\n      tag_327\n        /* \"#utility.yul\":9405:9407   */\n      0x22\n        /* \"#utility.yul\":9400:9403   */\n      dup4\n        /* \"#utility.yul\":9341:9408   */\n      tag_196\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9334:9408   */\n      swap2\n      pop\n        /* \"#utility.yul\":9417:9510   */\n      tag_328\n        /* \"#utility.yul\":9506:9509   */\n      dup3\n        /* \"#utility.yul\":9417:9510   */\n      tag_221\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9535:9537   */\n      0x40\n        /* \"#utility.yul\":9530:9533   */\n      dup3\n        /* \"#utility.yul\":9526:9538   */\n      add\n        /* \"#utility.yul\":9519:9538   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9969   */\n    tag_157:\n        /* \"#utility.yul\":9716:9720   */\n      0x00\n        /* \"#utility.yul\":9754:9756   */\n      0x20\n        /* \"#utility.yul\":9743:9752   */\n      dup3\n        /* \"#utility.yul\":9739:9757   */\n      add\n        /* \"#utility.yul\":9731:9757   */\n      swap1\n      pop\n        /* \"#utility.yul\":9803:9812   */\n      dup2\n        /* \"#utility.yul\":9797:9801   */\n      dup2\n        /* \"#utility.yul\":9793:9813   */\n      sub\n        /* \"#utility.yul\":9789:9790   */\n      0x00\n        /* \"#utility.yul\":9778:9787   */\n      dup4\n        /* \"#utility.yul\":9774:9791   */\n      add\n        /* \"#utility.yul\":9767:9814   */\n      mstore\n        /* \"#utility.yul\":9831:9962   */\n      tag_330\n        /* \"#utility.yul\":9957:9961   */\n      dup2\n        /* \"#utility.yul\":9831:9962   */\n      tag_222\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9823:9962   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9975:10154   */\n    tag_223:\n        /* \"#utility.yul\":10115:10146   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":10111:10112   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10099:10113   */\n      add\n        /* \"#utility.yul\":10092:10147   */\n      mstore\n        /* \"#utility.yul\":9975:10154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10526   */\n    tag_224:\n        /* \"#utility.yul\":10302:10305   */\n      0x00\n        /* \"#utility.yul\":10323:10390   */\n      tag_333\n        /* \"#utility.yul\":10387:10389   */\n      0x1d\n        /* \"#utility.yul\":10382:10385   */\n      dup4\n        /* \"#utility.yul\":10323:10390   */\n      tag_196\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10316:10390   */\n      swap2\n      pop\n        /* \"#utility.yul\":10399:10492   */\n      tag_334\n        /* \"#utility.yul\":10488:10491   */\n      dup3\n        /* \"#utility.yul\":10399:10492   */\n      tag_223\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10517:10519   */\n      0x20\n        /* \"#utility.yul\":10512:10515   */\n      dup3\n        /* \"#utility.yul\":10508:10520   */\n      add\n        /* \"#utility.yul\":10501:10520   */\n      swap1\n      pop\n        /* \"#utility.yul\":10160:10526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10532:10951   */\n    tag_164:\n        /* \"#utility.yul\":10698:10702   */\n      0x00\n        /* \"#utility.yul\":10736:10738   */\n      0x20\n        /* \"#utility.yul\":10725:10734   */\n      dup3\n        /* \"#utility.yul\":10721:10739   */\n      add\n        /* \"#utility.yul\":10713:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10794   */\n      dup2\n        /* \"#utility.yul\":10779:10783   */\n      dup2\n        /* \"#utility.yul\":10775:10795   */\n      sub\n        /* \"#utility.yul\":10771:10772   */\n      0x00\n        /* \"#utility.yul\":10760:10769   */\n      dup4\n        /* \"#utility.yul\":10756:10773   */\n      add\n        /* \"#utility.yul\":10749:10796   */\n      mstore\n        /* \"#utility.yul\":10813:10944   */\n      tag_336\n        /* \"#utility.yul\":10939:10943   */\n      dup2\n        /* \"#utility.yul\":10813:10944   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10805:10944   */\n      swap1\n      pop\n        /* \"#utility.yul\":10532:10951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10957:11181   */\n    tag_225:\n        /* \"#utility.yul\":11097:11131   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11093:11094   */\n      0x00\n        /* \"#utility.yul\":11085:11091   */\n      dup3\n        /* \"#utility.yul\":11081:11095   */\n      add\n        /* \"#utility.yul\":11074:11132   */\n      mstore\n        /* \"#utility.yul\":11166:11173   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11161:11163   */\n      0x20\n        /* \"#utility.yul\":11153:11159   */\n      dup3\n        /* \"#utility.yul\":11149:11164   */\n      add\n        /* \"#utility.yul\":11142:11174   */\n      mstore\n        /* \"#utility.yul\":10957:11181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11553   */\n    tag_226:\n        /* \"#utility.yul\":11329:11332   */\n      0x00\n        /* \"#utility.yul\":11350:11417   */\n      tag_339\n        /* \"#utility.yul\":11414:11416   */\n      0x25\n        /* \"#utility.yul\":11409:11412   */\n      dup4\n        /* \"#utility.yul\":11350:11417   */\n      tag_196\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11343:11417   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11519   */\n      tag_340\n        /* \"#utility.yul\":11515:11518   */\n      dup3\n        /* \"#utility.yul\":11426:11519   */\n      tag_225\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11544:11546   */\n      0x40\n        /* \"#utility.yul\":11539:11542   */\n      dup3\n        /* \"#utility.yul\":11535:11547   */\n      add\n        /* \"#utility.yul\":11528:11547   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11978   */\n    tag_169:\n        /* \"#utility.yul\":11725:11729   */\n      0x00\n        /* \"#utility.yul\":11763:11765   */\n      0x20\n        /* \"#utility.yul\":11752:11761   */\n      dup3\n        /* \"#utility.yul\":11748:11766   */\n      add\n        /* \"#utility.yul\":11740:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11812:11821   */\n      dup2\n        /* \"#utility.yul\":11806:11810   */\n      dup2\n        /* \"#utility.yul\":11802:11822   */\n      sub\n        /* \"#utility.yul\":11798:11799   */\n      0x00\n        /* \"#utility.yul\":11787:11796   */\n      dup4\n        /* \"#utility.yul\":11783:11800   */\n      add\n        /* \"#utility.yul\":11776:11823   */\n      mstore\n        /* \"#utility.yul\":11840:11971   */\n      tag_342\n        /* \"#utility.yul\":11966:11970   */\n      dup2\n        /* \"#utility.yul\":11840:11971   */\n      tag_226\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11832:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":11559:11978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11984:12206   */\n    tag_227:\n        /* \"#utility.yul\":12124:12158   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12120:12121   */\n      0x00\n        /* \"#utility.yul\":12112:12118   */\n      dup3\n        /* \"#utility.yul\":12108:12122   */\n      add\n        /* \"#utility.yul\":12101:12159   */\n      mstore\n        /* \"#utility.yul\":12193:12198   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12188:12190   */\n      0x20\n        /* \"#utility.yul\":12180:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12191   */\n      add\n        /* \"#utility.yul\":12169:12199   */\n      mstore\n        /* \"#utility.yul\":11984:12206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12578   */\n    tag_228:\n        /* \"#utility.yul\":12354:12357   */\n      0x00\n        /* \"#utility.yul\":12375:12442   */\n      tag_345\n        /* \"#utility.yul\":12439:12441   */\n      0x23\n        /* \"#utility.yul\":12434:12437   */\n      dup4\n        /* \"#utility.yul\":12375:12442   */\n      tag_196\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12368:12442   */\n      swap2\n      pop\n        /* \"#utility.yul\":12451:12544   */\n      tag_346\n        /* \"#utility.yul\":12540:12543   */\n      dup3\n        /* \"#utility.yul\":12451:12544   */\n      tag_227\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12569:12571   */\n      0x40\n        /* \"#utility.yul\":12564:12567   */\n      dup3\n        /* \"#utility.yul\":12560:12572   */\n      add\n        /* \"#utility.yul\":12553:12572   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:13003   */\n    tag_172:\n        /* \"#utility.yul\":12750:12754   */\n      0x00\n        /* \"#utility.yul\":12788:12790   */\n      0x20\n        /* \"#utility.yul\":12777:12786   */\n      dup3\n        /* \"#utility.yul\":12773:12791   */\n      add\n        /* \"#utility.yul\":12765:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12837:12846   */\n      dup2\n        /* \"#utility.yul\":12831:12835   */\n      dup2\n        /* \"#utility.yul\":12827:12847   */\n      sub\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12812:12821   */\n      dup4\n        /* \"#utility.yul\":12808:12825   */\n      add\n        /* \"#utility.yul\":12801:12848   */\n      mstore\n        /* \"#utility.yul\":12865:12996   */\n      tag_348\n        /* \"#utility.yul\":12991:12995   */\n      dup2\n        /* \"#utility.yul\":12865:12996   */\n      tag_228\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12857:12996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12584:13003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13009:13234   */\n    tag_229:\n        /* \"#utility.yul\":13149:13183   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13137:13143   */\n      dup3\n        /* \"#utility.yul\":13133:13147   */\n      add\n        /* \"#utility.yul\":13126:13184   */\n      mstore\n        /* \"#utility.yul\":13218:13226   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13205:13211   */\n      dup3\n        /* \"#utility.yul\":13201:13216   */\n      add\n        /* \"#utility.yul\":13194:13227   */\n      mstore\n        /* \"#utility.yul\":13009:13234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13240:13606   */\n    tag_230:\n        /* \"#utility.yul\":13382:13385   */\n      0x00\n        /* \"#utility.yul\":13403:13470   */\n      tag_351\n        /* \"#utility.yul\":13467:13469   */\n      0x26\n        /* \"#utility.yul\":13462:13465   */\n      dup4\n        /* \"#utility.yul\":13403:13470   */\n      tag_196\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13396:13470   */\n      swap2\n      pop\n        /* \"#utility.yul\":13479:13572   */\n      tag_352\n        /* \"#utility.yul\":13568:13571   */\n      dup3\n        /* \"#utility.yul\":13479:13572   */\n      tag_229\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13597:13599   */\n      0x40\n        /* \"#utility.yul\":13592:13595   */\n      dup3\n        /* \"#utility.yul\":13588:13600   */\n      add\n        /* \"#utility.yul\":13581:13600   */\n      swap1\n      pop\n        /* \"#utility.yul\":13240:13606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13612:14031   */\n    tag_177:\n        /* \"#utility.yul\":13778:13782   */\n      0x00\n        /* \"#utility.yul\":13816:13818   */\n      0x20\n        /* \"#utility.yul\":13805:13814   */\n      dup3\n        /* \"#utility.yul\":13801:13819   */\n      add\n        /* \"#utility.yul\":13793:13819   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:13874   */\n      dup2\n        /* \"#utility.yul\":13859:13863   */\n      dup2\n        /* \"#utility.yul\":13855:13875   */\n      sub\n        /* \"#utility.yul\":13851:13852   */\n      0x00\n        /* \"#utility.yul\":13840:13849   */\n      dup4\n        /* \"#utility.yul\":13836:13853   */\n      add\n        /* \"#utility.yul\":13829:13876   */\n      mstore\n        /* \"#utility.yul\":13893:14024   */\n      tag_354\n        /* \"#utility.yul\":14019:14023   */\n      dup2\n        /* \"#utility.yul\":13893:14024   */\n      tag_230\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":13885:14024   */\n      swap1\n      pop\n        /* \"#utility.yul\":13612:14031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14037:14447   */\n    tag_184:\n        /* \"#utility.yul\":14077:14084   */\n      0x00\n        /* \"#utility.yul\":14100:14120   */\n      tag_356\n        /* \"#utility.yul\":14118:14119   */\n      dup3\n        /* \"#utility.yul\":14100:14120   */\n      tag_207\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":14095:14120   */\n      swap2\n      pop\n        /* \"#utility.yul\":14134:14154   */\n      tag_357\n        /* \"#utility.yul\":14152:14153   */\n      dup4\n        /* \"#utility.yul\":14134:14154   */\n      tag_207\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14129:14154   */\n      swap3\n      pop\n        /* \"#utility.yul\":14189:14190   */\n      dup3\n        /* \"#utility.yul\":14186:14187   */\n      dup3\n        /* \"#utility.yul\":14182:14191   */\n      mul\n        /* \"#utility.yul\":14211:14241   */\n      tag_358\n        /* \"#utility.yul\":14229:14240   */\n      dup2\n        /* \"#utility.yul\":14211:14241   */\n      tag_207\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14200:14241   */\n      swap2\n      pop\n        /* \"#utility.yul\":14390:14391   */\n      dup3\n        /* \"#utility.yul\":14381:14388   */\n      dup3\n        /* \"#utility.yul\":14377:14392   */\n      div\n        /* \"#utility.yul\":14374:14375   */\n      dup5\n        /* \"#utility.yul\":14371:14393   */\n      eq\n        /* \"#utility.yul\":14351:14352   */\n      dup4\n        /* \"#utility.yul\":14344:14353   */\n      iszero\n        /* \"#utility.yul\":14324:14407   */\n      or\n        /* \"#utility.yul\":14301:14440   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":14420:14438   */\n      tag_360\n      tag_216\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14301:14440   */\n    tag_359:\n        /* \"#utility.yul\":14085:14447   */\n      pop\n        /* \"#utility.yul\":14037:14447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14453:14633   */\n    tag_231:\n        /* \"#utility.yul\":14501:14578   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14498:14499   */\n      0x00\n        /* \"#utility.yul\":14491:14579   */\n      mstore\n        /* \"#utility.yul\":14598:14602   */\n      0x12\n        /* \"#utility.yul\":14595:14596   */\n      0x04\n        /* \"#utility.yul\":14588:14603   */\n      mstore\n        /* \"#utility.yul\":14622:14626   */\n      0x24\n        /* \"#utility.yul\":14619:14620   */\n      0x00\n        /* \"#utility.yul\":14612:14627   */\n      revert\n        /* \"#utility.yul\":14639:14824   */\n    tag_187:\n        /* \"#utility.yul\":14679:14680   */\n      0x00\n        /* \"#utility.yul\":14696:14716   */\n      tag_363\n        /* \"#utility.yul\":14714:14715   */\n      dup3\n        /* \"#utility.yul\":14696:14716   */\n      tag_207\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14691:14716   */\n      swap2\n      pop\n        /* \"#utility.yul\":14730:14750   */\n      tag_364\n        /* \"#utility.yul\":14748:14749   */\n      dup4\n        /* \"#utility.yul\":14730:14750   */\n      tag_207\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14725:14750   */\n      swap3\n      pop\n        /* \"#utility.yul\":14769:14770   */\n      dup3\n        /* \"#utility.yul\":14759:14794   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":14774:14792   */\n      tag_366\n      tag_231\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14759:14794   */\n    tag_365:\n        /* \"#utility.yul\":14816:14817   */\n      dup3\n        /* \"#utility.yul\":14813:14814   */\n      dup3\n        /* \"#utility.yul\":14809:14818   */\n      div\n        /* \"#utility.yul\":14804:14818   */\n      swap1\n      pop\n        /* \"#utility.yul\":14639:14824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14830:15024   */\n    tag_190:\n        /* \"#utility.yul\":14870:14874   */\n      0x00\n        /* \"#utility.yul\":14890:14910   */\n      tag_368\n        /* \"#utility.yul\":14908:14909   */\n      dup3\n        /* \"#utility.yul\":14890:14910   */\n      tag_207\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14885:14910   */\n      swap2\n      pop\n        /* \"#utility.yul\":14924:14944   */\n      tag_369\n        /* \"#utility.yul\":14942:14943   */\n      dup4\n        /* \"#utility.yul\":14924:14944   */\n      tag_207\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14919:14944   */\n      swap3\n      pop\n        /* \"#utility.yul\":14968:14969   */\n      dup3\n        /* \"#utility.yul\":14965:14966   */\n      dup3\n        /* \"#utility.yul\":14961:14970   */\n      sub\n        /* \"#utility.yul\":14953:14970   */\n      swap1\n      pop\n        /* \"#utility.yul\":14992:14993   */\n      dup2\n        /* \"#utility.yul\":14986:14990   */\n      dup2\n        /* \"#utility.yul\":14983:14994   */\n      gt\n        /* \"#utility.yul\":14980:15017   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":14997:15015   */\n      tag_371\n      tag_216\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":14980:15017   */\n    tag_370:\n        /* \"#utility.yul\":14830:15024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085acf9ab9c29941175d7da79f70f410bf393f83e42613d5c81efaa56e8357d3364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_498": {
									"entryPoint": null,
									"id": 498,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:2",
														"type": ""
													}
												],
												"src": "580:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:2"
															},
															"nodeType": "YulIf",
															"src": "1030:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:2",
														"type": ""
													}
												],
												"src": "874:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:2",
														"type": ""
													}
												],
												"src": "1161:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:2"
															},
															"nodeType": "YulIf",
															"src": "1434:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:2",
														"type": ""
													}
												],
												"src": "1296:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:2",
																"statements": []
															},
															"src": "1701:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:2",
														"type": ""
													}
												],
												"src": "1610:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:2"
															},
															"nodeType": "YulIf",
															"src": "2117:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:2",
														"type": ""
													}
												],
												"src": "1862:434:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:2"
															},
															"nodeType": "YulIf",
															"src": "2399:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:2",
														"type": ""
													}
												],
												"src": "2316:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:2"
															},
															"nodeType": "YulIf",
															"src": "2801:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:2",
														"type": ""
													}
												],
												"src": "2677:853:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:2",
														"type": ""
													}
												],
												"src": "3536:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:2"
															},
															"nodeType": "YulIf",
															"src": "3966:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:2"
															},
															"nodeType": "YulIf",
															"src": "4057:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:2",
														"type": ""
													}
												],
												"src": "3827:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:2",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:2",
														"type": ""
													}
												],
												"src": "4153:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:2",
														"type": ""
													}
												],
												"src": "4300:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:2",
														"type": ""
													}
												],
												"src": "4399:107:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:2"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:2",
														"type": ""
													}
												],
												"src": "4512:393:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:2",
														"type": ""
													}
												],
												"src": "4911:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:2",
														"type": ""
													}
												],
												"src": "4994:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:2",
														"type": ""
													}
												],
												"src": "5060:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:2",
														"type": ""
													}
												],
												"src": "5208:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:2",
														"type": ""
													}
												],
												"src": "5289:269:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:2",
														"type": ""
													}
												],
												"src": "5564:73:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:2",
														"type": ""
													}
												],
												"src": "5643:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:2",
																"statements": []
															},
															"src": "5898:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:2",
														"type": ""
													}
												],
												"src": "5838:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:2",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:2"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:2"
															},
															"nodeType": "YulIf",
															"src": "6120:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:2",
														"type": ""
													}
												],
												"src": "6030:543:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:2",
														"type": ""
													}
												],
												"src": "6579:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:2"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:2",
														"type": ""
													}
												],
												"src": "6702:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:2"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:2",
														"type": ""
													}
												],
												"src": "6876:295:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:2"
															},
															"nodeType": "YulIf",
															"src": "7381:56:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:2",
																					"statements": []
																				},
																				"src": "7867:208:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:2"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:2"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:2",
														"type": ""
													}
												],
												"src": "7176:1395:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D15 CODESIZE SUB DUP1 PUSH3 0x1D15 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x20C JUMP JUMPDEST DUP2 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4DC JUMP JUMPDEST POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4DC JUMP JUMPDEST POP PUSH8 0x4563918244F40000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE2 DUP3 PUSH3 0x97 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x104 JUMPI PUSH3 0x103 PUSH3 0xA8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x119 PUSH3 0x79 JUMP JUMPDEST SWAP1 POP PUSH3 0x127 DUP3 DUP3 PUSH3 0xD7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x14A JUMPI PUSH3 0x149 PUSH3 0xA8 JUMP JUMPDEST JUMPDEST PUSH3 0x155 DUP3 PUSH3 0x97 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x182 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x165 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A5 PUSH3 0x19F DUP5 PUSH3 0x12C JUMP JUMPDEST PUSH3 0x10D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1C4 JUMPI PUSH3 0x1C3 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x1D1 DUP5 DUP3 DUP6 PUSH3 0x162 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F1 JUMPI PUSH3 0x1F0 PUSH3 0x8D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x203 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x18E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x226 JUMPI PUSH3 0x225 PUSH3 0x83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x247 JUMPI PUSH3 0x246 PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH3 0x255 DUP6 DUP3 DUP7 ADD PUSH3 0x1D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH3 0x278 PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH3 0x287 DUP6 DUP3 DUP7 ADD PUSH3 0x1D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2FA JUMPI PUSH3 0x2F9 PUSH3 0x29C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x364 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x325 JUMP JUMPDEST PUSH3 0x370 DUP7 DUP4 PUSH3 0x325 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BD PUSH3 0x3B7 PUSH3 0x3B1 DUP5 PUSH3 0x388 JUMP JUMPDEST PUSH3 0x392 JUMP JUMPDEST PUSH3 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3D9 DUP4 PUSH3 0x39C JUMP JUMPDEST PUSH3 0x3F1 PUSH3 0x3E8 DUP3 PUSH3 0x3C4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x332 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x408 PUSH3 0x3F9 JUMP JUMPDEST PUSH3 0x415 DUP2 DUP5 DUP5 PUSH3 0x3CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x43D JUMPI PUSH3 0x431 PUSH1 0x0 DUP3 PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x41B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x48C JUMPI PUSH3 0x456 DUP2 PUSH3 0x300 JUMP JUMPDEST PUSH3 0x461 DUP5 PUSH3 0x315 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x471 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x489 PUSH3 0x480 DUP6 PUSH3 0x315 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x41A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x491 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CC DUP4 DUP4 PUSH3 0x49E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4E7 DUP3 PUSH3 0x291 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x503 JUMPI PUSH3 0x502 PUSH3 0xA8 JUMP JUMPDEST JUMPDEST PUSH3 0x50F DUP3 SLOAD PUSH3 0x2CB JUMP JUMPDEST PUSH3 0x51C DUP3 DUP3 DUP6 PUSH3 0x441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x554 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x53F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x54B DUP6 DUP3 PUSH3 0x4BE JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x564 DUP7 PUSH3 0x300 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x58E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x567 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5AE JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5AA PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x49E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1742 DUP1 PUSH3 0x5D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x257 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E4 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP6 DUP3 DUP6 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x429 DUP6 DUP6 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x449 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x46A DUP2 DUP6 DUP6 PUSH2 0x45B DUP6 DUP10 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x3 SLOAD PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C2 DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 DUP3 DUP5 PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x53D SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x569 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x599 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CB PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D9 DUP3 DUP7 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x64F DUP2 DUP6 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0xE56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71F PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72C NUMBER PUSH2 0x475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x768 PUSH1 0x2 PUSH2 0x75A DUP7 PUSH2 0x74C DUP7 DUP9 PUSH2 0xE6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x79B PUSH1 0x2 SLOAD PUSH2 0x78D PUSH2 0x77E DUP11 PUSH2 0x4E6 JUMP JUMPDEST DUP6 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x801 DUP2 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x83F PUSH1 0x4 SLOAD PUSH2 0x831 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0x858 DUP4 DUP5 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD5 DUP5 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB4F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4E DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x900 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2A SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3E DUP4 DUP4 DUP4 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xDCE DUP5 DUP5 DUP5 PUSH2 0xE87 JUMP JUMPDEST NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xEF8 DUP2 DUP6 PUSH2 0xE97 JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF36 DUP2 DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6E DUP3 PUSH2 0xF43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF63 JUMP JUMPDEST DUP2 EQ PUSH2 0xF89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9B DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD1 DUP2 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFC DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100D DUP6 DUP3 DUP7 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1047 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1071 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1090 JUMPI PUSH2 0x108F PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109E DUP7 DUP3 DUP8 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10AF DUP7 DUP3 DUP8 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10C0 DUP7 DUP3 DUP8 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP5 DUP3 DUP6 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1152 DUP5 DUP3 DUP6 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1191 DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11F5 JUMPI PUSH2 0x11F4 PUSH2 0x119B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1235 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BA PUSH1 0x25 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C5 DUP3 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E9 DUP2 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134C PUSH1 0x24 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1357 DUP3 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DE PUSH1 0x22 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E9 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140D DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144A PUSH1 0x1D DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP3 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1479 DUP2 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH1 0x25 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP3 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156E PUSH1 0x23 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1579 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 PUSH1 0x26 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x160B DUP3 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162F DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x165A DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16B2 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BD DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16CD JUMPI PUSH2 0x16CC PUSH2 0x1678 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xAC 0xF9 0xAB SWAP13 0x29 SWAP5 GT PUSH22 0xD7DA79F70F410BF393F83E42613D5C81EFAA56E8357D CALLER PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "5788:12884:1:-:0;;;6641:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6715:5;6707;:13;;;;;;:::i;:::-;;6740:7;6730;:17;;;;;;:::i;:::-;;6774:4;6757:14;:21;;;;6808:12;6788:17;:32;;;;6641:186;;5788:12884;;7:75:2;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;5788:12884:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineStatus_569": {
									"entryPoint": 1626,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_1187": {
									"entryPoint": 3719,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1122": {
									"entryPoint": 2304,
									"id": 1122,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1176": {
									"entryPoint": 3714,
									"id": 1176,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_323": {
									"entryPoint": 2296,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1165": {
									"entryPoint": 2761,
									"id": 1165,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_949": {
									"entryPoint": 2901,
									"id": 949,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 3692,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_735": {
									"entryPoint": 2161,
									"id": 735,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_760": {
									"entryPoint": 985,
									"id": 760,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_692": {
									"entryPoint": 1254,
									"id": 692,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockStatus_608": {
									"entryPoint": 1141,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_668": {
									"entryPoint": 1077,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_863": {
									"entryPoint": 1472,
									"id": 863,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@difficult_638": {
									"entryPoint": 2061,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 3648,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_822": {
									"entryPoint": 1086,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 3626,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_648": {
									"entryPoint": 839,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 3670,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_658": {
									"entryPoint": 1326,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_678": {
									"entryPoint": 1020,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_793": {
									"entryPoint": 1030,
									"id": 793,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_717": {
									"entryPoint": 1591,
									"id": 717,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15027:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:2",
														"type": ""
													}
												],
												"src": "112:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:2",
																"statements": []
															},
															"src": "378:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:2",
														"type": ""
													}
												],
												"src": "287:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:2",
														"type": ""
													}
												],
												"src": "539:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:2",
														"type": ""
													}
												],
												"src": "647:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:2",
														"type": ""
													}
												],
												"src": "1030:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:2",
														"type": ""
													}
												],
												"src": "1349:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:2",
														"type": ""
													}
												],
												"src": "1676:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:2",
														"type": ""
													}
												],
												"src": "1808:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:2"
															},
															"nodeType": "YulIf",
															"src": "1963:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:2",
														"type": ""
													}
												],
												"src": "1910:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:2",
														"type": ""
													}
												],
												"src": "2038:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:2",
														"type": ""
													}
												],
												"src": "2183:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:2"
															},
															"nodeType": "YulIf",
															"src": "2319:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:2",
														"type": ""
													}
												],
												"src": "2266:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:2",
														"type": ""
													}
												],
												"src": "2394:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:2"
															},
															"nodeType": "YulIf",
															"src": "2632:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:2",
														"type": ""
													}
												],
												"src": "2539:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:2",
														"type": ""
													}
												],
												"src": "3019:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:2",
														"type": ""
													}
												],
												"src": "3115:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:2",
														"type": ""
													}
												],
												"src": "3230:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:2",
														"type": ""
													}
												],
												"src": "3446:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:2",
														"type": ""
													}
												],
												"src": "3570:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:2"
															},
															"nodeType": "YulIf",
															"src": "3908:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:2",
														"type": ""
													}
												],
												"src": "3798:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:2",
														"type": ""
													}
												],
												"src": "4423:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:2",
														"type": ""
													}
												],
												"src": "4515:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:2",
														"type": ""
													}
												],
												"src": "4633:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:2"
															},
															"nodeType": "YulIf",
															"src": "4929:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:2",
														"type": ""
													}
												],
												"src": "4853:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:2"
															},
															"nodeType": "YulIf",
															"src": "5264:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:2",
														"type": ""
													}
												],
												"src": "5188:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:2"
															},
															"nodeType": "YulIf",
															"src": "5616:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5745:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5789:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5872:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5917:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5579:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5591:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5599:6:2",
														"type": ""
													}
												],
												"src": "5523:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6003:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6240:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6250:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6281:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6311:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6285:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6358:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6372:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6386:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6394:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6382:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6382:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6338:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:26:2"
															},
															"nodeType": "YulIf",
															"src": "6328:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6461:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6475:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6475:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6425:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6445:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6422:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:38:2"
															},
															"nodeType": "YulIf",
															"src": "6419:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6224:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6233:6:2",
														"type": ""
													}
												],
												"src": "6189:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6681:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6515:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6745:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6755:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6778:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6760:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6834:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6837:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6863:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6865:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6865:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6865:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6855:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6858:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6852:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:10:2"
															},
															"nodeType": "YulIf",
															"src": "6849:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6732:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6735:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6741:3:2",
														"type": ""
													}
												],
												"src": "6701:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7004:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7026:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7022:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7022:14:2"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7038:34:2",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:15:2"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7107:7:2",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6996:6:2",
														"type": ""
													}
												],
												"src": "6898:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7284:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7291:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7456:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7367:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7367:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7469:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7480:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7476:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7262:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7270:3:2",
														"type": ""
													}
												],
												"src": "7128:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7671:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7681:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7739:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7747:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7753:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7717:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7907:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7781:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7651:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7666:4:2",
														"type": ""
													}
												],
												"src": "7500:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8053:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8065:34:2",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8121:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8129:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8117:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8117:15:2"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8134:6:2",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8023:6:2",
														"type": ""
													}
												],
												"src": "7925:223:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8300:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8376:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8381:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8317:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8393:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8393:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8495:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8506:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8288:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8296:3:2",
														"type": ""
													}
												],
												"src": "8154:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8697:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8707:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8715:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8707:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8765:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8750:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8773:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8779:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8743:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8743:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8933:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8807:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8692:4:2",
														"type": ""
													}
												],
												"src": "8526:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9079:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9075:14:2"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9091:34:2",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9068:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9147:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9143:15:2"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9160:4:2",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9136:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9136:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9049:6:2",
														"type": ""
													}
												],
												"src": "8951:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9324:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9417:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9519:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9530:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9535:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9519:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9312:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9320:3:2",
														"type": ""
													}
												],
												"src": "9178:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9721:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9731:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9739:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9731:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9797:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9803:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9793:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9767:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9767:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9823:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9957:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9831:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9823:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9701:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9716:4:2",
														"type": ""
													}
												],
												"src": "9550:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10081:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10111:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10099:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10099:14:2"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10115:31:2",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10092:55:2"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10073:6:2",
														"type": ""
													}
												],
												"src": "9975:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10316:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10382:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10323:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10488:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10399:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10399:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10517:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10501:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10294:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10302:3:2",
														"type": ""
													}
												],
												"src": "10160:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10703:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10713:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10721:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10713:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10779:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10805:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10939:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10813:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10805:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10683:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10698:4:2",
														"type": ""
													}
												],
												"src": "10532:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:118:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11093:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11097:34:2",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11153:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11161:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:15:2"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11166:7:2",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:32:2"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11055:6:2",
														"type": ""
													}
												],
												"src": "10957:224:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11333:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11343:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11409:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11414:2:2",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11350:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11343:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11515:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11426:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11426:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11321:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11329:3:2",
														"type": ""
													}
												],
												"src": "11187:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11740:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11752:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11798:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11806:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11812:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11802:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11776:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11776:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11832:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11966:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11840:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11832:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11710:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11725:4:2",
														"type": ""
													}
												],
												"src": "11559:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12090:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12112:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12108:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12124:34:2",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12101:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12101:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12180:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12188:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:15:2"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12193:5:2",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12169:30:2"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12082:6:2",
														"type": ""
													}
												],
												"src": "11984:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12358:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12368:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12375:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12451:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12451:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12553:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12564:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12560:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12346:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12354:3:2",
														"type": ""
													}
												],
												"src": "12212:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12755:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12765:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12777:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12765:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12812:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12823:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12808:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12831:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12837:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12827:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12801:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12801:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12801:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12857:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12991:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12865:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12865:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12735:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12750:4:2",
														"type": ""
													}
												],
												"src": "12584:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13115:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13137:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:14:2"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13149:34:2",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13126:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13205:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13201:15:2"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13218:8:2",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13194:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13107:6:2",
														"type": ""
													}
												],
												"src": "13009:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13386:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13396:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13462:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13403:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13403:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13568:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13479:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13581:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13597:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13374:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13382:3:2",
														"type": ""
													}
												],
												"src": "13240:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13783:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13793:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13793:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13840:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13851:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13836:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13859:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13855:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13829:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13829:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13829:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13885:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14019:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13893:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13885:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13763:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13778:4:2",
														"type": ""
													}
												],
												"src": "13612:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14085:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14095:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14118:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14100:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14100:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14095:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14129:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14152:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14134:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14129:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14163:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14186:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14189:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14182:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14182:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14167:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14200:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14229:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14211:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14211:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14200:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14418:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14420:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14420:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14420:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14351:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14344:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14344:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14374:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14381:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14390:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14377:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14377:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14371:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14371:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14324:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14324:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14304:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:113:2"
															},
															"nodeType": "YulIf",
															"src": "14301:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14068:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14071:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14077:7:2",
														"type": ""
													}
												],
												"src": "14037:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14481:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14498:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14501:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14491:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14491:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14595:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14598:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14588:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14588:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14588:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14619:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14622:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14612:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14612:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14612:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14453:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14681:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14691:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14714:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14696:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14696:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14691:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14725:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14748:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14730:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14730:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14725:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14772:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14774:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14774:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14774:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14769:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14762:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14762:9:2"
															},
															"nodeType": "YulIf",
															"src": "14759:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14804:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14813:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14816:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14804:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14670:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14673:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14679:1:2",
														"type": ""
													}
												],
												"src": "14639:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14875:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14885:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14908:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14890:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14890:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14885:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14919:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14942:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14924:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14924:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14919:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14953:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14965:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14968:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14961:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14961:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14953:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14995:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14997:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14997:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14997:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14986:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14992:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14983:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:11:2"
															},
															"nodeType": "YulIf",
															"src": "14980:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14861:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14864:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14870:4:2",
														"type": ""
													}
												],
												"src": "14830:194:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb14610287578063b8ba6007146102b7578063d993226b146102e7578063dd62ed3e14610317576100ea565b806370a082311461020957806395d89b4114610239578063a457c2d714610257576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a95780634be3403c146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610347565b6040516101049190610f1c565b60405180910390f35b61012760048036038101906101229190610fd7565b6103d9565b6040516101349190611032565b60405180910390f35b6101456103fc565b604051610152919061105c565b60405180910390f35b61017560048036038101906101709190611077565b610406565b6040516101829190611032565b60405180910390f35b610193610435565b6040516101a091906110e6565b60405180910390f35b6101c360048036038101906101be9190610fd7565b61043e565b6040516101d09190611032565b60405180910390f35b6101f360048036038101906101ee9190611101565b610475565b604051610200919061105c565b60405180910390f35b610223600480360381019061021e919061112e565b6104e6565b604051610230919061105c565b60405180910390f35b61024161052e565b60405161024e9190610f1c565b60405180910390f35b610271600480360381019061026c9190610fd7565b6105c0565b60405161027e9190611032565b60405180910390f35b6102a1600480360381019061029c9190610fd7565b610637565b6040516102ae9190611032565b60405180910390f35b6102d160048036038101906102cc919061112e565b61065a565b6040516102de919061105c565b60405180910390f35b61030160048036038101906102fc9190611101565b61080d565b60405161030e919061105c565b60405180910390f35b610331600480360381019061032c919061115b565b610871565b60405161033e919061105c565b60405180910390f35b606060058054610356906111ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610382906111ca565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b5050505050905090565b6000806103e46108f8565b90506103f1818585610900565b600191505092915050565b6000600254905090565b6000806104116108f8565b905061041e858285610ac9565b610429858585610b55565b60019150509392505050565b60006012905090565b6000806104496108f8565b905061046a81858561045b8589610871565b610465919061122a565b610900565b600191505092915050565b60006004548210156104875760045491505b60006104b5760a70c3c40a64e6c51999090b65f67d9240000000000000600354610e2a90919063ffffffff16565b905060006104c28461080d565b905060006104d98284610e4090919063ffffffff16565b9050809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606006805461053d906111ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610569906111ca565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905090565b6000806105cb6108f8565b905060006105d98286610871565b90508381101561061e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610615906112d0565b60405180910390fd5b61062b8286868403610900565b60019250505092915050565b6000806106426108f8565b905061064f818585610b55565b600191505092915050565b6000806106c1600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205443610e5690919063ffffffff16565b9050600061071f600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002054610475565b9050600061072c43610475565b90506000610768600261075a8661074c8688610e6c90919063ffffffff16565b610e2a90919063ffffffff16565b610e4090919063ffffffff16565b9050600061079b60025461078d61077e8a6104e6565b85610e2a90919063ffffffff16565b610e4090919063ffffffff16565b905061080181600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003815260200190815260200160002054610e6c90919063ffffffff16565b95505050505050919050565b60008061083f600454610831670de0b6b3a764000086610e2a90919063ffffffff16565b610e4090919063ffffffff16565b9050610866816108588384610e2a90919063ffffffff16565b610e2a90919063ffffffff16565b905080915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611362565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906113f4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610abc919061105c565b60405180910390a3505050565b6000610ad58484610871565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b4f5781811015610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890611460565b60405180910390fd5b610b4e8484848403610900565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a90611584565b60405180910390fd5b610c3e838383610e82565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbb90611616565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d57919061122a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dbb919061105c565b60405180910390a3610dce848484610e87565b43600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000208190555050505050565b60008183610e389190611636565b905092915050565b60008183610e4e91906116a7565b905092915050565b60008183610e6491906116d8565b905092915050565b60008183610e7a919061122a565b905092915050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ec6578082015181840152602081019050610eab565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eee82610e8c565b610ef88185610e97565b9350610f08818560208601610ea8565b610f1181610ed2565b840191505092915050565b60006020820190508181036000830152610f368184610ee3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6e82610f43565b9050919050565b610f7e81610f63565b8114610f8957600080fd5b50565b600081359050610f9b81610f75565b92915050565b6000819050919050565b610fb481610fa1565b8114610fbf57600080fd5b50565b600081359050610fd181610fab565b92915050565b60008060408385031215610fee57610fed610f3e565b5b6000610ffc85828601610f8c565b925050602061100d85828601610fc2565b9150509250929050565b60008115159050919050565b61102c81611017565b82525050565b60006020820190506110476000830184611023565b92915050565b61105681610fa1565b82525050565b6000602082019050611071600083018461104d565b92915050565b6000806000606084860312156110905761108f610f3e565b5b600061109e86828701610f8c565b93505060206110af86828701610f8c565b92505060406110c086828701610fc2565b9150509250925092565b600060ff82169050919050565b6110e0816110ca565b82525050565b60006020820190506110fb60008301846110d7565b92915050565b60006020828403121561111757611116610f3e565b5b600061112584828501610fc2565b91505092915050565b60006020828403121561114457611143610f3e565b5b600061115284828501610f8c565b91505092915050565b6000806040838503121561117257611171610f3e565b5b600061118085828601610f8c565b925050602061119185828601610f8c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111e257607f821691505b6020821081036111f5576111f461119b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123582610fa1565b915061124083610fa1565b9250828201905080821115611258576112576111fb565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112ba602583610e97565b91506112c58261125e565b604082019050919050565b600060208201905081810360008301526112e9816112ad565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061134c602483610e97565b9150611357826112f0565b604082019050919050565b6000602082019050818103600083015261137b8161133f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113de602283610e97565b91506113e982611382565b604082019050919050565b6000602082019050818103600083015261140d816113d1565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061144a601d83610e97565b915061145582611414565b602082019050919050565b600060208201905081810360008301526114798161143d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006114dc602583610e97565b91506114e782611480565b604082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061156e602383610e97565b915061157982611512565b604082019050919050565b6000602082019050818103600083015261159d81611561565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611600602683610e97565b915061160b826115a4565b604082019050919050565b6000602082019050818103600083015261162f816115f3565b9050919050565b600061164182610fa1565b915061164c83610fa1565b925082820261165a81610fa1565b91508282048414831517611671576116706111fb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116b282610fa1565b91506116bd83610fa1565b9250826116cd576116cc611678565b5b828204905092915050565b60006116e382610fa1565b91506116ee83610fa1565b9250828203905081811115611706576117056111fb565b5b9291505056fea264697066735822122085acf9ab9c29941175d7da79f70f410bf393f83e42613d5c81efaa56e8357d3364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x257 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E4 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP6 DUP3 DUP6 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x429 DUP6 DUP6 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x449 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x46A DUP2 DUP6 DUP6 PUSH2 0x45B DUP6 DUP10 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x3 SLOAD PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C2 DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 DUP3 DUP5 PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x53D SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x569 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x599 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CB PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D9 DUP3 DUP7 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x64F DUP2 DUP6 DUP6 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0xE56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71F PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72C NUMBER PUSH2 0x475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x768 PUSH1 0x2 PUSH2 0x75A DUP7 PUSH2 0x74C DUP7 DUP9 PUSH2 0xE6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x79B PUSH1 0x2 SLOAD PUSH2 0x78D PUSH2 0x77E DUP11 PUSH2 0x4E6 JUMP JUMPDEST DUP6 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x801 DUP2 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x83F PUSH1 0x4 SLOAD PUSH2 0x831 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0x858 DUP4 DUP5 PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE2A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD5 DUP5 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB4F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4E DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x900 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2A SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3E DUP4 DUP4 DUP4 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBB SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xDCE DUP5 DUP5 DUP5 PUSH2 0xE87 JUMP JUMPDEST NUMBER PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xEF8 DUP2 DUP6 PUSH2 0xE97 JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xED2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF36 DUP2 DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6E DUP3 PUSH2 0xF43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0xF63 JUMP JUMPDEST DUP2 EQ PUSH2 0xF89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9B DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD1 DUP2 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFC DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100D DUP6 DUP3 DUP7 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x1017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1047 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0xFA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1071 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1090 JUMPI PUSH2 0x108F PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109E DUP7 DUP3 DUP8 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10AF DUP7 DUP3 DUP8 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10C0 DUP7 DUP3 DUP8 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP5 DUP3 DUP6 ADD PUSH2 0xFC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1152 DUP5 DUP3 DUP6 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1191 DUP6 DUP3 DUP7 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11F5 JUMPI PUSH2 0x11F4 PUSH2 0x119B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1235 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BA PUSH1 0x25 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C5 DUP3 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E9 DUP2 PUSH2 0x12AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134C PUSH1 0x24 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1357 DUP3 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DE PUSH1 0x22 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E9 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140D DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144A PUSH1 0x1D DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP3 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1479 DUP2 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH1 0x25 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP3 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156E PUSH1 0x23 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x1579 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 PUSH1 0x26 DUP4 PUSH2 0xE97 JUMP JUMPDEST SWAP2 POP PUSH2 0x160B DUP3 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162F DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x165A DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16B2 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BD DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16CD JUMPI PUSH2 0x16CC PUSH2 0x1678 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP3 PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP4 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xAC 0xF9 0xAB SWAP13 0x29 SWAP5 GT PUSH22 0xD7DA79F70F410BF393F83E42613D5C81EFAA56E8357D CALLER PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "5788:12884:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10438:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9249:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11197:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9098:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11878:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7427:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9413:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8372:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12599:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9734:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6835:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7829:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9981:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8161:98;8215:13;8247:5;8240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:98;:::o;10438:197::-;10521:4;10537:13;10553:12;:10;:12::i;:::-;10537:28;;10575:32;10584:5;10591:7;10600:6;10575:8;:32::i;:::-;10624:4;10617:11;;;10438:197;;;;:::o;9249:106::-;9310:7;9336:12;;9329:19;;9249:106;:::o;11197:286::-;11324:4;11340:15;11358:12;:10;:12::i;:::-;11340:30;;11380:38;11396:4;11402:7;11411:6;11380:15;:38::i;:::-;11428:27;11438:4;11444:2;11448:6;11428:9;:27::i;:::-;11472:4;11465:11;;;11197:286;;;;;:::o;9098:91::-;9156:5;9180:2;9173:9;;9098:91;:::o;11878:234::-;11966:4;11982:13;11998:12;:10;:12::i;:::-;11982:28;;12020:64;12029:5;12036:7;12073:10;12045:25;12055:5;12062:7;12045:9;:25::i;:::-;:38;;;;:::i;:::-;12020:8;:64::i;:::-;12101:4;12094:11;;;11878:234;;;;:::o;7427:395::-;7492:7;7528:17;;7513:12;:32;7510:93;;;7575:17;;7560:32;;7510:93;7612:19;7634:24;7653:4;7634:14;;:18;;:24;;;;:::i;:::-;7612:46;;7679:22;7704:23;7714:12;7704:9;:23::i;:::-;7679:48;;7742:13;7758:31;7774:14;7758:11;:15;;:31;;;;:::i;:::-;7742:47;;7806:5;7799:12;;;;;7427:395;;;:::o;9413:125::-;9487:7;9513:9;:18;9523:7;9513:18;;;;;;;;;;;;;;;;9506:25;;9413:125;;;:::o;8372:102::-;8428:13;8460:7;8453:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8372:102;:::o;12599:427::-;12692:4;12708:13;12724:12;:10;:12::i;:::-;12708:28;;12746:24;12773:25;12783:5;12790:7;12773:9;:25::i;:::-;12746:52;;12836:15;12816:16;:35;;12808:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;12927:60;12936:5;12943:7;12971:15;12952:16;:34;12927:8;:60::i;:::-;13015:4;13008:11;;;;12599:427;;;;:::o;9734:189::-;9813:4;9829:13;9845:12;:10;:12::i;:::-;9829:28;;9867;9877:5;9884:2;9888:6;9867:9;:28::i;:::-;9912:4;9905:11;;;9734:189;;;;:::o;6835:525::-;6889:7;6907:18;6928:36;6945:9;:15;6955:4;6945:15;;;;;;;;;;;;;;;:18;6961:1;6945:18;;;;;;;;;;;;6928:12;:16;;:36;;;;:::i;:::-;6907:57;;6974:13;6990:31;7002:9;:15;7012:4;7002:15;;;;;;;;;;;;;;;:18;7018:1;7002:18;;;;;;;;;;;;6990:11;:31::i;:::-;6974:47;;7031:11;7045:25;7057:12;7045:11;:25::i;:::-;7031:39;;7080:18;7101:37;7136:1;7101:30;7120:10;7101:14;7111:3;7101:5;:9;;:14;;;;:::i;:::-;:18;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;7080:58;;7228:15;7246:49;7282:12;;7246:31;7261:15;7271:4;7261:9;:15::i;:::-;7246:10;:14;;:31;;;;:::i;:::-;:35;;:49;;;;:::i;:::-;7228:67;;7312:34;7335:10;7312:9;:15;7322:4;7312:15;;;;;;;;;;;;;;;:18;7328:1;7312:18;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;7305:41;;;;;;;6835:525;;;:::o;7829:259::-;7888:7;7906:19;7926:45;7953:17;;7926:22;7943:4;7926:12;:16;;:22;;;;:::i;:::-;:26;;:45;;;;:::i;:::-;7906:65;;7996:54;8035:14;7996:34;8015:14;7996;:18;;:34;;;;:::i;:::-;:38;;:54;;;;:::i;:::-;7981:69;;8067:14;8060:21;;;7829:259;;;:::o;9981:149::-;10070:7;10096:11;:18;10108:5;10096:18;;;;;;;;;;;;;;;:27;10115:7;10096:27;;;;;;;;;;;;;;;;10089:34;;9981:149;;;;:::o;693:96::-;746:7;772:10;765:17;;693:96;:::o;16165:370::-;16313:1;16296:19;;:5;:19;;;16288:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16393:1;16374:21;;:7;:21;;;16366:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16475:6;16445:11;:18;16457:5;16445:18;;;;;;;;;;;;;;;:27;16464:7;16445:27;;;;;;;;;;;;;;;:36;;;;16512:7;16496:32;;16505:5;16496:32;;;16521:6;16496:32;;;;;;:::i;:::-;;;;;;;;16165:370;;;:::o;16816:441::-;16946:24;16973:25;16983:5;16990:7;16973:9;:25::i;:::-;16946:52;;17032:17;17012:16;:37;17008:243;;17093:6;17073:16;:26;;17065:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;17175:51;17184:5;17191:7;17219:6;17200:16;:25;17175:8;:51::i;:::-;17008:243;16936:321;16816:441;;;:::o;13480:701::-;13622:1;13606:18;;:4;:18;;;13598:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;13698:1;13684:16;;:2;:16;;;13676:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;13751:38;13772:4;13778:2;13782:6;13751:20;:38::i;:::-;13800:19;13822:9;:15;13832:4;13822:15;;;;;;;;;;;;;;;;13800:37;;13870:6;13855:11;:21;;13847:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;13985:6;13971:11;:20;13953:9;:15;13963:4;13953:15;;;;;;;;;;;;;;;:38;;;;14028:6;14011:9;:13;14021:2;14011:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;14065:2;14050:26;;14059:4;14050:26;;;14069:6;14050:26;;;;;;:::i;:::-;;;;;;;;14087:37;14107:4;14113:2;14117:6;14087:19;:37::i;:::-;14162:12;14143:9;:15;14153:4;14143:15;;;;;;;;;;;;;;;:18;14159:1;14143:18;;;;;;;;;;;:31;;;;13588:593;13480:701;;;:::o;3465:96:0:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;17841:121:1:-;;;;:::o;18550:120::-;;;;:::o;7:99:2:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:180::-;6563:77;6560:1;6553:88;6660:4;6657:1;6650:15;6684:4;6681:1;6674:15;6701:191;6741:3;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6837:1;6834;6830:9;6823:16;;6858:3;6855:1;6852:10;6849:36;;;6865:18;;:::i;:::-;6849:36;6701:191;;;;:::o;6898:224::-;7038:34;7034:1;7026:6;7022:14;7015:58;7107:7;7102:2;7094:6;7090:15;7083:32;6898:224;:::o;7128:366::-;7270:3;7291:67;7355:2;7350:3;7291:67;:::i;:::-;7284:74;;7367:93;7456:3;7367:93;:::i;:::-;7485:2;7480:3;7476:12;7469:19;;7128:366;;;:::o;7500:419::-;7666:4;7704:2;7693:9;7689:18;7681:26;;7753:9;7747:4;7743:20;7739:1;7728:9;7724:17;7717:47;7781:131;7907:4;7781:131;:::i;:::-;7773:139;;7500:419;;;:::o;7925:223::-;8065:34;8061:1;8053:6;8049:14;8042:58;8134:6;8129:2;8121:6;8117:15;8110:31;7925:223;:::o;8154:366::-;8296:3;8317:67;8381:2;8376:3;8317:67;:::i;:::-;8310:74;;8393:93;8482:3;8393:93;:::i;:::-;8511:2;8506:3;8502:12;8495:19;;8154:366;;;:::o;8526:419::-;8692:4;8730:2;8719:9;8715:18;8707:26;;8779:9;8773:4;8769:20;8765:1;8754:9;8750:17;8743:47;8807:131;8933:4;8807:131;:::i;:::-;8799:139;;8526:419;;;:::o;8951:221::-;9091:34;9087:1;9079:6;9075:14;9068:58;9160:4;9155:2;9147:6;9143:15;9136:29;8951:221;:::o;9178:366::-;9320:3;9341:67;9405:2;9400:3;9341:67;:::i;:::-;9334:74;;9417:93;9506:3;9417:93;:::i;:::-;9535:2;9530:3;9526:12;9519:19;;9178:366;;;:::o;9550:419::-;9716:4;9754:2;9743:9;9739:18;9731:26;;9803:9;9797:4;9793:20;9789:1;9778:9;9774:17;9767:47;9831:131;9957:4;9831:131;:::i;:::-;9823:139;;9550:419;;;:::o;9975:179::-;10115:31;10111:1;10103:6;10099:14;10092:55;9975:179;:::o;10160:366::-;10302:3;10323:67;10387:2;10382:3;10323:67;:::i;:::-;10316:74;;10399:93;10488:3;10399:93;:::i;:::-;10517:2;10512:3;10508:12;10501:19;;10160:366;;;:::o;10532:419::-;10698:4;10736:2;10725:9;10721:18;10713:26;;10785:9;10779:4;10775:20;10771:1;10760:9;10756:17;10749:47;10813:131;10939:4;10813:131;:::i;:::-;10805:139;;10532:419;;;:::o;10957:224::-;11097:34;11093:1;11085:6;11081:14;11074:58;11166:7;11161:2;11153:6;11149:15;11142:32;10957:224;:::o;11187:366::-;11329:3;11350:67;11414:2;11409:3;11350:67;:::i;:::-;11343:74;;11426:93;11515:3;11426:93;:::i;:::-;11544:2;11539:3;11535:12;11528:19;;11187:366;;;:::o;11559:419::-;11725:4;11763:2;11752:9;11748:18;11740:26;;11812:9;11806:4;11802:20;11798:1;11787:9;11783:17;11776:47;11840:131;11966:4;11840:131;:::i;:::-;11832:139;;11559:419;;;:::o;11984:222::-;12124:34;12120:1;12112:6;12108:14;12101:58;12193:5;12188:2;12180:6;12176:15;12169:30;11984:222;:::o;12212:366::-;12354:3;12375:67;12439:2;12434:3;12375:67;:::i;:::-;12368:74;;12451:93;12540:3;12451:93;:::i;:::-;12569:2;12564:3;12560:12;12553:19;;12212:366;;;:::o;12584:419::-;12750:4;12788:2;12777:9;12773:18;12765:26;;12837:9;12831:4;12827:20;12823:1;12812:9;12808:17;12801:47;12865:131;12991:4;12865:131;:::i;:::-;12857:139;;12584:419;;;:::o;13009:225::-;13149:34;13145:1;13137:6;13133:14;13126:58;13218:8;13213:2;13205:6;13201:15;13194:33;13009:225;:::o;13240:366::-;13382:3;13403:67;13467:2;13462:3;13403:67;:::i;:::-;13396:74;;13479:93;13568:3;13479:93;:::i;:::-;13597:2;13592:3;13588:12;13581:19;;13240:366;;;:::o;13612:419::-;13778:4;13816:2;13805:9;13801:18;13793:26;;13865:9;13859:4;13855:20;13851:1;13840:9;13836:17;13829:47;13893:131;14019:4;13893:131;:::i;:::-;13885:139;;13612:419;;;:::o;14037:410::-;14077:7;14100:20;14118:1;14100:20;:::i;:::-;14095:25;;14134:20;14152:1;14134:20;:::i;:::-;14129:25;;14189:1;14186;14182:9;14211:30;14229:11;14211:30;:::i;:::-;14200:41;;14390:1;14381:7;14377:15;14374:1;14371:22;14351:1;14344:9;14324:83;14301:139;;14420:18;;:::i;:::-;14301:139;14085:362;14037:410;;;;:::o;14453:180::-;14501:77;14498:1;14491:88;14598:4;14595:1;14588:15;14622:4;14619:1;14612:15;14639:185;14679:1;14696:20;14714:1;14696:20;:::i;:::-;14691:25;;14730:20;14748:1;14730:20;:::i;:::-;14725:25;;14769:1;14759:35;;14774:18;;:::i;:::-;14759:35;14816:1;14813;14809:9;14804:14;;14639:185;;;;:::o;14830:194::-;14870:4;14890:20;14908:1;14890:20;:::i;:::-;14885:25;;14924:20;14942:1;14924:20;:::i;:::-;14919:25;;14968:1;14965;14961:9;14953:17;;14992:1;14986:4;14983:11;14980:37;;;14997:18;;:::i;:::-;14980:37;14830:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1190800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MineStatus(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"blockStatus(uint256)": "infinite",
								"decimals()": "388",
								"decreaseAllowance(address,uint256)": "infinite",
								"difficult(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6641,
									"end": 6827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6715,
									"end": 6720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6712,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6707,
									"end": 6720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6707,
									"end": 6720,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6740,
									"end": 6747,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6737,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6730,
									"end": 6747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6747,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6774,
									"end": 6778,
									"name": "PUSH",
									"source": 1,
									"value": "4563918244F40000"
								},
								{
									"begin": 6757,
									"end": 6771,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6778,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6808,
									"end": 6820,
									"name": "NUMBER",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6805,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6788,
									"end": 6820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6641,
									"end": 6827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 2,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 2,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 2,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 2,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 2,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 2,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 2,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 2,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 2,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5788,
									"end": 18672,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085acf9ab9c29941175d7da79f70f410bf393f83e42613d5c81efaa56e8357d3364736f6c63430008110033",
									".code": [
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "B8BA6007"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "D993226B"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "4BE3403C"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 18672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8247,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8240,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8240,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10553,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10553,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10553,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10584,
											"end": 10589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10575,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10575,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9310,
											"end": 9317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9336,
											"end": 9348,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9336,
											"end": 9348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11358,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11358,
											"end": 11370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11396,
											"end": 11400,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11380,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11380,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11448,
											"end": 11454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11428,
											"end": 11455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11476,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 11995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11998,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11998,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11998,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 12029,
											"end": 12034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12055,
											"end": 12060,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12069,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12045,
											"end": 12070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 12045,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 12045,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12020,
											"end": 12084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 12020,
											"end": 12084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12105,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7510,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 1,
											"value": "A70C3C40A64E6C51999090B65F67D9240000000000000"
										},
										{
											"begin": 7634,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7634,
											"end": 7648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7634,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7704,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7704,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7774,
											"end": 7788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7758,
											"end": 7773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8460,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8453,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8453,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12708,
											"end": 12721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12724,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 12724,
											"end": 12736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12724,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 12783,
											"end": 12788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12773,
											"end": 12798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 12773,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12851,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12851,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 12808,
											"end": 12893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12808,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 12936,
											"end": 12941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12950,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12927,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 12927,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13015,
											"end": 13019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 13026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 9845,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9845,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9877,
											"end": 9882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9886,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9867,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9867,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9916,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6940,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6928,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6990,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6990,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7045,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7045,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7106,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7101,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7101,
											"end": 7119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7261,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7246,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7246,
											"end": 7281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7246,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7335,
											"end": 7345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7321,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7326,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7312,
											"end": 7334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7312,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7953,
											"end": 7970,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7953,
											"end": 7970,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7926,
											"end": 7938,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7926,
											"end": 7942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7926,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7926,
											"end": 7952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7926,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8035,
											"end": 8049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8015,
											"end": 8029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8010,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7996,
											"end": 8034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7996,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 8088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10089,
											"end": 10123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10089,
											"end": 10123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 693,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 782,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 765,
											"end": 782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16296,
											"end": 16315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 16288,
											"end": 16356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 16288,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16393,
											"end": 16394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16395,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 16366,
											"end": 16434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 16366,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16475,
											"end": 16481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16456,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16457,
											"end": 16462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16445,
											"end": 16463,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16464,
											"end": 16471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16445,
											"end": 16472,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16445,
											"end": 16481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16512,
											"end": 16519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16521,
											"end": 16527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16496,
											"end": 16528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16496,
											"end": 16528,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 16983,
											"end": 16988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 16997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 16973,
											"end": 16998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 16973,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16946,
											"end": 16998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17032,
											"end": 17049,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17049,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17093,
											"end": 17099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17099,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 17065,
											"end": 17133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 17065,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 17184,
											"end": 17189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17225,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 17175,
											"end": 17226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 17175,
											"end": 17226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 17008,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16816,
											"end": 17257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 13598,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13598,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13698,
											"end": 13699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13676,
											"end": 13740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13676,
											"end": 13740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 13772,
											"end": 13776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 13780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 13751,
											"end": 13789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 13751,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13822,
											"end": 13837,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 13876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13876,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13847,
											"end": 13919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13847,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 13991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 13991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13953,
											"end": 13968,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14021,
											"end": 14023,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 14011,
											"end": 14034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14065,
											"end": 14067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14059,
											"end": 14063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14069,
											"end": 14075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 14050,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14107,
											"end": 14111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14113,
											"end": 14115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14117,
											"end": 14123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14087,
											"end": 14124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14087,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14174,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14152,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14158,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14159,
											"end": 14160,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 14181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18550,
											"end": 18670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6051,
											"end": 6128,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6422,
											"end": 6460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6475,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6563,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6657,
											"end": 6658,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6760,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6862,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6865,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7072,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7015,
											"end": 7073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7107,
											"end": 7114,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7291,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7367,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 7763,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7724,
											"end": 7741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7781,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8065,
											"end": 8099,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8100,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "PUSH",
											"source": 2,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8121,
											"end": 8127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8110,
											"end": 8141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7925,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8296,
											"end": 8299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8376,
											"end": 8379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 8317,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 8393,
											"end": 8486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 8767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8743,
											"end": 8790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8807,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9091,
											"end": 9125,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 2,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9155,
											"end": 9157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9153,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9136,
											"end": 9165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9341,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9417,
											"end": 9510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9814,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9957,
											"end": 9961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9831,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10115,
											"end": 10146,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 10111,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10099,
											"end": 10113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10387,
											"end": 10389,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10323,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 10399,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10698,
											"end": 10702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10721,
											"end": 10739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10760,
											"end": 10769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10796,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 10813,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10532,
											"end": 10951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11097,
											"end": 11131,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11081,
											"end": 11095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11074,
											"end": 11132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11173,
											"name": "PUSH",
											"source": 2,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11149,
											"end": 11164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 11409,
											"end": 11412,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11350,
											"end": 11417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 11515,
											"end": 11518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11426,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11535,
											"end": 11547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11752,
											"end": 11761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11812,
											"end": 11821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11806,
											"end": 11810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11783,
											"end": 11800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11776,
											"end": 11823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 11840,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11559,
											"end": 11978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12158,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12101,
											"end": 12159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12193,
											"end": 12198,
											"name": "PUSH",
											"source": 2,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12188,
											"end": 12190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12176,
											"end": 12191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12169,
											"end": 12199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11984,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12375,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 12451,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12564,
											"end": 12567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12560,
											"end": 12572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12750,
											"end": 12754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12831,
											"end": 12835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12827,
											"end": 12847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12808,
											"end": 12825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12801,
											"end": 12848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 12865,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12584,
											"end": 13003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13133,
											"end": 13147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13184,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13218,
											"end": 13226,
											"name": "PUSH",
											"source": 2,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13205,
											"end": 13211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13201,
											"end": 13216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13194,
											"end": 13227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13009,
											"end": 13234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13403,
											"end": 13470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 13568,
											"end": 13571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 13479,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13597,
											"end": 13599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13588,
											"end": 13600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13859,
											"end": 13863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13855,
											"end": 13875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13851,
											"end": 13852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13836,
											"end": 13853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13829,
											"end": 13876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14019,
											"end": 14023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13893,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13612,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14118,
											"end": 14119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14100,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14134,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14152,
											"end": 14153,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14134,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14134,
											"end": 14154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14134,
											"end": 14154,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14134,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14129,
											"end": 14154,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14129,
											"end": 14154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14189,
											"end": 14190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14182,
											"end": 14191,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14229,
											"end": 14240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14211,
											"end": 14241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14241,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 14211,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14200,
											"end": 14241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14200,
											"end": 14241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14390,
											"end": 14391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14381,
											"end": 14388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14392,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14374,
											"end": 14375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14371,
											"end": 14393,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14352,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14344,
											"end": 14353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14324,
											"end": 14407,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14301,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14301,
											"end": 14440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 14420,
											"end": 14438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14420,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14301,
											"end": 14440,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14301,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14037,
											"end": 14447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14453,
											"end": 14633,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14453,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14501,
											"end": 14578,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14498,
											"end": 14499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14491,
											"end": 14579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14598,
											"end": 14602,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 14595,
											"end": 14596,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14588,
											"end": 14603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14622,
											"end": 14626,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14619,
											"end": 14620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14627,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14679,
											"end": 14680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14714,
											"end": 14715,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14696,
											"end": 14716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14691,
											"end": 14716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14691,
											"end": 14716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14730,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14748,
											"end": 14749,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14730,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14730,
											"end": 14750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14730,
											"end": 14750,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14730,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14725,
											"end": 14750,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14725,
											"end": 14750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14769,
											"end": 14770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14759,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14759,
											"end": 14794,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14774,
											"end": 14792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14759,
											"end": 14794,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14759,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14816,
											"end": 14817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14813,
											"end": 14814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14809,
											"end": 14818,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14804,
											"end": 14818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14804,
											"end": 14818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14870,
											"end": 14874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14890,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 14908,
											"end": 14909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14890,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14890,
											"end": 14910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14890,
											"end": 14910,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 14890,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14885,
											"end": 14910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14885,
											"end": 14910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 14942,
											"end": 14943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14924,
											"end": 14944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 14944,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14919,
											"end": 14944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14968,
											"end": 14969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14965,
											"end": 14966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14961,
											"end": 14970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14953,
											"end": 14970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14953,
											"end": 14970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 14993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14986,
											"end": 14990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14983,
											"end": 14994,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14980,
											"end": 15017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14980,
											"end": 15017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 14980,
											"end": 15017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 14997,
											"end": 15015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14980,
											"end": 15017,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 14980,
											"end": 15017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 15024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC20/MinePower.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"difficult(uint256)": "d993226b",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_mineInfo\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"[user][1] = last_block      [user][3] = accumulation_DCF    \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 449,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 455,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 457,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 459,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_TokenperBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 461,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 463,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 465,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 472,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "[user][1] = last_block      [user][3] = accumulation_DCF    "
							}
						},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"difficult(uint256)": "d993226b",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 449,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 455,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 457,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 459,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_TokenperBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 461,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 463,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 465,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 472,
								"contract": "minerpunk/ERC20/MinePower.sol:ERC20Burnable",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC20/MinePower.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC20/MinePower.sol\":{\"keccak256\":\"0x1ad742d9ea8408734d0b51b78106b0d676161ce6740913de3c2bcc603981b047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6952c7f3af2aed31bea29f6d89e71a74eb5e7b9568e2cdf024d1ef38d90afc\",\"dweb:/ipfs/QmUHsVh1hP6V8iGRy7FxjaRH97urC9bahi4eDU6woRtYog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"minerpunk/ERC20/MinePower.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC20/MinePower.sol",
					"exportedSymbols": {
						"Context": [
							333
						],
						"DCOFF": [
							1254
						],
						"ERC20": [
							1188
						],
						"ERC20Burnable": [
							1229
						],
						"IERC20": [
							410
						],
						"IERC20Metadata": [
							433
						],
						"SafeMath": [
							311
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "139:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 314,
								"nodeType": "StructuredDocumentation",
								"src": "164:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "Context",
							"nameLocation": "679:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "755:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "776:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "772:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 318,
												"id": 321,
												"nodeType": "Return",
												"src": "765:17:1"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "702:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "746:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:9:1"
									},
									"scope": 333,
									"src": "693:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "862:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 328,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "879:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "883:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "879:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 327,
												"id": 330,
												"nodeType": "Return",
												"src": "872:15:1"
											}
										]
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "804:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "846:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "846:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:16:1"
									},
									"scope": 333,
									"src": "795:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1255,
							"src": "661:235:1",
							"usedErrors": []
						},
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1030:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "1055:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "IERC20",
							"nameLocation": "1136:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1149:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 344,
									"name": "Transfer",
									"nameLocation": "1318:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1327:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1365:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1349:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1377:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1369:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:57:1"
									},
									"src": "1312:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "1390:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 353,
									"name": "Approval",
									"nameLocation": "1549:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1558:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1597:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1581:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1614:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1606:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:63:1"
									},
									"src": "1543:78:1"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1627:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1707:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:2:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:9:1"
									},
									"scope": 410,
									"src": "1698:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1759:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1845:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1863:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1855:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:17:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1895:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1894:9:1"
									},
									"scope": 410,
									"src": "1836:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1910:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2126:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2143:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2135:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2155:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2147:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:28:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2181:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2181:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:6:1"
									},
									"scope": 410,
									"src": "2117:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "2193:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2471:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2489:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2481:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2504:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2496:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:32:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2536:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:9:1"
									},
									"scope": 410,
									"src": "2462:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2551:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3207:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3223:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3215:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3240:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3232:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:33:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3265:6:1"
									},
									"scope": 410,
									"src": "3198:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3278:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3579:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3609:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3601:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3631:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3623:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3651:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3643:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3591:72:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3682:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3682:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:6:1"
									},
									"scope": 410,
									"src": "3570:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1255,
							"src": "1126:2564:1",
							"usedErrors": []
						},
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3847:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "IERC20",
										"nameLocations": [
											"4018:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "4018:6:1"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "4018:6:1"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "3873:116:1",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 433,
							"linearizedBaseContracts": [
								433,
								410
							],
							"name": "IERC20Metadata",
							"nameLocation": "4000:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "4031:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4099:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4103:2:1"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4129:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4129:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:15:1"
									},
									"scope": 433,
									"src": "4090:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4150:56:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4220:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4226:2:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4252:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:15:1"
									},
									"scope": 433,
									"src": "4211:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "4273:65:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4352:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:2:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4386:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 429,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4386:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:7:1"
									},
									"scope": 433,
									"src": "4343:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1255,
							"src": "3990:405:1",
							"usedErrors": []
						},
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4527:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 312,
							"src": "4552:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "Context",
										"nameLocations": [
											"5806:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "5806:7:1"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "5806:7:1"
								},
								{
									"baseName": {
										"id": 439,
										"name": "IERC20",
										"nameLocations": [
											"5815:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "5815:6:1"
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "5815:6:1"
								},
								{
									"baseName": {
										"id": 441,
										"name": "IERC20Metadata",
										"nameLocations": [
											"5823:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 433,
										"src": "5823:14:1"
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "5823:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "4615:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								433,
								410,
								333
							],
							"name": "ERC20",
							"nameLocation": "5797:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 445,
									"libraryName": {
										"id": 443,
										"name": "SafeMath",
										"nameLocations": [
											"5850:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "5850:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "5844:24:1",
									"typeName": {
										"id": 444,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "5863:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5909:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "5873:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 448,
										"keyType": {
											"id": 446,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5881:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5873:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 447,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5892:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 455,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5981:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "5925:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 454,
										"keyType": {
											"id": 450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5933:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5925:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 453,
											"keyType": {
												"id": 451,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5952:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5944:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5963:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6015:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "5999:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5999:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 459,
									"mutability": "mutable",
									"name": "_TokenperBlock",
									"nameLocation": "6051:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "6034:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6034:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 461,
									"mutability": "mutable",
									"name": "_startBlockNumber",
									"nameLocation": "6089:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "6072:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 460,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6072:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6128:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "6113:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 462,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6113:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 465,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6154:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "6139:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 464,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6139:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "6168:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 472,
									"mutability": "mutable",
									"name": "_mineInfo",
									"nameLocation": "6534:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "6479:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 471,
										"keyType": {
											"id": 467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6487:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6479:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 470,
											"keyType": {
												"id": 468,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6506:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6498:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6517:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "6697:130:1",
										"statements": [
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "6707:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6715:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6707:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "6707:13:1"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "6730:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "6740:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6730:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "6730:17:1"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_TokenperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35653138",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6774:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"value": "5e18"
													},
													"src": "6757:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "6757:21:1"
											},
											{
												"expression": {
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 492,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6788:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 493,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6808:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6814:6:1",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6808:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6788:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "6788:32:1"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "6550:83:1",
										"text": "[user][1] = last_block     \n[user][3] = accumulation_DCF    "
									},
									"id": 498,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6667:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "6653:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6688:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "6674:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6674:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:44:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6697:0:1"
									},
									"scope": 1188,
									"src": "6641:186:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "6897:463:1",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "6915:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "6907:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 510,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "6945:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 512,
																"indexExpression": {
																	"id": 511,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "6955:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6945:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 514,
															"indexExpression": {
																"hexValue": "31",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6945:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 507,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6928:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6934:6:1",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "6928:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6941:3:1",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "6928:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6928:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:57:1"
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "6982:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "6974:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6974:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 520,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "7002:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 522,
																"indexExpression": {
																	"id": 521,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "7012:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7002:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 524,
															"indexExpression": {
																"hexValue": "31",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7018:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7002:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "6990:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6990:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6974:47:1"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "7039:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "7031:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 530,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7057:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7063:6:1",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7057:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7045:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7045:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7031:39:1"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "mined_area",
														"nameLocation": "7088:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "7080:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7080:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7136:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 541,
																	"name": "difference",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "7120:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 538,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "7111:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 536,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "7101:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7107:3:1",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "7101:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7101:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7116:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "7101:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7101:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7132:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7101:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7101:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7080:58:1"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "7233:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "7228:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7228:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"arguments": [
														{
															"id": 556,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7282:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 552,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "7271:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 551,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "7261:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 549,
																	"name": "mined_area",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "7246:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7257:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "7246:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7246:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7278:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7246:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7246:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7228:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "7335:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 559,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "7312:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"id": 560,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "7322:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7312:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 563,
															"indexExpression": {
																"hexValue": "33",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7328:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7312:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7331:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "7312:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7312:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 567,
												"nodeType": "Return",
												"src": "7305:41:1"
											}
										]
									},
									"functionSelector": "b8ba6007",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "6844:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6863:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6855:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6854:14:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6889:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6888:9:1"
									},
									"scope": 1188,
									"src": "6835:525:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "7500:322:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 576,
														"name": "_BlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "7513:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 577,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7513:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "7510:93:1",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "7546:57:1",
													"statements": [
														{
															"expression": {
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 579,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "7560:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 580,
																	"name": "_startBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "7575:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7560:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "7560:32:1"
														}
													]
												}
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "DCFperBlock",
														"nameLocation": "7620:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "7612:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7612:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653534",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7653:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															},
															"value": "1e54"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															}
														],
														"expression": {
															"id": 587,
															"name": "_TokenperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7634:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7649:3:1",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 205,
														"src": "7634:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7612:46:1"
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "7687:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "7679:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7679:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "_BlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "7714:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "difficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7704:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7704:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7679:48:1"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "DugUP",
														"nameLocation": "7750:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "7742:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7742:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "BlockDifficult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "7774:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 600,
															"name": "DCFperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "7758:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7770:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7758:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7758:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7742:47:1"
											},
											{
												"expression": {
													"id": 605,
													"name": "DugUP",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "7806:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 575,
												"id": 606,
												"nodeType": "Return",
												"src": "7799:12:1"
											}
										]
									},
									"functionSelector": "4be3403c",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "7436:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "7457:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "7449:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7448:22:1"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "7492:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:9:1"
									},
									"scope": 1188,
									"src": "7427:395:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "7896:192:1",
										"statements": [
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "7911:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "7906:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 615,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7906:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"id": 622,
															"name": "_startBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7953:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7943:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 617,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "7926:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7939:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "7926:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7926:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7949:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7926:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7926:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7906:65:1"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "BlockDifficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "7981:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 631,
																"name": "BlockDifficult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "8035:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "BlockDifficult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "8015:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 626,
																		"name": "BlockDifficult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "7996:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8011:3:1",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 205,
																	"src": "7996:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7996:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8031:3:1",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 205,
															"src": "7996:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7996:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7981:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "7981:69:1"
											},
											{
												"expression": {
													"id": 635,
													"name": "BlockDifficult",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "8067:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 614,
												"id": 636,
												"nodeType": "Return",
												"src": "8060:21:1"
											}
										]
									},
									"functionSelector": "d993226b",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "difficult",
									"nameLocation": "7838:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "7853:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7848:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7847:19:1"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7888:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7887:9:1"
									},
									"scope": 1188,
									"src": "7829:259:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										420
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "8230:29:1",
										"statements": [
											{
												"expression": {
													"id": 645,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "8247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 644,
												"id": 646,
												"nodeType": "Return",
												"src": "8240:12:1"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "8102:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8170:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 641,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8197:8:1"
									},
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8174:2:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "8215:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8215:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8214:15:1"
									},
									"scope": 1188,
									"src": "8161:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										426
									],
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "8443:31:1",
										"statements": [
											{
												"expression": {
													"id": 655,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "8460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 654,
												"id": 656,
												"nodeType": "Return",
												"src": "8453:14:1"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "8265:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8381:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 651,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8410:8:1"
									},
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8387:2:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8428:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8428:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8427:15:1"
									},
									"scope": 1188,
									"src": "8372:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										432
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "9163:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9180:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "9173:9:1"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "8480:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "9107:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9138:8:1"
									},
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9115:2:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "9156:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9156:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9155:7:1"
									},
									"scope": 1188,
									"src": "9098:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "9319:36:1",
										"statements": [
											{
												"expression": {
													"id": 675,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 457,
													"src": "9336:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 676,
												"nodeType": "Return",
												"src": "9329:19:1"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "9195:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9258:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9292:8:1"
									},
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9269:2:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "9310:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9309:9:1"
									},
									"scope": 1188,
									"src": "9249:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "9496:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 687,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "9513:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 689,
													"indexExpression": {
														"id": 688,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9523:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9513:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 690,
												"nodeType": "Return",
												"src": "9506:25:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "9361:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "9422:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9469:8:1"
									},
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9440:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9432:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9431:17:1"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9486:9:1"
									},
									"scope": 1188,
									"src": "9413:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "9819:104:1",
										"statements": [
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9837:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "9829:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 703,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9829:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 705,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "9845:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9845:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9829:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "9877:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9884:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9888:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "9867:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9867:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "9867:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9912:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 702,
												"id": 715,
												"nodeType": "Return",
												"src": "9905:11:1"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "9544:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "9743:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9795:8:1"
									},
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9760:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9752:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9772:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9764:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9751:28:1"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "9813:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9813:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9812:6:1"
									},
									"scope": 1188,
									"src": "9734:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "10079:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 728,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "10096:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10108:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10096:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 732,
													"indexExpression": {
														"id": 731,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10115:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10096:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 733,
												"nodeType": "Return",
												"src": "10089:34:1"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "9929:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9990:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10052:8:1"
									},
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10008:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "10000:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "10015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:32:1"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "10070:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10069:9:1"
									},
									"scope": 1188,
									"src": "9981:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										397
									],
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "10527:108:1",
										"statements": [
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10545:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "10537:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 746,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10537:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 748,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "10553:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10553:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10537:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "10584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "10591:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "10600:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 751,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "10575:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10575:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "10575:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10624:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 745,
												"id": 758,
												"nodeType": "Return",
												"src": "10617:11:1"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "10136:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10447:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10503:8:1"
									},
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10480:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "10472:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10454:33:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "10521:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10521:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10520:6:1"
									},
									"scope": 1188,
									"src": "10438:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11330:153:1",
										"statements": [
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "11348:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "11340:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 773,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11340:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 775,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "11358:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11358:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11340:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "11396:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11402:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "11411:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "11380:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11380:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "11380:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "11438:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "11444:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "11448:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "11428:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11428:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "11428:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 772,
												"id": 791,
												"nodeType": "Return",
												"src": "11465:11:1"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "10641:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11206:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 769,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11306:8:1"
									},
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11236:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11228:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11228:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11258:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11250:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11278:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11270:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11270:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11218:72:1"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11324:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11324:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11323:6:1"
									},
									"scope": 1188,
									"src": "11197:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "11972:140:1",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11990:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "11982:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 803,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11982:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 805,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "11998:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11998:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11982:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "12029:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "12036:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 812,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "12055:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 813,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "12062:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 811,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "12045:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12045:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 815,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "12073:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12045:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 808,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "12020:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12020:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "12020:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12101:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 802,
												"id": 820,
												"nodeType": "Return",
												"src": "12094:11:1"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11489:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "11887:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11913:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "11905:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11905:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "11930:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "11922:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11904:37:1"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "11966:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11966:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11965:6:1"
									},
									"scope": 1188,
									"src": "11878:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "12698:328:1",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12716:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "12708:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 832,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12708:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "12724:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12724:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12708:28:1"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12754:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "12746:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12783:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "12790:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 839,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "12773:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12773:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12746:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 845,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "12816:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 846,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "12836:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12816:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12853:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12808:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12808:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "12808:85:1"
											},
											{
												"id": 859,
												"nodeType": "UncheckedBlock",
												"src": "12903:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 852,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "12936:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 853,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "12943:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 854,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "12952:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 855,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "12971:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12952:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 851,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "12927:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12927:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 858,
														"nodeType": "ExpressionStatement",
														"src": "12927:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13015:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 831,
												"id": 861,
												"nodeType": "Return",
												"src": "13008:11:1"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "12118:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "12608:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12634:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "12626:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "12651:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "12643:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12625:42:1"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "12692:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12692:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12691:6:1"
									},
									"scope": 1188,
									"src": "12599:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "13588:593:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "13606:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 875,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13606:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13626:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13598:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "13598:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "13684:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13698:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13690:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13690:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13690:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13684:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13702:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13676:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "13676:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "13772:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "13778:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "13782:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "13751:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13751:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "13751:38:1"
											},
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "13808:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "13800:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13800:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"baseExpression": {
														"id": 901,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "13822:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 903,
													"indexExpression": {
														"id": 902,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "13832:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13822:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13800:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "13855:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 907,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "13870:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13855:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13878:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13847:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13847:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "13847:72:1"
											},
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "13929:73:1",
												"statements": [
													{
														"expression": {
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 912,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "13953:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 914,
																"indexExpression": {
																	"id": 913,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "13963:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13953:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "13971:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 916,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "13985:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13971:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13953:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 919,
														"nodeType": "ExpressionStatement",
														"src": "13953:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 921,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "14011:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 922,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "14021:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14011:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "14028:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14011:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "14011:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14059:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "14065:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "14069:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "14050:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14050:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "14045:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14107:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "14113:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "14117:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 933,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "14087:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14087:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "14087:37:1"
											},
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 939,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "14143:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 942,
															"indexExpression": {
																"id": 940,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "14153:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14143:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 943,
														"indexExpression": {
															"hexValue": "31",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14159:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14143:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 944,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "14162:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14168:6:1",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "14162:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14143:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "14143:31:1"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "13032:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "13489:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13516:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "13508:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13538:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "13530:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13530:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13558:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "13550:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13498:72:1"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13588:0:1"
									},
									"scope": 1188,
									"src": "13480:701:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "14522:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "14540:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14559:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14551:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 959,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14551:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14551:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14540:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14563:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14532:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14532:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "14532:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14637:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14629:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 968,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14629:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14629:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "14641:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "14650:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 967,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "14608:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14608:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "14608:49:1"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "14668:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 977,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "14684:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14668:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "14668:22:1"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 980,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "14700:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 982,
														"indexExpression": {
															"id": 981,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "14710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14700:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 983,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "14722:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14700:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "14700:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14752:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14752:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14752:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "14764:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "14773:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "14743:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14743:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "EmitStatement",
												"src": "14738:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14819:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14811:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 996,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14811:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14811:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "14823:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "14832:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "14791:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14791:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "14791:48:1"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "14187:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "14466:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14480:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "14472:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14472:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14497:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "14489:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14471:33:1"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14522:0:1"
									},
									"scope": 1188,
									"src": "14457:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "15231:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "15249:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15268:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15260:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15260:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15249:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15272:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15241:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15241:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "15241:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1024,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "15340:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15357:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15349:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15349:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15349:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "15361:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "15319:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15319:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "15319:49:1"
											},
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "15387:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "15379:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15379:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"baseExpression": {
														"id": 1034,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "15404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1036,
													"indexExpression": {
														"id": 1035,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "15414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15404:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15379:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "15440:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1040,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "15458:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15440:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15466:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15432:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15432:71:1"
											},
											{
												"id": 1053,
												"nodeType": "UncheckedBlock",
												"src": "15513:79:1",
												"statements": [
													{
														"expression": {
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1045,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "15537:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1047,
																"indexExpression": {
																	"id": 1046,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "15547:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "15537:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "15558:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1049,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "15575:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15558:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15537:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1052,
														"nodeType": "ExpressionStatement",
														"src": "15537:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "15601:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1055,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "15617:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15601:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "15601:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1059,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "15648:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15665:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15657:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15657:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15657:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "15669:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "15639:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15639:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "EmitStatement",
												"src": "15634:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "15707:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15724:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15716:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1069,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15716:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15716:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "15728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "15687:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15687:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "15687:48:1"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "14852:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "15175:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15189:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "15181:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15206:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "15198:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15198:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15180:33:1"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15231:0:1"
									},
									"scope": 1188,
									"src": "15166:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "16278:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "16296:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16313:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16305:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1089,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16305:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16305:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16296:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16317:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16288:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16288:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "16288:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "16374:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16393:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16385:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1099,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16385:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16385:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16374:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16397:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16366:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16366:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "16366:68:1"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1107,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "16445:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1110,
															"indexExpression": {
																"id": 1108,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "16457:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16445:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1109,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "16464:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16445:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "16475:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16445:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "16445:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1116,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "16505:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "16512:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "16521:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1115,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "16496:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16496:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "EmitStatement",
												"src": "16491:37:1"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "15748:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16174:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16200:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "16192:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16223:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "16215:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16248:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "16240:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16182:78:1"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16278:0:1"
									},
									"scope": 1188,
									"src": "16165:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "16936:321:1",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16954:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 1164,
														"src": "16946:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"arguments": [
														{
															"id": 1135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "16983:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "16990:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1134,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "16973:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16973:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16946:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1139,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "17012:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17037:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1140,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17032:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17032:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "17046:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "17032:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17012:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "17008:243:1",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "17051:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1147,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "17073:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1148,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "17093:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17073:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17101:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1146,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "17065:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17065:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "17065:68:1"
														},
														{
															"id": 1161,
															"nodeType": "UncheckedBlock",
															"src": "17147:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1154,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "17184:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1155,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "17191:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1156,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "17200:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1157,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "17219:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17200:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1153,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1122,
																			"src": "17175:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17175:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "17175:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "16541:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "16825:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16858:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "16850:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16881:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "16873:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16873:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16906:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "16898:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16840:78:1"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16936:0:1"
									},
									"scope": 1188,
									"src": "16816:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17960:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "17263:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "17850:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17888:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17880:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17910:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17902:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17930:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "17922:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17870:72:1"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17960:0:1"
									},
									"scope": 1188,
									"src": "17841:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "18668:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "17968:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "18559:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "18588:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18618:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "18610:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18638:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "18630:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18578:72:1"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18668:0:1"
									},
									"scope": 1188,
									"src": "18550:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1255,
							"src": "5788:12884:1",
							"usedErrors": []
						},
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18842:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1191,
										"name": "Context",
										"nameLocations": [
											"19113:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "19113:7:1"
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "19113:7:1"
								},
								{
									"baseName": {
										"id": 1193,
										"name": "ERC20",
										"nameLocations": [
											"19122:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "19122:5:1"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "19122:5:1"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1190,
								"nodeType": "StructuredDocumentation",
								"src": "18869:208:1",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 1229,
							"linearizedBaseContracts": [
								1229,
								1188,
								433,
								410,
								333
							],
							"name": "ERC20Burnable",
							"nameLocation": "19096:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "19282:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1201,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "19298:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19298:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "19312:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "19292:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19292:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "19292:27:1"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "19134:98:1",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "19246:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "19251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19250:16:1"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19282:0:1"
									},
									"scope": 1229,
									"src": "19237:89:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "19698:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "19724:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1217,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "19733:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19733:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "19747:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "19708:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19708:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "19708:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "19770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "19779:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1222,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "19764:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19764:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "19764:22:1"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "19332:295:1",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "19641:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19658:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "19650:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19650:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19675:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "19667:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19649:33:1"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19698:0:1"
									},
									"scope": 1229,
									"src": "19632:161:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1255,
							"src": "19078:717:1",
							"usedErrors": []
						},
						{
							"id": 1230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "19834:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1231,
										"name": "ERC20",
										"nameLocations": [
											"19879:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "19879:5:1"
									},
									"id": 1232,
									"nodeType": "InheritanceSpecifier",
									"src": "19879:5:1"
								},
								{
									"baseName": {
										"id": 1233,
										"name": "ERC20Burnable",
										"nameLocations": [
											"19885:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "19885:13:1"
									},
									"id": 1234,
									"nodeType": "InheritanceSpecifier",
									"src": "19885:13:1"
								}
							],
							"canonicalName": "DCOFF",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254,
								1229,
								1188,
								433,
								410,
								333
							],
							"name": "DCOFF",
							"nameLocation": "19870:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "19942:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19958:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19962:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19958:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630303030303030",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19970:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60000000_by_1",
																	"typeString": "int_const 60000000"
																},
																"value": "60000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19981:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1246,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "19987:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19987:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "19981:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19970:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "19952:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19952:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "19952:46:1"
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "506f776572",
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2fb995b264f4328a65dd3434462358ea85212b01275efbe3314f8b3ff042592d",
														"typeString": "literal_string \"Power\""
													},
													"value": "Power"
												},
												{
													"hexValue": "506f776572",
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2fb995b264f4328a65dd3434462358ea85212b01275efbe3314f8b3ff042592d",
														"typeString": "literal_string \"Power\""
													},
													"value": "Power"
												}
											],
											"id": 1239,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1236,
												"name": "ERC20",
												"nameLocations": [
													"19918:5:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1188,
												"src": "19918:5:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "19918:23:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19915:2:1"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19942:0:1"
									},
									"scope": 1254,
									"src": "19904:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1255,
							"src": "19861:151:1",
							"usedErrors": []
						}
					],
					"src": "139:19873:1"
				},
				"id": 1
			}
		}
	}
}