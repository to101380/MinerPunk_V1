{
	"id": "43db35e17bfa0bf9da871c009636294c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/ERC721A/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '../IDCF/mineInterface.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721A,mine {\r\n    using SafeMath for uint;\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    uint256 internal _salt;\r\n\r\n    uint256 internal _TokenperBlock;\r\n\r\n    uint256 internal _startBlockNumber;\r\n\r\n    uint256 internal _totalPower;\r\n\r\n    uint256 internal _Powersold;\r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 internal _currentIndex;  \r\n\r\n    uint256 internal _maxSupply;\r\n\r\n    // The number of tokens burned.\r\n    uint256 internal _burnCounter;    \r\n  \r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     *[user][1] = last_block\r\n     *[user][2] = accumulation_power   \r\n     *[user][3] = accumulation_DCF    \r\n    */   \r\n    mapping(address => mapping(uint256 => uint256))private _mineInfo;      \r\n    \r\n\r\n    constructor(string memory name_, string memory symbol_, uint256 salt_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _maxSupply = 10000;\r\n        _currentIndex = _startTokenId(); \r\n        _salt = salt_;   \r\n        _TokenperBlock = 5e18;   \r\n        _totalPower = 46000;\r\n        _startBlockNumber = block.number;    \r\n    }\r\n  \r\n\r\n\r\n\r\n    function MineStatus(address user)public view override returns(uint256){\r\n        uint256 difference = block.number.sub(_mineInfo[user][1]);\r\n        uint256 start = blockStatus(_mineInfo[user][1]);\r\n        uint256 end = blockStatus(block.number);\r\n        uint256 mined_area = start.add(end).mul(difference).div(2);\r\n        //All TOKENs that are connected and mined in these two regions\r\n        \r\n        uint dcf_amount = mined_area.mul(_mineInfo[user][2]).div(_totalPower);\r\n        return _mineInfo[user][3].add(dcf_amount);       \r\n    }\r\n   \r\n\r\n    // The number of DCF that can be mined in this Block\r\n    function blockStatus (uint256 _BlockNumber)public view override returns (uint256){\r\n        if(_BlockNumber < _startBlockNumber){\r\n            _BlockNumber = _startBlockNumber;\r\n        }\r\n        uint256 DCFperBlock = _TokenperBlock.mul(1e54);           \r\n        uint256 BlockDifficult = difficult(_BlockNumber);     \r\n        uint256 DugUP = DCFperBlock.div(BlockDifficult);\r\n        return DugUP;    \r\n    }\r\n\r\n\r\n    function difficult(uint _BlockNumber)public view override returns (uint256){\r\n        uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber);\r\n        BlockDifficult=BlockDifficult.mul(BlockDifficult).mul(BlockDifficult);\r\n        return BlockDifficult;\r\n    }\r\n\r\n   \r\n\r\n\r\n    function tokenIDPower (uint256 tokenId)public view override returns(uint256){        \r\n\r\n        uint256 _power = tokenId.mul(_salt).add(tokenId); \r\n        if(_power%10 == 0){\r\n            _power = 1;\r\n        }else{\r\n            _power = _power%10;\r\n        }\r\n        return _power;\r\n    }\r\n    \r\n    function PowerTrading (address user,uint256 _PowerUnit)internal {\r\n        _mineInfo[user][2]=_mineInfo[user][2].add(_PowerUnit);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n    /**\r\n     * To change the starting tokenId, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than _currentIndex - _startTokenId() times\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n\r\n    function totalPower() public view  returns (uint256) {       \r\n        unchecked {            \r\n            return _totalPower;\r\n        }\r\n    }\r\n\r\n\r\n    function maxSupply() public view  returns (uint256) {       \r\n        unchecked {\r\n            return _maxSupply - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n     \r\n\r\n    function mineInfo(address user, uint256 number) public view  returns (uint256) {       \r\n        unchecked {\r\n            return _mineInfo[user][number];\r\n        }\r\n    }    \r\n\r\n\r\n  \r\n\r\n    /**\r\n     * Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to _startTokenId()\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberBurned);\r\n    }\r\n\r\n    /**\r\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return _addressData[owner].aux;\r\n    }\r\n \r\n    /**\r\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal {\r\n        _addressData[owner].aux = aux;\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr) if (curr < _currentIndex) {\r\n                TokenOwnership memory ownership = _ownerships[curr];\r\n                if (!ownership.burned) {\r\n                    if (ownership.addr != address(0)) {\r\n                        return ownership;\r\n                    }\r\n                    // Invariant:\r\n                    // There will always be an ownership that has an address and is not burned\r\n                    // before an ownership that does not have an address and is not burned.\r\n                    // Hence, curr will not underflow.\r\n                    while (true) {\r\n                        curr--;\r\n                        ownership = _ownerships[curr];\r\n                        if (ownership.addr != address(0)) {\r\n                            return ownership;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return 'https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/';\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        if (to == owner) revert ApprovalToCurrentOwner();\r\n\r\n        if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {\r\n            revert ApprovalCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSender()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n        if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n            revert TransferToNonERC721ReceiverImplementer();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     *   (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {   \r\n        uint256 startTokenId = _currentIndex;                \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);               \r\n\r\n      \r\n\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            if (to.isContract()) {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex);\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();                        \r\n                    }\r\n                } while (updatedIndex < end);\r\n                // Reentrancy protection\r\n               \r\n                if (_currentIndex != startTokenId) revert();\r\n            } else {\r\n                do {\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    emit Transfer(address(0), to, updatedIndex++);\r\n                } while (updatedIndex < end);\r\n            }\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {  \r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[from][3] = MineStatus(from);\r\n        _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber);\r\n        _mineInfo[from][1] = block.number;\r\n        _mineInfo[to][3] = MineStatus(to);\r\n        _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber);\r\n        _mineInfo[to][1] = block.number;\r\n        \r\n\r\n        \r\n\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == from ||\r\n            isApprovedForAll(from, _msgSender()) ||\r\n            getApproved(tokenId) == _msgSender());\r\n\r\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            _addressData[from].balance -= 1;\r\n            _addressData[to].balance += 1;\r\n\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = to;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);\r\n        _mineInfo[msg.sender][2] = _mineInfo[msg.sender][2].sub(powerNumber);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n        _totalPower = _totalPower.sub(powerNumber);\r\n\r\n\r\n         \r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId); \r\n\r\n        address from = prevOwnership.addr;\r\n\r\n        if (approvalCheck) {\r\n            bool isApprovedOrOwner = (_msgSender() == from ||\r\n                isApprovedForAll(from, _msgSender()) ||\r\n                getApproved(tokenId) == _msgSender());\r\n\r\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            AddressData storage addressData = _addressData[from];\r\n            addressData.balance -= 1;\r\n            addressData.numberBurned += 1;\r\n\r\n            // Keep track of who burned the token, and the timestamp of burning.\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = from;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n            currSlot.burned = true;\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n            return retval == IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface mine  {   \r\n\r\n    function MineStatus(address user)external view returns(uint256);     \r\n    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n    function tokenIDPower (uint256 tokenId)external view returns(uint256);\r\n    function difficult(uint _BlockNumber)external view returns (uint256);\r\n      \r\n}"
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A is IERC721, IERC721Metadata {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * The caller cannot approve to the current owner.\r\n     */\r\n    error ApprovalToCurrentOwner();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n    }\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct AddressData {\r\n        // Realistically, 2**64-1 is more than enough.\r\n        uint64 balance;\r\n        // Keeps track of mint count with minimal overhead for tokenomics.\r\n        uint64 numberMinted;\r\n        // Keeps track of burn count with minimal overhead for tokenomics.\r\n        uint64 numberBurned;\r\n        // For miscellaneous variable(s) pertaining to the address\r\n        // (e.g. number of whitelist mint slots used).\r\n        // If there are multiple variables, please pack them into a uint64.\r\n        uint64 aux;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     * \r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "salt_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "mineInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24876  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2484:2826  constructor(string memory name_, string memory symbol_, uint256 salt_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2574:2579  name_ */\n  dup3\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2566:2571  _name */\n  0x08\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2566:2579  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2600:2607  symbol_ */\n  dup2\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2590:2597  _symbol */\n  0x09\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2590:2607  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2631:2636  10000 */\n  0x2710\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2618:2628  _maxSupply */\n  0x06\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2618:2636  _maxSupply = 10000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2663:2678  _startTokenId() */\n  tag_9\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2663:2676  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2663:2678  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2647:2660  _currentIndex */\n  0x05\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2647:2678  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2698:2703  salt_ */\n  dup1\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2690:2695  _salt */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2690:2703  _salt = salt_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2734:2738  5e18 */\n  0x4563918244f40000\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2717:2731  _TokenperBlock */\n  0x01\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2717:2738  _TokenperBlock = 5e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2766:2771  46000 */\n  0xb3b0\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2752:2763  _totalPower */\n  0x03\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2752:2771  _totalPower = 46000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2802:2814  block.number */\n  number\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2782:2799  _startBlockNumber */\n  0x02\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2782:2814  _startBlockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2484:2826  constructor(string memory name_, string memory symbol_, uint256 salt_) {... */\n  pop\n  pop\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24876  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  jump(tag_11)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4718:4810  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4774:4781  uint256 */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4718:4810  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_56\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_58\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1030:1118   */\ntag_57:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_60\n  tag_13\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_61\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_64\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1434:1490   */\ntag_63:\n    /* \"#utility.yul\":1508:1537   */\n  tag_65\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_67:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_71\n    /* \"#utility.yul\":1992:2041   */\n  tag_72\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_74\n  tag_17\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2117:2229   */\ntag_73:\n    /* \"#utility.yul\":2238:2290   */\n  tag_75\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_78\n  tag_16\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2399:2521   */\ntag_77:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_79\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_26:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_27:\n    /* \"#utility.yul\":2833:2857   */\n  tag_82\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_26\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_83:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_28:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_85\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_88\n  tag_14\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3178:3297   */\ntag_87:\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3346:3355   */\n  dup5\n    /* \"#utility.yul\":3342:3359   */\n  add\n    /* \"#utility.yul\":3336:3360   */\n  mload\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3490   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3409:3488   */\n  tag_90\n  tag_15\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3373:3490   */\ntag_89:\n    /* \"#utility.yul\":3514:3588   */\n  tag_91\n    /* \"#utility.yul\":3580:3587   */\n  dup7\n    /* \"#utility.yul\":3571:3577   */\n  dup3\n    /* \"#utility.yul\":3560:3569   */\n  dup8\n    /* \"#utility.yul\":3556:3578   */\n  add\n    /* \"#utility.yul\":3514:3588   */\n  tag_25\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3504:3588   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3598   */\n  pop\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3647:3656   */\n  dup5\n    /* \"#utility.yul\":3643:3661   */\n  add\n    /* \"#utility.yul\":3637:3662   */\n  mload\n    /* \"#utility.yul\":3689:3707   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3681:3687   */\n  dup2\n    /* \"#utility.yul\":3678:3708   */\n  gt\n    /* \"#utility.yul\":3675:3792   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3711:3790   */\n  tag_93\n  tag_15\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3675:3792   */\ntag_92:\n    /* \"#utility.yul\":3816:3890   */\n  tag_94\n    /* \"#utility.yul\":3882:3889   */\n  dup7\n    /* \"#utility.yul\":3873:3879   */\n  dup3\n    /* \"#utility.yul\":3862:3871   */\n  dup8\n    /* \"#utility.yul\":3858:3880   */\n  add\n    /* \"#utility.yul\":3816:3890   */\n  tag_25\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3806:3890   */\n  swap3\n  pop\n    /* \"#utility.yul\":3608:3900   */\n  pop\n    /* \"#utility.yul\":3939:3941   */\n  0x40\n    /* \"#utility.yul\":3965:4029   */\n  tag_95\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3965:4029   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3955:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_29:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_30:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_31:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_99:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_101\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4573:4657   */\ntag_100:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_32:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_33:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_34:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_35:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_106\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5288:5327   */\n  tag_107\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_36:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_37:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_110\n    /* \"#utility.yul\":5594:5628   */\n  tag_111\n    /* \"#utility.yul\":5603:5627   */\n  tag_112\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_26\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5594:5628   */\n  tag_36\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5576:5629   */\n  tag_26\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_38:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_39:\n    /* \"#utility.yul\":5832:5871   */\n  tag_115\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_37\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5893:5984   */\n  tag_116\n    /* \"#utility.yul\":5942:5983   */\n  tag_117\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_35\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_40:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_41:\n    /* \"#utility.yul\":6153:6185   */\n  tag_120\n  tag_40\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6194:6259   */\n  tag_121\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_39\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_42:\n    /* \"#utility.yul\":6331:6451   */\ntag_123:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_126\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_41\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_43:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_129\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_32\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6682:6711   */\n  tag_130\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_33\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_131:\n    /* \"#utility.yul\":6909:6989   */\n  tag_132\n    /* \"#utility.yul\":6965:6987   */\n  tag_133\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_33\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_42\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_128:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_44:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_45:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_136\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_44\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_46:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_138\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_45\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_7:\n    /* \"#utility.yul\":7726:7763   */\n  tag_140\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_29\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_142\n  tag_19\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7814:7870   */\ntag_141:\n    /* \"#utility.yul\":7894:7932   */\n  tag_143\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_31\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7979:8046   */\n  tag_144\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_43\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_146\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_147:\n    /* \"#utility.yul\":8920:8987   */\n  tag_148\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_46\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_145)\n    /* \"#utility.yul\":8141:8759   */\ntag_146:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_149\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_32\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_150:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_150)\ntag_152:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_154\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_45\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_153:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_145:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24876  contract ERC721A is Context, ERC165, IERC721A,mine {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24876  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd5abeb01\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd993226b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdb3ad22c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe29301f9\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xeff0730d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb8ba6007\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4be3403c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6233:6538  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9349:9449  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10944:11148  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10506:10878  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4944:5256  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11809:11979  function transferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12050:12235  function safeTransferFrom(... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3457:3868  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9157:9282  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6602:6808  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9518:9622  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11220:11507  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_14:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12306:12676  function safeTransferFrom(... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2842:3386  function MineStatus(address user)public view override returns(uint256){... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9693:10011  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5421:5585  function maxSupply() public view  returns (uint256) {       ... */\n    tag_18:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3878:4149  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5266:5411  function totalPower() public view  returns (uint256) {       ... */\n    tag_20:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4166:4458  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11578:11742  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5602:5773  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6233:6538  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6335:6339  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6387:6412  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6412  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6383  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6412  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6477  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6444:6477  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6429:6477  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6429:6440  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6429:6477  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6477  interfaceId == type(IERC721).interfaceId ||... */\n    tag_114:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6530  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6494:6530  super.supportsInterface(interfaceId) */\n      tag_116\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6518:6529  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6494:6517  super.supportsInterface */\n      tag_117\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6494:6530  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_116:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6372:6530  interfaceId == type(IERC721).interfaceId ||... */\n    tag_115:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6352:6530  return... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6233:6538  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9349:9449  function name() public view virtual override returns (string memory) {... */\n    tag_34:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9403:9416  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9436:9441  _name */\n      0x08\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9429:9441  return _name */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9349:9449  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10944:11148  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_40:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11012:11019  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11037:11053  _exists(tokenId) */\n      tag_126\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11045:11052  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11037:11044  _exists */\n      tag_127\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11037:11053  _exists(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11032:11096  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_128\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11062:11096  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11032:11096  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_128:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11116:11131  _tokenApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11116:11140  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11132:11139  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11116:11140  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11109:11140  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10944:11148  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10506:10878  function approve(address to, uint256 tokenId) public override {... */\n    tag_46:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10579:10592  address owner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10595:10619  ERC721A.ownerOf(tokenId) */\n      tag_130\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10611:10618  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10595:10610  ERC721A.ownerOf */\n      tag_64\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10595:10619  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_130:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10579:10619  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10640:10645  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10634:10645  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10634:10636  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10634:10645  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10630:10678  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_131\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10654:10678  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10630:10678  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_131:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10711:10716  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10695:10716  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10695:10707  _msgSender() */\n      tag_132\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10695:10705  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10695:10707  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10695:10716  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10691:10830  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_134\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10722:10759  isApprovedForAll(owner, _msgSender()) */\n      tag_135\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10739:10744  owner */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10746:10758  _msgSender() */\n      tag_136\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10746:10756  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10746:10758  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10722:10738  isApprovedForAll */\n      tag_107\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10722:10759  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_135:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10718:10830  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_137\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10783:10818  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10718:10830  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_137:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10691:10830  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_134:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10842:10870  _approve(to, tokenId, owner) */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10851:10853  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10855:10862  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10864:10869  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10842:10850  _approve */\n      tag_139\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10842:10870  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_138:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10568:10878  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10506:10878  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4944:5256  function totalSupply() public view override returns (uint256) {... */\n    tag_48:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4997:5004  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5222:5237  _startTokenId() */\n      tag_141\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5222:5235  _startTokenId */\n      tag_142\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5222:5237  _startTokenId() */\n      jump\t// in\n    tag_141:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5207:5219  _burnCounter */\n      sload(0x07)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5191:5204  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5191:5219  _currentIndex - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5191:5237  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5184:5237  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4944:5256  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11809:11979  function transferFrom(... */\n    tag_54:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11943:11971  _transfer(from, to, tokenId) */\n      tag_144\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11953:11957  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11959:11961  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11963:11970  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11943:11952  _transfer */\n      tag_145\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11943:11971  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11809:11979  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12050:12235  function safeTransferFrom(... */\n    tag_57:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12188:12227  safeTransferFrom(from, to, tokenId, '') */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12205:12209  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12211:12213  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12215:12222  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12188:12227  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12188:12204  safeTransferFrom */\n      tag_81\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12188:12227  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_147:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12050:12235  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3457:3868  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n    tag_60:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3530:3537  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3567:3584  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3552:3564  _BlockNumber */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3552:3584  _BlockNumber < _startBlockNumber */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3549:3644  if(_BlockNumber < _startBlockNumber){... */\n      iszero\n      tag_149\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3615:3632  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3600:3632  _BlockNumber = _startBlockNumber */\n      swap2\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3549:3644  if(_BlockNumber < _startBlockNumber){... */\n    tag_149:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3654:3673  uint256 DCFperBlock */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3676:3700  _TokenperBlock.mul(1e54) */\n      tag_150\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3695:3699  1e54 */\n      0x0a70c3c40a64e6c51999090b65f67d9240000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3676:3690  _TokenperBlock */\n      sload(0x01)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3676:3694  _TokenperBlock.mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3676:3700  _TokenperBlock.mul(1e54) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3654:3700  uint256 DCFperBlock = _TokenperBlock.mul(1e54) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3722:3744  uint256 BlockDifficult */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3747:3770  difficult(_BlockNumber) */\n      tag_152\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3757:3769  _BlockNumber */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3747:3756  difficult */\n      tag_95\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3747:3770  difficult(_BlockNumber) */\n      jump\t// in\n    tag_152:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3722:3770  uint256 BlockDifficult = difficult(_BlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3786:3799  uint256 DugUP */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3802:3833  DCFperBlock.div(BlockDifficult) */\n      tag_153\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3818:3832  BlockDifficult */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3802:3813  DCFperBlock */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3802:3817  DCFperBlock.div */\n      tag_154\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3802:3833  DCFperBlock.div(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3786:3833  uint256 DugUP = DCFperBlock.div(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3851:3856  DugUP */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3844:3856  return DugUP */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3457:3868  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9157:9282  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_64:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9221:9228  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9248:9269  _ownershipOf(tokenId) */\n      tag_156\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9261:9268  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9248:9260  _ownershipOf */\n      tag_157\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9248:9269  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9248:9274  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9241:9274  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9157:9282  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6602:6808  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_69:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6666:6673  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6707:6708  0 */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6690:6709  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6690:6695  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6690:6709  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6686:6746  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_159\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6718:6746  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6686:6746  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_159:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6772:6784  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6772:6791  _addressData[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6785:6790  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6772:6791  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6772:6799  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6764:6800  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6757:6800  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6602:6808  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9518:9622  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9574:9587  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9607:9614  _symbol */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9600:9614  return _symbol */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_120\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_120\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9518:9622  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11220:11507  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_77:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11331:11343  _msgSender() */\n      tag_167\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11331:11341  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11331:11343  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11319:11343  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11319:11327  operator */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11319:11343  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11315:11369  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_168\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11352:11369  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11315:11369  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_168:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11427:11435  approved */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11400  _operatorApprovals */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11414  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11401:11413  _msgSender() */\n      tag_169\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11401:11411  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11401:11413  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11414  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11424  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11415:11423  operator */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11424  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11382:11435  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11480:11488  operator */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11451:11499  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11466:11478  _msgSender() */\n      tag_170\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11466:11476  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11466:11478  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11451:11499  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11490:11498  approved */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11451:11499  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11220:11507  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12306:12676  function safeTransferFrom(... */\n    tag_81:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12473:12501  _transfer(from, to, tokenId) */\n      tag_173\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12483:12487  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12489:12491  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12493:12500  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12473:12482  _transfer */\n      tag_145\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12473:12501  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12516:12531  to.isContract() */\n      tag_174\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12516:12518  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12516:12529  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_175\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12516:12531  to.isContract() */\n      jump\t// in\n    tag_174:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12512:12669  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12537:12593  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_177\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12568:12572  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12574:12576  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12578:12585  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12587:12592  _data */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12537:12567  _checkContractOnERC721Received */\n      tag_178\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12537:12593  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_177:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12533:12669  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_179\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12617:12657  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12533:12669  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_179:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12512:12669  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_176:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12306:12676  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2842:3386  function MineStatus(address user)public view override returns(uint256){... */\n    tag_84:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2904:2911  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2923:2941  uint256 difference */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2944:2980  block.number.sub(_mineInfo[user][1]) */\n      tag_181\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2961:2970  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2961:2976  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2971:2975  user */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2961:2976  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2961:2979  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2977:2978  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2961:2979  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2944:2956  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2944:2960  block.number.sub */\n      tag_182\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2944:2980  block.number.sub(_mineInfo[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2923:2980  uint256 difference = block.number.sub(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2991:3004  uint256 start */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3007:3038  blockStatus(_mineInfo[user][1]) */\n      tag_183\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3019:3028  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3019:3034  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3029:3033  user */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3019:3034  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3019:3037  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3035:3036  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3019:3037  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3007:3018  blockStatus */\n      tag_60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3007:3038  blockStatus(_mineInfo[user][1]) */\n      jump\t// in\n    tag_183:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2991:3038  uint256 start = blockStatus(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3049:3060  uint256 end */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3063:3088  blockStatus(block.number) */\n      tag_184\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3075:3087  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3063:3074  blockStatus */\n      tag_60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3063:3088  blockStatus(block.number) */\n      jump\t// in\n    tag_184:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3049:3088  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3117  uint256 mined_area */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3157  start.add(end).mul(difference).div(2) */\n      tag_185\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3155:3156  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3150  start.add(end).mul(difference) */\n      tag_186\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3139:3149  difference */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3134  start.add(end) */\n      tag_187\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3130:3133  end */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3125  start */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3129  start.add */\n      tag_188\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3134  start.add(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3138  start.add(end).mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3150  start.add(end).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3154  start.add(end).mul(difference).div */\n      tag_154\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3120:3157  start.add(end).mul(difference).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3157  uint256 mined_area = start.add(end).mul(difference).div(2) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3250:3265  uint dcf_amount */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3319  mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      tag_189\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3307:3318  _totalPower */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3302  mined_area.mul(_mineInfo[user][2]) */\n      tag_190\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3283:3292  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3283:3298  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3293:3297  user */\n      dup12\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3283:3298  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3283:3301  _mineInfo[user][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3299:3300  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3283:3301  _mineInfo[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3278  mined_area */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3282  mined_area.mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3302  mined_area.mul(_mineInfo[user][2]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3306  mined_area.mul(_mineInfo[user][2]).div */\n      tag_154\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3268:3319  mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3250:3319  uint dcf_amount = mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3371  _mineInfo[user][3].add(dcf_amount) */\n      tag_191\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3360:3370  dcf_amount */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3346  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3352  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3347:3351  user */\n      dup11\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3352  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3355  _mineInfo[user][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3353:3354  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3355  _mineInfo[user][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3359  _mineInfo[user][3].add */\n      tag_188\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3337:3371  _mineInfo[user][3].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3330:3371  return _mineInfo[user][3].add(dcf_amount) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2842:3386  function MineStatus(address user)public view override returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9693:10011  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_88:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9766:9779  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9797:9813  _exists(tokenId) */\n      tag_193\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9805:9812  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9797:9804  _exists */\n      tag_127\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9797:9813  _exists(tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9792:9851  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_194\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9822:9851  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9792:9851  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_194:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9864:9885  string memory baseURI */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9888:9898  _baseURI() */\n      tag_195\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9888:9896  _baseURI */\n      tag_196\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9888:9898  _baseURI() */\n      jump\t// in\n    tag_195:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9864:9898  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9941:9942  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9922:9929  baseURI */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9916:9937  bytes(baseURI).length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9916:9942  bytes(baseURI).length != 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9916:10003  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_197\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_198)\n    tag_197:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9969:9976  baseURI */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9978:9996  tokenId.toString() */\n      tag_199\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9978:9985  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9978:9994  tokenId.toString */\n      tag_200\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9978:9996  tokenId.toString() */\n      jump\t// in\n    tag_199:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9952:9997  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_201\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9916:10003  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_198:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9909:10003  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9693:10011  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5421:5585  function maxSupply() public view  returns (uint256) {       ... */\n    tag_91:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5464:5471  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5551:5566  _startTokenId() */\n      tag_204\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5551:5564  _startTokenId */\n      tag_142\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5551:5566  _startTokenId() */\n      jump\t// in\n    tag_204:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5536:5548  _burnCounter */\n      sload(0x07)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5523:5533  _maxSupply */\n      sload(0x06)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5523:5548  _maxSupply - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5523:5566  _maxSupply - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5516:5566  return _maxSupply - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5421:5585  function maxSupply() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3878:4149  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n    tag_95:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3945:3952  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3964:3983  uint BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4029  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      tag_206\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4011:4028  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4006  _BlockNumber.mul(1e18) */\n      tag_207\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4001:4005  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:3996  _BlockNumber */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4000  _BlockNumber.mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4006  _BlockNumber.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4010  _BlockNumber.mul(1e18).div */\n      tag_154\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3984:4029  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3964:4029  uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4109  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      tag_208\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4094:4108  BlockDifficult */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4089  BlockDifficult.mul(BlockDifficult) */\n      tag_209\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4074:4088  BlockDifficult */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4069  BlockDifficult */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4073  BlockDifficult.mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4089  BlockDifficult.mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4093  BlockDifficult.mul(BlockDifficult).mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4055:4109  BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4040:4109  BlockDifficult=BlockDifficult.mul(BlockDifficult).mul(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4127:4141  BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4120:4141  return BlockDifficult */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3878:4149  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5266:5411  function totalPower() public view  returns (uint256) {       ... */\n    tag_98:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5310:5317  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5381:5392  _totalPower */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5374:5392  return _totalPower */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5266:5411  function totalPower() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4166:4458  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n    tag_102:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4234:4241  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4263:4277  uint256 _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4311  tokenId.mul(_salt).add(tokenId) */\n      tag_212\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4303:4310  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4298  tokenId.mul(_salt) */\n      tag_213\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4292:4297  _salt */\n      sload(0x00)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4287  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4291  tokenId.mul */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4298  tokenId.mul(_salt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4302  tokenId.mul(_salt).add */\n      tag_188\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4280:4311  tokenId.mul(_salt).add(tokenId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4263:4311  uint256 _power = tokenId.mul(_salt).add(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4339:4340  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4333:4335  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4326:4332  _power */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4326:4335  _power%10 */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4326:4340  _power%10 == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4323:4427  if(_power%10 == 0){... */\n      tag_216\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4365:4366  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4356:4366  _power = 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4323:4427  if(_power%10 == 0){... */\n      jump(tag_217)\n    tag_216:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4413:4415  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4406:4412  _power */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4406:4415  _power%10 */\n      tag_218\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_218:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4397:4415  _power = _power%10 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4323:4427  if(_power%10 == 0){... */\n    tag_217:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4444:4450  _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4437:4450  return _power */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4166:4458  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11578:11742  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_107:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11675:11679  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11699:11717  _operatorApprovals */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11699:11724  _operatorApprovals[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11718:11723  owner */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11699:11724  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11699:11734  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11725:11733  operator */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11699:11734  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11692:11734  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11578:11742  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5602:5773  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_111:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5672:5679  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5731:5740  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5731:5746  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5741:5745  user */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5731:5746  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5731:5754  _mineInfo[user][number] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5747:5753  number */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5731:5754  _mineInfo[user][number] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5724:5754  return _mineInfo[user][number] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5602:5773  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12890:13064  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_127:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12947:12951  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12990:12997  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:12986  _startTokenId() */\n      tag_223\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:12984  _startTokenId */\n      tag_142\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:12986  _startTokenId() */\n      jump\t// in\n    tag_223:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:12997  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:13024  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13011:13024  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13001:13008  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13001:13024  tokenId < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:13024  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_224:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:13056  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13029:13040  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13029:13049  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13041:13048  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13029:13049  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13029:13056  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13028:13056  !_ownerships[tokenId].burned */\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12971:13056  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_225:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12964:13056  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12890:13064  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21894:22090  function _approve(... */\n    tag_139:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22036:22038  to */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22009:22024  _tokenApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22009:22033  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22025:22032  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22009:22033  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22009:22038  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22074:22081  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22070:22072  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22054:22082  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22063:22068  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22054:22082  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21894:22090  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4718:4810  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_142:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4774:4781  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4718:4810  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16122:18650  function _transfer(... */\n    tag_145:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16241:16260  uint256 powerNumber */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16263:16284  tokenIDPower(tokenId) */\n      tag_230\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16276:16283  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16263:16275  tokenIDPower */\n      tag_102\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16263:16284  tokenIDPower(tokenId) */\n      jump\t// in\n    tag_230:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16241:16284  uint256 powerNumber = tokenIDPower(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16324:16340  MineStatus(from) */\n      tag_231\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16335:16339  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16324:16334  MineStatus */\n      tag_84\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16324:16340  MineStatus(from) */\n      jump\t// in\n    tag_231:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16312  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16318  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16313:16317  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16318  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16321  _mineInfo[from][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16319:16320  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16321  _mineInfo[from][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16303:16340  _mineInfo[from][3] = MineStatus(from) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16407  _mineInfo[from][2].sub(powerNumber) */\n      tag_232\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16395:16406  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16381  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16387  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16382:16386  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16387  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16390  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16388:16389  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16390  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16394  _mineInfo[from][2].sub */\n      tag_182\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16372:16407  _mineInfo[from][2].sub(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16360  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16366  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16361:16365  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16366  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16369  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16367:16368  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16369  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16351:16407  _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16439:16451  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16427  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16433  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16428:16432  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16433  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16436  _mineInfo[from][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16434:16435  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16436  _mineInfo[from][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16418:16451  _mineInfo[from][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16481:16495  MineStatus(to) */\n      tag_233\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16492:16494  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16481:16491  MineStatus */\n      tag_84\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16481:16495  MineStatus(to) */\n      jump\t// in\n    tag_233:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16471  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16475  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16472:16474  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16475  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16478  _mineInfo[to][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16476:16477  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16478  _mineInfo[to][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16462:16495  _mineInfo[to][3] = MineStatus(to) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16558  _mineInfo[to][2].add(powerNumber) */\n      tag_234\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16546:16557  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16534  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16538  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16535:16537  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16538  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16541  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16539:16540  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16541  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16545  _mineInfo[to][2].add */\n      tag_188\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16525:16558  _mineInfo[to][2].add(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16515  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16519  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16516:16518  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16519  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16522  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16520:16521  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16522  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16506:16558  _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16588:16600  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16578  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16582  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16579:16581  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16582  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16585  _mineInfo[to][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16583:16584  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16585  _mineInfo[to][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16569:16600  _mineInfo[to][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16635:16670  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16673:16694  _ownershipOf(tokenId) */\n      tag_235\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16686:16693  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16673:16685  _ownershipOf */\n      tag_157\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16673:16694  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16635:16694  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16733:16737  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16711:16737  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16711:16724  prevOwnership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16711:16729  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16711:16737  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16707:16774  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_236\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16746:16774  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16707:16774  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_236:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16787:16809  bool isApprovedOrOwner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16829:16833  from */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16833  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16825  _msgSender() */\n      tag_237\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16823  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16825  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16833  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16886  _msgSender() == from ||... */\n      dup1\n      tag_238\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16850:16886  isApprovedForAll(from, _msgSender()) */\n      tag_239\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16867:16871  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16873:16885  _msgSender() */\n      tag_240\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16873:16883  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16873:16885  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16850:16866  isApprovedForAll */\n      tag_107\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16850:16886  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_239:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16886  _msgSender() == from ||... */\n    tag_238:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16939  _msgSender() == from ||... */\n      dup1\n      tag_241\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16927:16939  _msgSender() */\n      tag_242\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16927:16937  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16927:16939  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16939  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16923  getApproved(tokenId) */\n      tag_243\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16915:16922  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16914  getApproved */\n      tag_40\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16923  getApproved(tokenId) */\n      jump\t// in\n    tag_243:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16939  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16813:16939  _msgSender() == from ||... */\n    tag_241:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16787:16940  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16958:16975  isApprovedOrOwner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16953:17019  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_244\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16984:17019  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16953:17019  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_244:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17048:17049  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17034:17050  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17034:17036  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17034:17050  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17030:17082  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_245\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17059:17082  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17030:17082  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_245:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17095:17138  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_246\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17117:17121  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17123:17125  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17127:17134  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17136:17137  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17095:17116  _beforeTokenTransfers */\n      tag_247\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17095:17138  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_246:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17203:17238  _approve(address(0), tokenId, from) */\n      tag_248\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17220:17221  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17224:17231  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17233:17237  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17203:17211  _approve */\n      tag_139\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17203:17238  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_248:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17564:17565  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17534:17546  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17534:17552  _addressData[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17547:17551  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17534:17552  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17534:17560  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17534:17565  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17608:17609  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17580:17592  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17580:17596  _addressData[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17593:17595  to */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17580:17596  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17580:17604  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17580:17609  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17626:17657  TokenOwnership storage currSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17660:17671  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17660:17680  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17672:17679  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17660:17680  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17626:17680  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17711:17713  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17695:17703  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17695:17708  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17695:17713  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17761:17776  block.timestamp */\n      timestamp\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17728:17736  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17728:17751  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17728:17777  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18029:18048  uint256 nextTokenId */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18061:18062  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18051:18058  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18051:18062  tokenId + 1 */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18029:18062  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18077:18108  TokenOwnership storage nextSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18111:18122  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18111:18135  _ownerships[nextTokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18123:18134  nextTokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18111:18135  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18077:18135  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18179:18180  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18154:18181  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18154:18162  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18154:18167  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18154:18181  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18150:18534  if (nextSlot.addr == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18364:18377  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18349:18360  nextTokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18349:18377  nextTokenId != _currentIndex */\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18345:18519  if (nextTokenId != _currentIndex) {... */\n      tag_250\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18418:18422  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18402:18410  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18402:18415  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18402:18422  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18471:18484  prevOwnership */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18471:18499  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18445:18453  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18445:18468  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18445:18499  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18345:18519  if (nextTokenId != _currentIndex) {... */\n    tag_250:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18150:18534  if (nextSlot.addr == address(0)) {... */\n    tag_249:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17509:18545  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18581:18588  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18577:18579  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18562:18589  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18571:18575  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18562:18589  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18600:18642  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_251\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18621:18625  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18627:18629  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18631:18638  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18640:18641  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18600:18620  _afterTokenTransfers */\n      tag_252\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18600:18642  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_251:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16226:18650  {  ... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16122:18650  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7984:9095  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_157:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8046:8067  TokenOwnership memory */\n      tag_259\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8080:8092  uint256 curr */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8095:8102  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8080:8102  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8163:8167  curr */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8144:8159  _startTokenId() */\n      tag_262\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8144:8157  _startTokenId */\n      tag_142\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8144:8159  _startTokenId() */\n      jump\t// in\n    tag_262:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8144:8167  _startTokenId() <= curr */\n      gt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8140:9028  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_263\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8180:8193  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8173:8177  curr */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8173:8193  curr < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8169:9028  if (curr < _currentIndex) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8214:8245  TokenOwnership memory ownership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8248:8259  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8248:8265  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8260:8264  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8248:8265  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8214:8265  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8289:8298  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8289:8305  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8284:9013  if (!ownership.burned) {... */\n      tag_265\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8360:8361  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8334:8362  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8334:8343  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8334:8348  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8334:8362  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8330:8431  if (ownership.addr != address(0)) {... */\n      tag_266\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8398:8407  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8391:8407  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_261)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8330:8431  if (ownership.addr != address(0)) {... */\n    tag_266:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8733:8994  while (true) {... */\n    tag_267:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8740:8744  true */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8733:8994  while (true) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8773:8779  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8818:8829  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8818:8835  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8830:8834  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8818:8835  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8806:8835  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8892:8893  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8866:8894  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8866:8875  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8866:8880  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8866:8894  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8862:8971  if (ownership.addr != address(0)) {... */\n      tag_269\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8934:8943  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8927:8943  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_261)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8862:8971  if (ownership.addr != address(0)) {... */\n    tag_269:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8733:8994  while (true) {... */\n      jump(tag_267)\n    tag_268:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8284:9013  if (!ownership.burned) {... */\n    tag_265:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8195:9028  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8169:9028  if (curr < _currentIndex) {... */\n    tag_264:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8140:9028  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_263:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9056:9087  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7984:9095  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_261:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22582:23249  function _checkContractOnERC721Received(... */\n    tag_178:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22745:22749  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22782:22784  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22766:22802  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22803:22815  _msgSender() */\n      tag_272\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22803:22813  _msgSender */\n      tag_133\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22803:22815  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22817:22821  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22823:22830  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22832:22837  _data */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22766:22838  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      0x01\n    tag_275:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22762:23242  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_278\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_283\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_282)\n    tag_283:\n      0x60\n      swap2\n      pop\n    tag_282:\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23017:23018  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23000:23006  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23000:23013  reason.length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23000:23018  reason.length == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22996:23231  if (reason.length == 0) {... */\n      tag_284\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23046:23086  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22996:23231  if (reason.length == 0) {... */\n    tag_284:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23189:23195  reason */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23183:23196  mload(reason) */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23174:23180  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23170:23172  32 */\n      0x20\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23166:23181  add(32, reason) */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23159:23197  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22762:23242  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_278:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22895:22940  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22885:22940  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22885:22891  retval */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22885:22940  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22878:22940  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22582:23249  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10259:10444  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_196:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10310:10323  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10336:10426  return 'https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10259:10444  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_294)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:741  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":751:765  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":790:791  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:786  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      dup1\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup3\n      tag_300\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_300:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_296)\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_302\n      tag_303\n      jump\t// in\n    tag_302:\n    tag_301:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_304\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_304:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:920  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup3\n      tag_307\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_307:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_308\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_309\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_311\n      tag_312\n      jump\t// in\n    tag_311:\n    tag_310:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      tag_313\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_313:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_305)\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1087  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1067:1088  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_294:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23897:24056  function _beforeTokenTransfers(... */\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":24715:24873  function _afterTokenTransfers(... */\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_260:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_316:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_317:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_318:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_319:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_320:\n        /* \"#utility.yul\":561:584   */\n      tag_363\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_319\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_364:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_321:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_366\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_320\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_369\n      tag_317\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":833:952   */\n    tag_368:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_370\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_321\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_322:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_323:\n        /* \"#utility.yul\":1268:1289   */\n      tag_373\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_322\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_375\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_323\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_324:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_325:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_326:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_379:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_327:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_328:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_384\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_324\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2329:2400   */\n      tag_385\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_325\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_386\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_326\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2499:2528   */\n      tag_387\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_327\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_36:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_389\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_328\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_329:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_330:\n        /* \"#utility.yul\":3016:3040   */\n      tag_392\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_329\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_393:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_331:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_395\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_330\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_39:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_398\n      tag_317\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3292:3411   */\n    tag_397:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_399\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_331\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_332:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_333:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_402\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_332\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_334:\n        /* \"#utility.yul\":3872:3896   */\n      tag_404\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_333\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_42:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_406\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_334\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_335:\n        /* \"#utility.yul\":4210:4234   */\n      tag_408\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_333\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_409:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_336:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_411\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_335\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_45:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_414\n      tag_317\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4503:4622   */\n    tag_413:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_415\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_336\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_416\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_331\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_337:\n        /* \"#utility.yul\":4977:5001   */\n      tag_418\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_329\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_50:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_420\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_337\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_53:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_423\n      tag_317\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5352:5471   */\n    tag_422:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_424\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_336\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_425\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_336\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_426\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_331\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_68:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_429\n      tag_317\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5943:6062   */\n    tag_428:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_430\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_336\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_338:\n        /* \"#utility.yul\":6272:6293   */\n      tag_432\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_322\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_433:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_339:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_435\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_338\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_76:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_438\n      tag_317\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6553:6672   */\n    tag_437:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_439\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_336\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_440\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_339\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_340:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_341:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_303:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_342:\n        /* \"#utility.yul\":7452:7479   */\n      tag_445\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_327\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_447\n      tag_303\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7525:7613   */\n    tag_446:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_343:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_449\n      tag_316\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_450\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_342\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_344:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_453\n      tag_303\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7928:7984   */\n    tag_452:\n        /* \"#utility.yul\":8002:8031   */\n      tag_454\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_327\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_345:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_346:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_457\n        /* \"#utility.yul\":8374:8422   */\n      tag_458\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_344\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8358:8423   */\n      tag_343\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_460\n      tag_341\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8498:8610   */\n    tag_459:\n        /* \"#utility.yul\":8619:8673   */\n      tag_461\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_345\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_347:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_464\n      tag_340\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8769:8891   */\n    tag_463:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_465\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_346\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_80:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_468\n      tag_317\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9178:9298   */\n    tag_467:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_469\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_336\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_470\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_336\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_471\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_331\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_473\n      tag_318\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9765:9882   */\n    tag_472:\n        /* \"#utility.yul\":9906:9968   */\n      tag_474\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_347\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_106:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_477\n      tag_317\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10084:10203   */\n    tag_476:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_478\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_336\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_479\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_336\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_348:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_120:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_482:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_484\n      tag_348\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10887:10971   */\n    tag_483:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_349:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_350:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_487\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_324\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11326:11415   */\n      tag_488\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_349\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_489\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_326\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_202:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_491\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_350\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_492\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_350\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12154   */\n    tag_351:\n        /* \"#utility.yul\":12022:12099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12100   */\n      mstore\n        /* \"#utility.yul\":12119:12123   */\n      0x12\n        /* \"#utility.yul\":12116:12117   */\n      0x04\n        /* \"#utility.yul\":12109:12124   */\n      mstore\n        /* \"#utility.yul\":12143:12147   */\n      0x24\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12148   */\n      revert\n        /* \"#utility.yul\":12160:12336   */\n    tag_215:\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12209:12229   */\n      tag_495\n        /* \"#utility.yul\":12227:12228   */\n      dup3\n        /* \"#utility.yul\":12209:12229   */\n      tag_329\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12204:12229   */\n      swap2\n      pop\n        /* \"#utility.yul\":12243:12263   */\n      tag_496\n        /* \"#utility.yul\":12261:12262   */\n      dup4\n        /* \"#utility.yul\":12243:12263   */\n      tag_329\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12238:12263   */\n      swap3\n      pop\n        /* \"#utility.yul\":12282:12283   */\n      dup3\n        /* \"#utility.yul\":12272:12307   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":12287:12305   */\n      tag_498\n      tag_351\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12272:12307   */\n    tag_497:\n        /* \"#utility.yul\":12328:12329   */\n      dup3\n        /* \"#utility.yul\":12325:12326   */\n      dup3\n        /* \"#utility.yul\":12321:12330   */\n      mod\n        /* \"#utility.yul\":12316:12330   */\n      swap1\n      pop\n        /* \"#utility.yul\":12160:12336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12342:12522   */\n    tag_352:\n        /* \"#utility.yul\":12390:12467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12387:12388   */\n      0x00\n        /* \"#utility.yul\":12380:12468   */\n      mstore\n        /* \"#utility.yul\":12487:12491   */\n      0x11\n        /* \"#utility.yul\":12484:12485   */\n      0x04\n        /* \"#utility.yul\":12477:12492   */\n      mstore\n        /* \"#utility.yul\":12511:12515   */\n      0x24\n        /* \"#utility.yul\":12508:12509   */\n      0x00\n        /* \"#utility.yul\":12501:12516   */\n      revert\n        /* \"#utility.yul\":12528:12938   */\n    tag_255:\n        /* \"#utility.yul\":12568:12575   */\n      0x00\n        /* \"#utility.yul\":12591:12611   */\n      tag_501\n        /* \"#utility.yul\":12609:12610   */\n      dup3\n        /* \"#utility.yul\":12591:12611   */\n      tag_329\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12586:12611   */\n      swap2\n      pop\n        /* \"#utility.yul\":12625:12645   */\n      tag_502\n        /* \"#utility.yul\":12643:12644   */\n      dup4\n        /* \"#utility.yul\":12625:12645   */\n      tag_329\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12620:12645   */\n      swap3\n      pop\n        /* \"#utility.yul\":12680:12681   */\n      dup3\n        /* \"#utility.yul\":12677:12678   */\n      dup3\n        /* \"#utility.yul\":12673:12682   */\n      mul\n        /* \"#utility.yul\":12702:12732   */\n      tag_503\n        /* \"#utility.yul\":12720:12731   */\n      dup2\n        /* \"#utility.yul\":12702:12732   */\n      tag_329\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12691:12732   */\n      swap2\n      pop\n        /* \"#utility.yul\":12881:12882   */\n      dup3\n        /* \"#utility.yul\":12872:12879   */\n      dup3\n        /* \"#utility.yul\":12868:12883   */\n      div\n        /* \"#utility.yul\":12865:12866   */\n      dup5\n        /* \"#utility.yul\":12862:12884   */\n      eq\n        /* \"#utility.yul\":12842:12843   */\n      dup4\n        /* \"#utility.yul\":12835:12844   */\n      iszero\n        /* \"#utility.yul\":12815:12898   */\n      or\n        /* \"#utility.yul\":12792:12931   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":12911:12929   */\n      tag_505\n      tag_352\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12792:12931   */\n    tag_504:\n        /* \"#utility.yul\":12576:12938   */\n      pop\n        /* \"#utility.yul\":12528:12938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12944:13129   */\n    tag_258:\n        /* \"#utility.yul\":12984:12985   */\n      0x00\n        /* \"#utility.yul\":13001:13021   */\n      tag_507\n        /* \"#utility.yul\":13019:13020   */\n      dup3\n        /* \"#utility.yul\":13001:13021   */\n      tag_329\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12996:13021   */\n      swap2\n      pop\n        /* \"#utility.yul\":13035:13055   */\n      tag_508\n        /* \"#utility.yul\":13053:13054   */\n      dup4\n        /* \"#utility.yul\":13035:13055   */\n      tag_329\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13030:13055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13074:13075   */\n      dup3\n        /* \"#utility.yul\":13064:13099   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":13079:13097   */\n      tag_510\n      tag_351\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13064:13099   */\n    tag_509:\n        /* \"#utility.yul\":13121:13122   */\n      dup3\n        /* \"#utility.yul\":13118:13119   */\n      dup3\n        /* \"#utility.yul\":13114:13123   */\n      div\n        /* \"#utility.yul\":13109:13123   */\n      swap1\n      pop\n        /* \"#utility.yul\":12944:13129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13135:13233   */\n    tag_353:\n        /* \"#utility.yul\":13186:13192   */\n      0x00\n        /* \"#utility.yul\":13220:13225   */\n      dup2\n        /* \"#utility.yul\":13214:13226   */\n      mload\n        /* \"#utility.yul\":13204:13226   */\n      swap1\n      pop\n        /* \"#utility.yul\":13135:13233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13239:13407   */\n    tag_354:\n        /* \"#utility.yul\":13322:13333   */\n      0x00\n        /* \"#utility.yul\":13356:13362   */\n      dup3\n        /* \"#utility.yul\":13351:13354   */\n      dup3\n        /* \"#utility.yul\":13344:13363   */\n      mstore\n        /* \"#utility.yul\":13396:13400   */\n      0x20\n        /* \"#utility.yul\":13391:13394   */\n      dup3\n        /* \"#utility.yul\":13387:13401   */\n      add\n        /* \"#utility.yul\":13372:13401   */\n      swap1\n      pop\n        /* \"#utility.yul\":13239:13407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13413:13786   */\n    tag_355:\n        /* \"#utility.yul\":13499:13502   */\n      0x00\n        /* \"#utility.yul\":13527:13565   */\n      tag_514\n        /* \"#utility.yul\":13559:13564   */\n      dup3\n        /* \"#utility.yul\":13527:13565   */\n      tag_353\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13581:13651   */\n      tag_515\n        /* \"#utility.yul\":13644:13650   */\n      dup2\n        /* \"#utility.yul\":13639:13642   */\n      dup6\n        /* \"#utility.yul\":13581:13651   */\n      tag_354\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13574:13651   */\n      swap4\n      pop\n        /* \"#utility.yul\":13660:13725   */\n      tag_516\n        /* \"#utility.yul\":13718:13724   */\n      dup2\n        /* \"#utility.yul\":13713:13716   */\n      dup6\n        /* \"#utility.yul\":13706:13710   */\n      0x20\n        /* \"#utility.yul\":13699:13704   */\n      dup7\n        /* \"#utility.yul\":13695:13711   */\n      add\n        /* \"#utility.yul\":13660:13725   */\n      tag_326\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13750:13779   */\n      tag_517\n        /* \"#utility.yul\":13772:13778   */\n      dup2\n        /* \"#utility.yul\":13750:13779   */\n      tag_327\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13745:13748   */\n      dup5\n        /* \"#utility.yul\":13741:13780   */\n      add\n        /* \"#utility.yul\":13734:13780   */\n      swap2\n      pop\n        /* \"#utility.yul\":13503:13786   */\n      pop\n        /* \"#utility.yul\":13413:13786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13792:14432   */\n    tag_274:\n        /* \"#utility.yul\":13987:13991   */\n      0x00\n        /* \"#utility.yul\":14025:14028   */\n      0x80\n        /* \"#utility.yul\":14014:14023   */\n      dup3\n        /* \"#utility.yul\":14010:14029   */\n      add\n        /* \"#utility.yul\":14002:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":14039:14110   */\n      tag_519\n        /* \"#utility.yul\":14107:14108   */\n      0x00\n        /* \"#utility.yul\":14096:14105   */\n      dup4\n        /* \"#utility.yul\":14092:14109   */\n      add\n        /* \"#utility.yul\":14083:14089   */\n      dup8\n        /* \"#utility.yul\":14039:14110   */\n      tag_334\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14120:14192   */\n      tag_520\n        /* \"#utility.yul\":14188:14190   */\n      0x20\n        /* \"#utility.yul\":14177:14186   */\n      dup4\n        /* \"#utility.yul\":14173:14191   */\n      add\n        /* \"#utility.yul\":14164:14170   */\n      dup7\n        /* \"#utility.yul\":14120:14192   */\n      tag_334\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14202:14274   */\n      tag_521\n        /* \"#utility.yul\":14270:14272   */\n      0x40\n        /* \"#utility.yul\":14259:14268   */\n      dup4\n        /* \"#utility.yul\":14255:14273   */\n      add\n        /* \"#utility.yul\":14246:14252   */\n      dup6\n        /* \"#utility.yul\":14202:14274   */\n      tag_337\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14321:14330   */\n      dup2\n        /* \"#utility.yul\":14315:14319   */\n      dup2\n        /* \"#utility.yul\":14311:14331   */\n      sub\n        /* \"#utility.yul\":14306:14308   */\n      0x60\n        /* \"#utility.yul\":14295:14304   */\n      dup4\n        /* \"#utility.yul\":14291:14309   */\n      add\n        /* \"#utility.yul\":14284:14332   */\n      mstore\n        /* \"#utility.yul\":14349:14425   */\n      tag_522\n        /* \"#utility.yul\":14420:14424   */\n      dup2\n        /* \"#utility.yul\":14411:14417   */\n      dup5\n        /* \"#utility.yul\":14349:14425   */\n      tag_355\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14341:14425   */\n      swap1\n      pop\n        /* \"#utility.yul\":13792:14432   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14438:14579   */\n    tag_356:\n        /* \"#utility.yul\":14494:14499   */\n      0x00\n        /* \"#utility.yul\":14525:14531   */\n      dup2\n        /* \"#utility.yul\":14519:14532   */\n      mload\n        /* \"#utility.yul\":14510:14532   */\n      swap1\n      pop\n        /* \"#utility.yul\":14541:14573   */\n      tag_524\n        /* \"#utility.yul\":14567:14572   */\n      dup2\n        /* \"#utility.yul\":14541:14573   */\n      tag_320\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14438:14579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14585:14934   */\n    tag_277:\n        /* \"#utility.yul\":14654:14660   */\n      0x00\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14691:14700   */\n      dup3\n        /* \"#utility.yul\":14682:14689   */\n      dup5\n        /* \"#utility.yul\":14678:14701   */\n      sub\n        /* \"#utility.yul\":14674:14706   */\n      slt\n        /* \"#utility.yul\":14671:14790   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":14709:14788   */\n      tag_527\n      tag_317\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14671:14790   */\n    tag_526:\n        /* \"#utility.yul\":14829:14830   */\n      0x00\n        /* \"#utility.yul\":14854:14917   */\n      tag_528\n        /* \"#utility.yul\":14909:14916   */\n      dup5\n        /* \"#utility.yul\":14900:14906   */\n      dup3\n        /* \"#utility.yul\":14889:14898   */\n      dup6\n        /* \"#utility.yul\":14885:14907   */\n      add\n        /* \"#utility.yul\":14854:14917   */\n      tag_356\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14844:14917   */\n      swap2\n      pop\n        /* \"#utility.yul\":14800:14927   */\n      pop\n        /* \"#utility.yul\":14585:14934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14940:15134   */\n    tag_289:\n        /* \"#utility.yul\":14980:14984   */\n      0x00\n        /* \"#utility.yul\":15000:15020   */\n      tag_530\n        /* \"#utility.yul\":15018:15019   */\n      dup3\n        /* \"#utility.yul\":15000:15020   */\n      tag_329\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14995:15020   */\n      swap2\n      pop\n        /* \"#utility.yul\":15034:15054   */\n      tag_531\n        /* \"#utility.yul\":15052:15053   */\n      dup4\n        /* \"#utility.yul\":15034:15054   */\n      tag_329\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15029:15054   */\n      swap3\n      pop\n        /* \"#utility.yul\":15078:15079   */\n      dup3\n        /* \"#utility.yul\":15075:15076   */\n      dup3\n        /* \"#utility.yul\":15071:15080   */\n      sub\n        /* \"#utility.yul\":15063:15080   */\n      swap1\n      pop\n        /* \"#utility.yul\":15102:15103   */\n      dup2\n        /* \"#utility.yul\":15096:15100   */\n      dup2\n        /* \"#utility.yul\":15093:15104   */\n      gt\n        /* \"#utility.yul\":15090:15127   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":15107:15125   */\n      tag_533\n      tag_352\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15090:15127   */\n    tag_532:\n        /* \"#utility.yul\":14940:15134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15140:15331   */\n    tag_292:\n        /* \"#utility.yul\":15180:15183   */\n      0x00\n        /* \"#utility.yul\":15199:15219   */\n      tag_535\n        /* \"#utility.yul\":15217:15218   */\n      dup3\n        /* \"#utility.yul\":15199:15219   */\n      tag_329\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15194:15219   */\n      swap2\n      pop\n        /* \"#utility.yul\":15233:15253   */\n      tag_536\n        /* \"#utility.yul\":15251:15252   */\n      dup4\n        /* \"#utility.yul\":15233:15253   */\n      tag_329\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":15228:15253   */\n      swap3\n      pop\n        /* \"#utility.yul\":15276:15277   */\n      dup3\n        /* \"#utility.yul\":15273:15274   */\n      dup3\n        /* \"#utility.yul\":15269:15278   */\n      add\n        /* \"#utility.yul\":15262:15278   */\n      swap1\n      pop\n        /* \"#utility.yul\":15297:15300   */\n      dup1\n        /* \"#utility.yul\":15294:15295   */\n      dup3\n        /* \"#utility.yul\":15291:15301   */\n      gt\n        /* \"#utility.yul\":15288:15324   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":15304:15322   */\n      tag_538\n      tag_352\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15288:15324   */\n    tag_537:\n        /* \"#utility.yul\":15140:15331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15337:15570   */\n    tag_299:\n        /* \"#utility.yul\":15376:15379   */\n      0x00\n        /* \"#utility.yul\":15399:15423   */\n      tag_540\n        /* \"#utility.yul\":15417:15422   */\n      dup3\n        /* \"#utility.yul\":15399:15423   */\n      tag_329\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15390:15423   */\n      swap2\n      pop\n        /* \"#utility.yul\":15445:15511   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15438:15443   */\n      dup3\n        /* \"#utility.yul\":15435:15512   */\n      sub\n        /* \"#utility.yul\":15432:15535   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":15515:15533   */\n      tag_542\n      tag_352\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15432:15535   */\n    tag_541:\n        /* \"#utility.yul\":15562:15563   */\n      0x01\n        /* \"#utility.yul\":15555:15560   */\n      dup3\n        /* \"#utility.yul\":15551:15564   */\n      add\n        /* \"#utility.yul\":15544:15564   */\n      swap1\n      pop\n        /* \"#utility.yul\":15337:15570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15576:15756   */\n    tag_312:\n        /* \"#utility.yul\":15624:15701   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15621:15622   */\n      0x00\n        /* \"#utility.yul\":15614:15702   */\n      mstore\n        /* \"#utility.yul\":15721:15725   */\n      0x32\n        /* \"#utility.yul\":15718:15719   */\n      0x04\n        /* \"#utility.yul\":15711:15726   */\n      mstore\n        /* \"#utility.yul\":15745:15749   */\n      0x24\n        /* \"#utility.yul\":15742:15743   */\n      0x00\n        /* \"#utility.yul\":15735:15750   */\n      revert\n    stop\n    data_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f\n\n    auxdata: 0xa2646970667358221220a80fa850639cb4d726bd9806d85cd7d3dd28d33e0c9ebdfc996e1df6af30ae8864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_1386": {
									"entryPoint": 169,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9007:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:12",
														"type": ""
													}
												],
												"src": "2677:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:12"
															},
															"nodeType": "YulIf",
															"src": "2813:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:12",
														"type": ""
													}
												],
												"src": "2760:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:12",
														"type": ""
													}
												],
												"src": "2888:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:878:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:32:12"
															},
															"nodeType": "YulIf",
															"src": "3178:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3307:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3357:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3342:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3336:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3407:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3409:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3409:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3409:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3387:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3376:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3376:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3373:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3504:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3560:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3571:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3556:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3556:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3580:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3514:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3504:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3608:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3623:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3647:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3643:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3637:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3627:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3709:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3711:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3711:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3689:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3678:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3675:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3806:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3862:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3858:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3858:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3882:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3816:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3806:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3910:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3925:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3929:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3955:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3965:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3955:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3122:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3133:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3153:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3161:6:12",
														"type": ""
													}
												],
												"src": "3037:1009:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4111:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4122:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4094:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4104:6:12",
														"type": ""
													}
												],
												"src": "4052:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4512:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4526:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:26:12"
															},
															"nodeType": "YulIf",
															"src": "4482:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:38:12"
															},
															"nodeType": "YulIf",
															"src": "4573:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4378:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4387:6:12",
														"type": ""
													}
												],
												"src": "4343:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4733:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4741:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4777:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4710:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4718:4:12",
														"type": ""
													}
												],
												"src": "4669:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4870:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4843:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4853:6:12",
														"type": ""
													}
												],
												"src": "4816:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4978:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4943:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4959:8:12",
														"type": ""
													}
												],
												"src": "4915:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5065:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5072:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5084:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5097:6:12",
														"type": ""
													}
												],
												"src": "5028:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5469:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5455:3:12",
														"type": ""
													}
												],
												"src": "5427:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5543:9:12",
														"type": ""
													}
												],
												"src": "5493:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5698:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5705:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5674:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5684:3:12",
														"type": ""
													}
												],
												"src": "5641:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5775:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5781:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5789:7:12",
														"type": ""
													}
												],
												"src": "5722:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6056:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6063:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6042:3:12",
														"type": ""
													}
												],
												"src": "5997:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6115:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6121:6:12",
														"type": ""
													}
												],
												"src": "6076:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6388:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6353:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6355:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6335:2:12",
																"statements": []
															},
															"src": "6331:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6309:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6316:3:12",
														"type": ""
													}
												],
												"src": "6271:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6542:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6568:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6869:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6871:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "6847:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:11:12"
															},
															"nodeType": "YulIf",
															"src": "6553:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6518:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6525:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6530:10:12",
														"type": ""
													}
												],
												"src": "6463:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7085:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7050:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7056:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7066:8:12",
														"type": ""
													}
												],
												"src": "7012:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7186:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7163:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7169:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7179:6:12",
														"type": ""
													}
												],
												"src": "7135:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7523:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7371:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7377:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7385:4:12",
														"type": ""
													}
												],
												"src": "7309:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7701:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7848:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:30:12"
															},
															"nodeType": "YulIf",
															"src": "7814:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8073:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8084:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8097:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8148:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8345:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8422:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8463:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8323:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8325:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8304:3:12",
																					"statements": []
																				},
																				"src": "8300:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8544:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8521:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8141:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8776:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8827:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8845:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8817:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8768:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "8111:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7690:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7696:3:12",
														"type": ""
													}
												],
												"src": "7609:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002f3b38038062002f3b83398181016040528101906200003791906200027c565b826008908162000048919062000557565b5081600990816200005a919062000557565b5061271060068190555062000074620000a960201b60201c565b60058190555080600081905550674563918244f4000060018190555061b3b0600381905550436002819055505050506200063e565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011782620000cc565b810181811067ffffffffffffffff82111715620001395762000138620000dd565b5b80604052505050565b60006200014e620000ae565b90506200015c82826200010c565b919050565b600067ffffffffffffffff8211156200017f576200017e620000dd565b5b6200018a82620000cc565b9050602081019050919050565b60005b83811015620001b75780820151818401526020810190506200019a565b60008484015250505050565b6000620001da620001d48462000161565b62000142565b905082815260208101848484011115620001f957620001f8620000c7565b5b6200020684828562000197565b509392505050565b600082601f830112620002265762000225620000c2565b5b815162000238848260208601620001c3565b91505092915050565b6000819050919050565b620002568162000241565b81146200026257600080fd5b50565b60008151905062000276816200024b565b92915050565b600080600060608486031215620002985762000297620000b8565b5b600084015167ffffffffffffffff811115620002b957620002b8620000bd565b5b620002c7868287016200020e565b935050602084015167ffffffffffffffff811115620002eb57620002ea620000bd565b5b620002f9868287016200020e565b92505060406200030c8682870162000265565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036957607f821691505b6020821081036200037f576200037e62000321565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003e97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003aa565b620003f58683620003aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000438620004326200042c8462000241565b6200040d565b62000241565b9050919050565b6000819050919050565b620004548362000417565b6200046c62000463826200043f565b848454620003b7565b825550505050565b600090565b6200048362000474565b6200049081848462000449565b505050565b5b81811015620004b857620004ac60008262000479565b60018101905062000496565b5050565b601f8211156200050757620004d18162000385565b620004dc846200039a565b81016020851015620004ec578190505b62000504620004fb856200039a565b83018262000495565b50505b505050565b600082821c905092915050565b60006200052c600019846008026200050c565b1980831691505092915050565b600062000547838362000519565b9150826002028217905092915050565b620005628262000316565b67ffffffffffffffff8111156200057e576200057d620000dd565b5b6200058a825462000350565b62000597828285620004bc565b600060209050601f831160018114620005cf5760008415620005ba578287015190505b620005c6858262000539565b86555062000636565b601f198416620005df8662000385565b60005b828110156200060957848901518255600182019150602085019450602081019050620005e2565b8683101562000629578489015162000625601f89168262000519565b8355505b6001600288020188555050505b505050505050565b6128ed806200064e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806395d89b41116100b8578063d5abeb011161007c578063d5abeb0114610372578063d993226b14610390578063db3ad22c146103c0578063e29301f9146103de578063e985e9c51461040e578063eff0730d1461043e57610137565b806395d89b41146102bc578063a22cb465146102da578063b88d4fde146102f6578063b8ba600714610312578063c87b56dd1461034257610137565b806323b872dd116100ff57806323b872dd146101f457806342842e0e146102105780634be3403c1461022c5780636352211e1461025c57806370a082311461028c57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806318160ddd146101d6575b600080fd5b61015660048036038101906101519190611f94565b61046e565b6040516101639190611fdc565b60405180910390f35b610174610550565b6040516101819190612087565b60405180910390f35b6101a4600480360381019061019f91906120df565b6105e2565b6040516101b1919061214d565b60405180910390f35b6101d460048036038101906101cf9190612194565b61065e565b005b6101de610762565b6040516101eb91906121e3565b60405180910390f35b61020e600480360381019061020991906121fe565b610779565b005b61022a600480360381019061022591906121fe565b610789565b005b610246600480360381019061024191906120df565b6107a9565b60405161025391906121e3565b60405180910390f35b610276600480360381019061027191906120df565b61081a565b604051610283919061214d565b60405180910390f35b6102a660048036038101906102a19190612251565b610830565b6040516102b391906121e3565b60405180910390f35b6102c46108ff565b6040516102d19190612087565b60405180910390f35b6102f460048036038101906102ef91906122aa565b610991565b005b610310600480360381019061030b919061241f565b610b08565b005b61032c60048036038101906103279190612251565b610b80565b60405161033991906121e3565b60405180910390f35b61035c600480360381019061035791906120df565b610d7c565b6040516103699190612087565b60405180910390f35b61037a610e1a565b60405161038791906121e3565b60405180910390f35b6103aa60048036038101906103a591906120df565b610e31565b6040516103b791906121e3565b60405180910390f35b6103c8610e95565b6040516103d591906121e3565b60405180910390f35b6103f860048036038101906103f391906120df565b610e9f565b60405161040591906121e3565b60405180910390f35b610428600480360381019061042391906124a2565b610f01565b6040516104359190611fdc565b60405180910390f35b61045860048036038101906104539190612194565b610f95565b60405161046591906121e3565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061053957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610549575061054882610ff0565b5b9050919050565b60606008805461055f90612511565b80601f016020809104026020016040519081016040528092919081815260200182805461058b90612511565b80156105d85780601f106105ad576101008083540402835291602001916105d8565b820191906000526020600020905b8154815290600101906020018083116105bb57829003601f168201915b5050505050905090565b60006105ed8261105a565b610623576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106698261081a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d0576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106ef6110a8565b73ffffffffffffffffffffffffffffffffffffffff16146107525761071b816107166110a8565b610f01565b610751576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61075d8383836110b0565b505050565b600061076c611162565b6007546005540303905090565b610784838383611167565b505050565b6107a483838360405180602001604052806000815250610b08565b505050565b60006002548210156107bb5760025491505b60006107e9760a70c3c40a64e6c51999090b65f67d924000000000000060015461190390919063ffffffff16565b905060006107f684610e31565b9050600061080d828461191990919063ffffffff16565b9050809350505050919050565b60006108258261192f565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610897576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606009805461090e90612511565b80601f016020809104026020016040519081016040528092919081815260200182805461093a90612511565b80156109875780601f1061095c57610100808354040283529160200191610987565b820191906000526020600020905b81548152906001019060200180831161096a57829003601f168201915b5050505050905090565b6109996110a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109fd576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600d6000610a0a6110a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610ab76110a8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610afc9190611fdc565b60405180910390a35050565b610b13848484611167565b610b328373ffffffffffffffffffffffffffffffffffffffff16611bba565b15610b7a57610b4384848484611bdd565b610b79576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b600080610be7600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205443611d2d90919063ffffffff16565b90506000610c45600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020546107a9565b90506000610c52436107a9565b90506000610c8e6002610c8086610c728688611d4390919063ffffffff16565b61190390919063ffffffff16565b61191990919063ffffffff16565b90506000610d0a600354610cfc600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028152602001908152602001600020548561190390919063ffffffff16565b61191990919063ffffffff16565b9050610d7081600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003815260200190815260200160002054611d4390919063ffffffff16565b95505050505050919050565b6060610d878261105a565b610dbd576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610dc7611d59565b90506000815103610de75760405180602001604052806000815250610e12565b80610df184611d79565b604051602001610e0292919061257e565b6040516020818303038152906040525b915050919050565b6000610e24611162565b6007546006540303905090565b600080610e63600254610e55670de0b6b3a76400008661190390919063ffffffff16565b61191990919063ffffffff16565b9050610e8a81610e7c838461190390919063ffffffff16565b61190390919063ffffffff16565b905080915050919050565b6000600354905090565b600080610ec983610ebb6000548661190390919063ffffffff16565b611d4390919063ffffffff16565b90506000600a82610eda91906125d1565b03610ee85760019050610ef8565b600a81610ef591906125d1565b90505b80915050919050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081611065611162565b11158015611074575060055482105b80156110a15750600a6000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b82600c600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b600061117282610e9f565b905061117d84610b80565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061123681600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611d2d90919063ffffffff16565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506112ea83610b80565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060038152602001908152602001600020819055506113a381600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611d4390919063ffffffff16565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000208190555060006114598361192f565b90508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114c4576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166114e56110a8565b73ffffffffffffffffffffffffffffffffffffffff16148061151457506115138661150e6110a8565b610f01565b5b8061155957506115226110a8565b73ffffffffffffffffffffffffffffffffffffffff16611541856105e2565b73ffffffffffffffffffffffffffffffffffffffff16145b905080611592576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036115f8576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116058686866001611ed9565b611611600085886110b0565b6001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600a60008681526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001860190506000600a60008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361189057600554821461188f57888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46118fb8686866001611edf565b505050505050565b600081836119119190612631565b905092915050565b600081836119279190612673565b905092915050565b611937611ee5565b600082905080611945611162565b11611b8357600554811015611b82576000600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff16151515158152505090508060400151611b8057600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611a64578092505050611bb5565b5b600115611b7f57818060019003925050600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611b7a578092505050611bb5565b611a65565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611c036110a8565b8786866040518563ffffffff1660e01b8152600401611c2594939291906126f9565b6020604051808303816000875af1925050508015611c6157506040513d601f19601f82011682018060405250810190611c5e919061275a565b60015b611cda573d8060008114611c91576040519150601f19603f3d011682016040523d82523d6000602084013e611c96565b606091505b506000815103611cd2576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60008183611d3b9190612787565b905092915050565b60008183611d5191906127bb565b905092915050565b606060405180608001604052806051815260200161286760519139905090565b606060008203611dc0576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ed4565b600082905060005b60008214611df2578080611ddb906127ef565b915050600a82611deb9190612673565b9150611dc8565b60008167ffffffffffffffff811115611e0e57611e0d6122f4565b5b6040519080825280601f01601f191660200182016040528015611e405781602001600182028036833780820191505090505b5090505b60008514611ecd57600182611e599190612787565b9150600a85611e6891906125d1565b6030611e7491906127bb565b60f81b818381518110611e8a57611e89612837565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611ec69190612673565b9450611e44565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f7181611f3c565b8114611f7c57600080fd5b50565b600081359050611f8e81611f68565b92915050565b600060208284031215611faa57611fa9611f32565b5b6000611fb884828501611f7f565b91505092915050565b60008115159050919050565b611fd681611fc1565b82525050565b6000602082019050611ff16000830184611fcd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612031578082015181840152602081019050612016565b60008484015250505050565b6000601f19601f8301169050919050565b600061205982611ff7565b6120638185612002565b9350612073818560208601612013565b61207c8161203d565b840191505092915050565b600060208201905081810360008301526120a1818461204e565b905092915050565b6000819050919050565b6120bc816120a9565b81146120c757600080fd5b50565b6000813590506120d9816120b3565b92915050565b6000602082840312156120f5576120f4611f32565b5b6000612103848285016120ca565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121378261210c565b9050919050565b6121478161212c565b82525050565b6000602082019050612162600083018461213e565b92915050565b6121718161212c565b811461217c57600080fd5b50565b60008135905061218e81612168565b92915050565b600080604083850312156121ab576121aa611f32565b5b60006121b98582860161217f565b92505060206121ca858286016120ca565b9150509250929050565b6121dd816120a9565b82525050565b60006020820190506121f860008301846121d4565b92915050565b60008060006060848603121561221757612216611f32565b5b60006122258682870161217f565b93505060206122368682870161217f565b9250506040612247868287016120ca565b9150509250925092565b60006020828403121561226757612266611f32565b5b60006122758482850161217f565b91505092915050565b61228781611fc1565b811461229257600080fd5b50565b6000813590506122a48161227e565b92915050565b600080604083850312156122c1576122c0611f32565b5b60006122cf8582860161217f565b92505060206122e085828601612295565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61232c8261203d565b810181811067ffffffffffffffff8211171561234b5761234a6122f4565b5b80604052505050565b600061235e611f28565b905061236a8282612323565b919050565b600067ffffffffffffffff82111561238a576123896122f4565b5b6123938261203d565b9050602081019050919050565b82818337600083830152505050565b60006123c26123bd8461236f565b612354565b9050828152602081018484840111156123de576123dd6122ef565b5b6123e98482856123a0565b509392505050565b600082601f830112612406576124056122ea565b5b81356124168482602086016123af565b91505092915050565b6000806000806080858703121561243957612438611f32565b5b60006124478782880161217f565b94505060206124588782880161217f565b9350506040612469878288016120ca565b925050606085013567ffffffffffffffff81111561248a57612489611f37565b5b612496878288016123f1565b91505092959194509250565b600080604083850312156124b9576124b8611f32565b5b60006124c78582860161217f565b92505060206124d88582860161217f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061252957607f821691505b60208210810361253c5761253b6124e2565b5b50919050565b600081905092915050565b600061255882611ff7565b6125628185612542565b9350612572818560208601612013565b80840191505092915050565b600061258a828561254d565b9150612596828461254d565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006125dc826120a9565b91506125e7836120a9565b9250826125f7576125f66125a2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061263c826120a9565b9150612647836120a9565b9250828202612655816120a9565b9150828204841483151761266c5761266b612602565b5b5092915050565b600061267e826120a9565b9150612689836120a9565b925082612699576126986125a2565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b60006126cb826126a4565b6126d581856126af565b93506126e5818560208601612013565b6126ee8161203d565b840191505092915050565b600060808201905061270e600083018761213e565b61271b602083018661213e565b61272860408301856121d4565b818103606083015261273a81846126c0565b905095945050505050565b60008151905061275481611f68565b92915050565b6000602082840312156127705761276f611f32565b5b600061277e84828501612745565b91505092915050565b6000612792826120a9565b915061279d836120a9565b92508282039050818111156127b5576127b4612602565b5b92915050565b60006127c6826120a9565b91506127d1836120a9565b92508282019050808211156127e9576127e8612602565b5b92915050565b60006127fa826120a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361282c5761282b612602565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2fa2646970667358221220a80fa850639cb4d726bd9806d85cd7d3dd28d33e0c9ebdfc996e1df6af30ae8864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F3B CODESIZE SUB DUP1 PUSH3 0x2F3B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x27C JUMP JUMPDEST DUP3 PUSH1 0x8 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x557 JUMP JUMPDEST POP DUP2 PUSH1 0x9 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x557 JUMP JUMPDEST POP PUSH2 0x2710 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x74 PUSH3 0xA9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH8 0x4563918244F40000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x63E JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x117 DUP3 PUSH3 0xCC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x139 JUMPI PUSH3 0x138 PUSH3 0xDD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14E PUSH3 0xAE JUMP JUMPDEST SWAP1 POP PUSH3 0x15C DUP3 DUP3 PUSH3 0x10C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x17F JUMPI PUSH3 0x17E PUSH3 0xDD JUMP JUMPDEST JUMPDEST PUSH3 0x18A DUP3 PUSH3 0xCC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x19A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DA PUSH3 0x1D4 DUP5 PUSH3 0x161 JUMP JUMPDEST PUSH3 0x142 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1F9 JUMPI PUSH3 0x1F8 PUSH3 0xC7 JUMP JUMPDEST JUMPDEST PUSH3 0x206 DUP5 DUP3 DUP6 PUSH3 0x197 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x226 JUMPI PUSH3 0x225 PUSH3 0xC2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x238 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x256 DUP2 PUSH3 0x241 JUMP JUMPDEST DUP2 EQ PUSH3 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x276 DUP2 PUSH3 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x298 JUMPI PUSH3 0x297 PUSH3 0xB8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2B9 JUMPI PUSH3 0x2B8 PUSH3 0xBD JUMP JUMPDEST JUMPDEST PUSH3 0x2C7 DUP7 DUP3 DUP8 ADD PUSH3 0x20E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2EB JUMPI PUSH3 0x2EA PUSH3 0xBD JUMP JUMPDEST JUMPDEST PUSH3 0x2F9 DUP7 DUP3 DUP8 ADD PUSH3 0x20E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x30C DUP7 DUP3 DUP8 ADD PUSH3 0x265 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x369 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x37F JUMPI PUSH3 0x37E PUSH3 0x321 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3E9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3AA JUMP JUMPDEST PUSH3 0x3F5 DUP7 DUP4 PUSH3 0x3AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x438 PUSH3 0x432 PUSH3 0x42C DUP5 PUSH3 0x241 JUMP JUMPDEST PUSH3 0x40D JUMP JUMPDEST PUSH3 0x241 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x454 DUP4 PUSH3 0x417 JUMP JUMPDEST PUSH3 0x46C PUSH3 0x463 DUP3 PUSH3 0x43F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x483 PUSH3 0x474 JUMP JUMPDEST PUSH3 0x490 DUP2 DUP5 DUP5 PUSH3 0x449 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4B8 JUMPI PUSH3 0x4AC PUSH1 0x0 DUP3 PUSH3 0x479 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x496 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x507 JUMPI PUSH3 0x4D1 DUP2 PUSH3 0x385 JUMP JUMPDEST PUSH3 0x4DC DUP5 PUSH3 0x39A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4EC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x504 PUSH3 0x4FB DUP6 PUSH3 0x39A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x495 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x52C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x50C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x547 DUP4 DUP4 PUSH3 0x519 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x562 DUP3 PUSH3 0x316 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x57E JUMPI PUSH3 0x57D PUSH3 0xDD JUMP JUMPDEST JUMPDEST PUSH3 0x58A DUP3 SLOAD PUSH3 0x350 JUMP JUMPDEST PUSH3 0x597 DUP3 DUP3 DUP6 PUSH3 0x4BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5CF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5BA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5C6 DUP6 DUP3 PUSH3 0x539 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x636 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5DF DUP7 PUSH3 0x385 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x609 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x629 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x625 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x519 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x28ED DUP1 PUSH3 0x64E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x43E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x342 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28C JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1F94 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x539 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x549 JUMPI POP PUSH2 0x548 DUP3 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP3 PUSH2 0x81A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EF PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x752 JUMPI PUSH2 0x71B DUP2 PUSH2 0x716 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x75D DUP4 DUP4 DUP4 PUSH2 0x10B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x784 DUP4 DUP4 DUP4 PUSH2 0x1167 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x2 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7E9 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x1 SLOAD PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F6 DUP5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x80D DUP3 DUP5 PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x825 DUP3 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x90E SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93A SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x987 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x987 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0xA0A PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB7 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFC SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB13 DUP5 DUP5 DUP5 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xB32 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBA JUMP JUMPDEST ISZERO PUSH2 0xB7A JUMPI PUSH2 0xB43 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0xB79 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE7 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x1D2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC45 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC52 NUMBER PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E PUSH1 0x2 PUSH2 0xC80 DUP7 PUSH2 0xC72 DUP7 DUP9 PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0A PUSH1 0x3 SLOAD PUSH2 0xCFC PUSH1 0xE PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD70 DUP2 PUSH1 0xE PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD87 DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC7 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xDE7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE12 JUMP JUMPDEST DUP1 PUSH2 0xDF1 DUP5 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE02 SWAP3 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE63 PUSH1 0x2 SLOAD PUSH2 0xE55 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE8A DUP2 PUSH2 0xE7C DUP4 DUP5 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEC9 DUP4 PUSH2 0xEBB PUSH1 0x0 SLOAD DUP7 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SUB PUSH2 0xEE8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1065 PUSH2 0x1162 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1074 JUMPI POP PUSH1 0x5 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x10A1 JUMPI POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1172 DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH2 0x117D DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1236 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12EA DUP4 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13A3 DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1459 DUP4 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E5 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1514 JUMPI POP PUSH2 0x1513 DUP7 PUSH2 0x150E PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1559 JUMPI POP PUSH2 0x1522 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1541 DUP6 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x1592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1605 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x0 DUP6 DUP9 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1890 JUMPI PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x188F JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x18FB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1911 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1927 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1937 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1945 PUSH2 0x1162 JUMP JUMPDEST GT PUSH2 0x1B83 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1B80 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A64 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1BB5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B7F JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7A JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1C03 PUSH2 0x10A8 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C25 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C61 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5E SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CDA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1CD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x2787 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2867 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1DF2 JUMPI DUP1 DUP1 PUSH2 0x1DDB SWAP1 PUSH2 0x27EF JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0E JUMPI PUSH2 0x1E0D PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1ECD JUMPI PUSH1 0x1 DUP3 PUSH2 0x1E59 SWAP2 SWAP1 PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1E74 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E8A JUMPI PUSH2 0x1E89 PUSH2 0x2837 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E44 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 DUP2 PUSH2 0x1F3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8E DUP2 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD6 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2031 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2063 DUP2 DUP6 PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP PUSH2 0x2073 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x207C DUP2 PUSH2 0x203D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A1 DUP2 DUP5 PUSH2 0x204E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x20A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D9 DUP2 PUSH2 0x20B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP5 DUP3 DUP6 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 PUSH2 0x210C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2147 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2171 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP2 EQ PUSH2 0x217C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218E DUP2 PUSH2 0x2168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AB JUMPI PUSH2 0x21AA PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B9 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CA DUP6 DUP3 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DD DUP2 PUSH2 0x20A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2217 JUMPI PUSH2 0x2216 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2225 DUP7 DUP3 DUP8 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2236 DUP7 DUP3 DUP8 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2247 DUP7 DUP3 DUP8 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2267 JUMPI PUSH2 0x2266 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2275 DUP5 DUP3 DUP6 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2287 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A4 DUP2 PUSH2 0x227E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C1 JUMPI PUSH2 0x22C0 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CF DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x232C DUP3 PUSH2 0x203D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP3 DUP3 PUSH2 0x2323 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x238A JUMPI PUSH2 0x2389 PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2393 DUP3 PUSH2 0x203D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C2 PUSH2 0x23BD DUP5 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x22EF JUMP JUMPDEST JUMPDEST PUSH2 0x23E9 DUP5 DUP3 DUP6 PUSH2 0x23A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2406 JUMPI PUSH2 0x2405 PUSH2 0x22EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2416 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2447 DUP8 DUP3 DUP9 ADD PUSH2 0x217F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2458 DUP8 DUP3 DUP9 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2469 DUP8 DUP3 DUP9 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST PUSH2 0x2496 DUP8 DUP3 DUP9 ADD PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH2 0x24B8 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C7 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D8 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2529 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x24E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2558 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2562 DUP2 DUP6 PUSH2 0x2542 JUMP JUMPDEST SWAP4 POP PUSH2 0x2572 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258A DUP3 DUP6 PUSH2 0x254D JUMP JUMPDEST SWAP2 POP PUSH2 0x2596 DUP3 DUP5 PUSH2 0x254D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25DC DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E7 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25F7 JUMPI PUSH2 0x25F6 PUSH2 0x25A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x263C DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2655 DUP2 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x2602 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2699 JUMPI PUSH2 0x2698 PUSH2 0x25A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CB DUP3 PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x26D5 DUP2 DUP6 PUSH2 0x26AF JUMP JUMPDEST SWAP4 POP PUSH2 0x26E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x26EE DUP2 PUSH2 0x203D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x270E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x213E JUMP JUMPDEST PUSH2 0x271B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x213E JUMP JUMPDEST PUSH2 0x2728 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21D4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x273A DUP2 DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2754 DUP2 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2770 JUMPI PUSH2 0x276F PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277E DUP5 DUP3 DUP6 ADD PUSH2 0x2745 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2792 DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27B5 JUMPI PUSH2 0x27B4 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C6 DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D1 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27E8 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FA DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x282C JUMPI PUSH2 0x282B PUSH2 0x2602 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D654E373753715459457258644D5134684C CALLVALUE BALANCE PUSH3 0x316661 SELFBALANCE PUSH25 0x414B7434515741354E475646755A753978486E2FA264697066 PUSH20 0x58221220A80FA850639CB4D726BD9806D85CD7D3 0xDD 0x28 0xD3 RETURNDATACOPY 0xC SWAP15 0xBD 0xFC SWAP10 PUSH15 0x1DF6AF30AE8864736F6C6343000811 STOP CALLER ",
							"sourceMap": "1033:23843:9:-:0;;;2484:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2574:5;2566;:13;;;;;;:::i;:::-;;2600:7;2590;:17;;;;;;:::i;:::-;;2631:5;2618:10;:18;;;;2663:15;:13;;;:15;;:::i;:::-;2647:13;:31;;;;2698:5;2690;:13;;;;2734:4;2717:14;:21;;;;2766:5;2752:11;:19;;;;2802:12;2782:17;:32;;;;2484:342;;;1033:23843;;4718:92;4774:7;4718:92;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3357:1;3346:9;3342:17;3336:24;3387:18;3379:6;3376:30;3373:117;;;3409:79;;:::i;:::-;3373:117;3514:74;3580:7;3571:6;3560:9;3556:22;3514:74;:::i;:::-;3504:84;;3307:291;3658:2;3647:9;3643:18;3637:25;3689:18;3681:6;3678:30;3675:117;;;3711:79;;:::i;:::-;3675:117;3816:74;3882:7;3873:6;3862:9;3858:22;3816:74;:::i;:::-;3806:84;;3608:292;3939:2;3965:64;4021:7;4012:6;4001:9;3997:22;3965:64;:::i;:::-;3955:74;;3910:129;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;1033:23843:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineStatus_1244": {
									"entryPoint": 2944,
									"id": 1244,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfers_2796": {
									"entryPoint": 7903,
									"id": 2796,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2715": {
									"entryPoint": 4272,
									"id": 2715,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1739": {
									"entryPoint": 7513,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2783": {
									"entryPoint": 7897,
									"id": 2783,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2770": {
									"entryPoint": 7133,
									"id": 2770,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1956": {
									"entryPoint": 4186,
									"id": 1956,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_467": {
									"entryPoint": 4264,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1652": {
									"entryPoint": 6447,
									"id": 1652,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1386": {
									"entryPoint": 4450,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2446": {
									"entryPoint": 4455,
									"id": 2446,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_915": {
									"entryPoint": 7491,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1785": {
									"entryPoint": 1630,
									"id": 1785,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1514": {
									"entryPoint": 2096,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockStatus_1284": {
									"entryPoint": 1961,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@difficult_1315": {
									"entryPoint": 3633,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_960": {
									"entryPoint": 6425,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_1807": {
									"entryPoint": 1506,
									"id": 1807,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1859": {
									"entryPoint": 3841,
									"id": 1859,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 7098,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_1425": {
									"entryPoint": 3610,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mineInfo_1442": {
									"entryPoint": 3989,
									"id": 1442,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_945": {
									"entryPoint": 6403,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1677": {
									"entryPoint": 1360,
									"id": 1677,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1667": {
									"entryPoint": 2074,
									"id": 1667,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1896": {
									"entryPoint": 1929,
									"id": 1896,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1932": {
									"entryPoint": 2824,
									"id": 1932,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1841": {
									"entryPoint": 2449,
									"id": 1841,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_930": {
									"entryPoint": 7469,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1486": {
									"entryPoint": 1134,
									"id": 1486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_726": {
									"entryPoint": 4080,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1687": {
									"entryPoint": 2303,
									"id": 1687,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_565": {
									"entryPoint": 7545,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIDPower_1354": {
									"entryPoint": 3743,
									"id": 1354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1730": {
									"entryPoint": 3452,
									"id": 1730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalPower_1411": {
									"entryPoint": 3733,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1402": {
									"entryPoint": 1890,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1877": {
									"entryPoint": 1913,
									"id": 1877,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15759:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:12",
														"type": ""
													}
												],
												"src": "4890:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:12",
														"type": ""
													}
												],
												"src": "5014:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:12"
															},
															"nodeType": "YulIf",
															"src": "5352:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:12",
														"type": ""
													}
												],
												"src": "5242:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:12"
															},
															"nodeType": "YulIf",
															"src": "5943:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:12",
														"type": ""
													}
												],
												"src": "5867:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:12"
															},
															"nodeType": "YulIf",
															"src": "6252:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:12",
														"type": ""
													}
												],
												"src": "6202:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:12",
														"type": ""
													}
												],
												"src": "6324:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:12"
															},
															"nodeType": "YulIf",
															"src": "6553:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:12",
														"type": ""
													}
												],
												"src": "6463:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:12"
															},
															"nodeType": "YulIf",
															"src": "7525:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:12",
														"type": ""
													}
												],
												"src": "7369:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:12",
														"type": ""
													}
												],
												"src": "7656:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:12"
															},
															"nodeType": "YulIf",
															"src": "7928:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:12",
														"type": ""
													}
												],
												"src": "7791:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:12",
														"type": ""
													}
												],
												"src": "8104:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:12"
															},
															"nodeType": "YulIf",
															"src": "8498:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:12",
														"type": ""
													}
												],
												"src": "8256:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:12"
															},
															"nodeType": "YulIf",
															"src": "8769:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:12",
														"type": ""
													}
												],
												"src": "8698:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:12"
															},
															"nodeType": "YulIf",
															"src": "9178:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:12",
														"type": ""
													}
												],
												"src": "9042:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:12"
															},
															"nodeType": "YulIf",
															"src": "10084:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:12",
														"type": ""
													}
												],
												"src": "9991:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:12"
															},
															"nodeType": "YulIf",
															"src": "10796:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:12"
															},
															"nodeType": "YulIf",
															"src": "10887:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:12",
														"type": ""
													}
												],
												"src": "10657:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:12",
														"type": ""
													}
												],
												"src": "10983:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:12",
														"type": ""
													}
												],
												"src": "11137:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:12",
														"type": ""
													}
												],
												"src": "11533:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12012:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11974:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12194:142:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12204:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12227:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12209:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12209:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12204:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12238:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12261:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12243:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12243:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12238:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12285:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12287:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12287:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12287:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12282:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12275:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12275:9:12"
															},
															"nodeType": "YulIf",
															"src": "12272:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12316:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12325:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12328:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12321:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12316:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12183:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12186:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12192:1:12",
														"type": ""
													}
												],
												"src": "12160:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12370:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12387:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12390:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12380:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12380:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12477:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12477:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12508:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12511:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12501:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12501:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12342:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12576:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12586:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12609:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12591:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12586:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12620:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12643:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12625:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12620:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12654:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12677:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12680:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12658:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12691:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12720:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12702:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12702:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12691:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12909:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12911:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12911:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12911:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12842:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12835:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12835:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12865:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12872:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12881:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12868:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12868:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12862:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12862:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12815:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12815:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:113:12"
															},
															"nodeType": "YulIf",
															"src": "12792:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12559:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12562:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12568:7:12",
														"type": ""
													}
												],
												"src": "12528:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12986:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12996:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13019:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13001:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12996:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13030:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13053:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13035:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13035:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13030:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13077:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13079:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13079:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13079:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13074:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13067:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13067:9:12"
															},
															"nodeType": "YulIf",
															"src": "13064:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13109:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13118:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13121:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13114:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13109:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12975:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12978:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12984:1:12",
														"type": ""
													}
												],
												"src": "12944:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13193:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13204:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13220:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13214:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13214:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13204:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13176:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13186:6:12",
														"type": ""
													}
												],
												"src": "13135:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13334:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13351:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13356:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13344:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13344:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13344:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13372:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13391:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13396:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13387:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13387:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13372:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13306:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13311:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13322:11:12",
														"type": ""
													}
												],
												"src": "13239:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13503:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13513:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13559:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13527:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13517:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13574:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13639:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13644:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13581:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13581:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13574:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13699:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13706:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13695:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13713:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13718:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13660:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13660:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13734:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13745:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13772:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13750:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13750:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13741:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13734:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13484:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13491:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13499:3:12",
														"type": ""
													}
												],
												"src": "13413:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13992:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14002:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14014:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14025:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14010:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14010:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14002:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14083:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14096:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14107:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14092:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14092:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14039:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14039:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14039:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14164:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14177:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14188:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14173:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14173:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14120:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14120:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14120:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14246:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14259:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14270:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14255:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14202:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14202:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14295:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14306:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14291:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14291:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14315:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14321:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14311:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14311:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14284:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14284:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14284:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14341:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14411:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14420:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14349:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14349:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14341:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13940:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13952:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13960:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13968:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13976:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13987:4:12",
														"type": ""
													}
												],
												"src": "13792:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14500:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14510:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14525:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14519:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14519:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14510:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14567:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14541:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14541:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14541:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14478:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14486:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14494:5:12",
														"type": ""
													}
												],
												"src": "14438:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14661:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14707:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14709:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14709:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14709:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14682:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14691:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14678:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14678:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14674:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14674:32:12"
															},
															"nodeType": "YulIf",
															"src": "14671:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14800:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14815:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14829:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14819:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14844:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14889:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14900:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14885:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14885:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14909:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14854:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14854:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14844:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14631:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14642:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14654:6:12",
														"type": ""
													}
												],
												"src": "14585:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14985:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14995:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15018:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15000:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15000:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14995:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15029:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15052:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15034:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15034:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15029:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15063:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15075:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15078:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15071:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15063:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15105:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15107:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15107:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15107:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15096:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15102:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15093:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:11:12"
															},
															"nodeType": "YulIf",
															"src": "15090:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14971:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14974:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14980:4:12",
														"type": ""
													}
												],
												"src": "14940:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15184:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15194:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15217:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15199:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15194:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15228:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15251:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15233:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15233:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15228:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15262:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15273:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15276:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15269:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15269:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15262:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15302:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15304:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15304:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15304:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15294:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15297:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15291:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:10:12"
															},
															"nodeType": "YulIf",
															"src": "15288:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15171:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15174:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15180:3:12",
														"type": ""
													}
												],
												"src": "15140:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15380:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15390:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15417:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15399:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15399:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15390:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15513:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15515:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15515:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15515:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15438:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15445:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15435:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15435:77:12"
															},
															"nodeType": "YulIf",
															"src": "15432:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15544:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15555:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15562:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15551:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15544:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15366:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15376:3:12",
														"type": ""
													}
												],
												"src": "15337:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15604:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15621:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15624:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15614:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15614:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15614:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15718:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15721:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15711:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15711:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15742:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15745:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15735:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15735:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15576:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x43E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x342 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28C JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1F94 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x539 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x549 JUMPI POP PUSH2 0x548 DUP3 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP3 PUSH2 0x81A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6EF PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x752 JUMPI PUSH2 0x71B DUP2 PUSH2 0x716 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x75D DUP4 DUP4 DUP4 PUSH2 0x10B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x784 DUP4 DUP4 DUP4 PUSH2 0x1167 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7A4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x2 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7E9 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x1 SLOAD PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F6 DUP5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x80D DUP3 DUP5 PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x825 DUP3 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x90E SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93A SWAP1 PUSH2 0x2511 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x987 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x987 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x999 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0xA0A PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB7 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFC SWAP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB13 DUP5 DUP5 DUP5 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xB32 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBA JUMP JUMPDEST ISZERO PUSH2 0xB7A JUMPI PUSH2 0xB43 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0xB79 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE7 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x1D2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC45 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC52 NUMBER PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E PUSH1 0x2 PUSH2 0xC80 DUP7 PUSH2 0xC72 DUP7 DUP9 PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0A PUSH1 0x3 SLOAD PUSH2 0xCFC PUSH1 0xE PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD70 DUP2 PUSH1 0xE PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD87 DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC7 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xDE7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE12 JUMP JUMPDEST DUP1 PUSH2 0xDF1 DUP5 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE02 SWAP3 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE63 PUSH1 0x2 SLOAD PUSH2 0xE55 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1919 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE8A DUP2 PUSH2 0xE7C DUP4 DUP5 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEC9 DUP4 PUSH2 0xEBB PUSH1 0x0 SLOAD DUP7 PUSH2 0x1903 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SUB PUSH2 0xEE8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1065 PUSH2 0x1162 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1074 JUMPI POP PUSH1 0x5 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x10A1 JUMPI POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1172 DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH2 0x117D DUP5 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1236 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12EA DUP4 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13A3 DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1459 DUP4 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E5 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1514 JUMPI POP PUSH2 0x1513 DUP7 PUSH2 0x150E PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1559 JUMPI POP PUSH2 0x1522 PUSH2 0x10A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1541 DUP6 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x1592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1605 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x0 DUP6 DUP9 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1890 JUMPI PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x188F JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x18FB DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1EDF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1911 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1927 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1937 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1945 PUSH2 0x1162 JUMP JUMPDEST GT PUSH2 0x1B83 JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1B80 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A64 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1BB5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B7F JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7A JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1A65 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1C03 PUSH2 0x10A8 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C25 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C61 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5E SWAP2 SWAP1 PUSH2 0x275A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CDA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1CD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x2787 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2867 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1DF2 JUMPI DUP1 DUP1 PUSH2 0x1DDB SWAP1 PUSH2 0x27EF JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0E JUMPI PUSH2 0x1E0D PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1ECD JUMPI PUSH1 0x1 DUP3 PUSH2 0x1E59 SWAP2 SWAP1 PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1E74 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E8A JUMPI PUSH2 0x1E89 PUSH2 0x2837 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E44 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F71 DUP2 PUSH2 0x1F3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8E DUP2 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD6 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2031 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2063 DUP2 DUP6 PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP PUSH2 0x2073 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x207C DUP2 PUSH2 0x203D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A1 DUP2 DUP5 PUSH2 0x204E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x20A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x20C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D9 DUP2 PUSH2 0x20B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP5 DUP3 DUP6 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 PUSH2 0x210C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2147 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2171 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP2 EQ PUSH2 0x217C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x218E DUP2 PUSH2 0x2168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AB JUMPI PUSH2 0x21AA PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B9 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CA DUP6 DUP3 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21DD DUP2 PUSH2 0x20A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2217 JUMPI PUSH2 0x2216 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2225 DUP7 DUP3 DUP8 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2236 DUP7 DUP3 DUP8 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2247 DUP7 DUP3 DUP8 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2267 JUMPI PUSH2 0x2266 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2275 DUP5 DUP3 DUP6 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2287 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22A4 DUP2 PUSH2 0x227E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C1 JUMPI PUSH2 0x22C0 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CF DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x232C DUP3 PUSH2 0x203D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x234B JUMPI PUSH2 0x234A PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP3 DUP3 PUSH2 0x2323 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x238A JUMPI PUSH2 0x2389 PUSH2 0x22F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2393 DUP3 PUSH2 0x203D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C2 PUSH2 0x23BD DUP5 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23DE JUMPI PUSH2 0x23DD PUSH2 0x22EF JUMP JUMPDEST JUMPDEST PUSH2 0x23E9 DUP5 DUP3 DUP6 PUSH2 0x23A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2406 JUMPI PUSH2 0x2405 PUSH2 0x22EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2416 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2447 DUP8 DUP3 DUP9 ADD PUSH2 0x217F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2458 DUP8 DUP3 DUP9 ADD PUSH2 0x217F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2469 DUP8 DUP3 DUP9 ADD PUSH2 0x20CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST PUSH2 0x2496 DUP8 DUP3 DUP9 ADD PUSH2 0x23F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH2 0x24B8 PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C7 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D8 DUP6 DUP3 DUP7 ADD PUSH2 0x217F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2529 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x24E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2558 DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2562 DUP2 DUP6 PUSH2 0x2542 JUMP JUMPDEST SWAP4 POP PUSH2 0x2572 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x258A DUP3 DUP6 PUSH2 0x254D JUMP JUMPDEST SWAP2 POP PUSH2 0x2596 DUP3 DUP5 PUSH2 0x254D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25DC DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E7 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25F7 JUMPI PUSH2 0x25F6 PUSH2 0x25A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x263C DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2655 DUP2 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x2602 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2699 JUMPI PUSH2 0x2698 PUSH2 0x25A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CB DUP3 PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x26D5 DUP2 DUP6 PUSH2 0x26AF JUMP JUMPDEST SWAP4 POP PUSH2 0x26E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x26EE DUP2 PUSH2 0x203D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x270E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x213E JUMP JUMPDEST PUSH2 0x271B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x213E JUMP JUMPDEST PUSH2 0x2728 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21D4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x273A DUP2 DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2754 DUP2 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2770 JUMPI PUSH2 0x276F PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277E DUP5 DUP3 DUP6 ADD PUSH2 0x2745 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2792 DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27B5 JUMPI PUSH2 0x27B4 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C6 DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D1 DUP4 PUSH2 0x20A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27E9 JUMPI PUSH2 0x27E8 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FA DUP3 PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x282C JUMPI PUSH2 0x282B PUSH2 0x2602 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D654E373753715459457258644D5134684C CALLVALUE BALANCE PUSH3 0x316661 SELFBALANCE PUSH25 0x414B7434515741354E475646755A753978486E2FA264697066 PUSH20 0x58221220A80FA850639CB4D726BD9806D85CD7D3 0xDD 0x28 0xD3 RETURNDATACOPY 0xC SWAP15 0xBD 0xFC SWAP10 PUSH15 0x1DF6AF30AE8864736F6C6343000811 STOP CALLER ",
							"sourceMap": "1033:23843:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6233:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9349:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10944:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10506:372;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4944:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11809:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12050:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3457:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9157:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6602:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9518:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11220:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12306:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2842:544;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9693:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5421:164;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3878:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5266:145;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4166:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11578:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5602:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6233:305;6335:4;6387:25;6372:40;;;:11;:40;;;;:105;;;;6444:33;6429:48;;;:11;:48;;;;6372:105;:158;;;;6494:36;6518:11;6494:23;:36::i;:::-;6372:158;6352:178;;6233:305;;;:::o;9349:100::-;9403:13;9436:5;9429:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9349:100;:::o;10944:204::-;11012:7;11037:16;11045:7;11037;:16::i;:::-;11032:64;;11062:34;;;;;;;;;;;;;;11032:64;11116:15;:24;11132:7;11116:24;;;;;;;;;;;;;;;;;;;;;11109:31;;10944:204;;;:::o;10506:372::-;10579:13;10595:24;10611:7;10595:15;:24::i;:::-;10579:40;;10640:5;10634:11;;:2;:11;;;10630:48;;10654:24;;;;;;;;;;;;;;10630:48;10711:5;10695:21;;:12;:10;:12::i;:::-;:21;;;10691:139;;10722:37;10739:5;10746:12;:10;:12::i;:::-;10722:16;:37::i;:::-;10718:112;;10783:35;;;;;;;;;;;;;;10718:112;10691:139;10842:28;10851:2;10855:7;10864:5;10842:8;:28::i;:::-;10568:310;10506:372;;:::o;4944:312::-;4997:7;5222:15;:13;:15::i;:::-;5207:12;;5191:13;;:28;:46;5184:53;;4944:312;:::o;11809:170::-;11943:28;11953:4;11959:2;11963:7;11943:9;:28::i;:::-;11809:170;;;:::o;12050:185::-;12188:39;12205:4;12211:2;12215:7;12188:39;;;;;;;;;;;;:16;:39::i;:::-;12050:185;;;:::o;3457:411::-;3530:7;3567:17;;3552:12;:32;3549:95;;;3615:17;;3600:32;;3549:95;3654:19;3676:24;3695:4;3676:14;;:18;;:24;;;;:::i;:::-;3654:46;;3722:22;3747:23;3757:12;3747:9;:23::i;:::-;3722:48;;3786:13;3802:31;3818:14;3802:11;:15;;:31;;;;:::i;:::-;3786:47;;3851:5;3844:12;;;;;3457:411;;;:::o;9157:125::-;9221:7;9248:21;9261:7;9248:12;:21::i;:::-;:26;;;9241:33;;9157:125;;;:::o;6602:206::-;6666:7;6707:1;6690:19;;:5;:19;;;6686:60;;6718:28;;;;;;;;;;;;;;6686:60;6772:12;:19;6785:5;6772:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6764:36;;6757:43;;6602:206;;;:::o;9518:104::-;9574:13;9607:7;9600:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9518:104;:::o;11220:287::-;11331:12;:10;:12::i;:::-;11319:24;;:8;:24;;;11315:54;;11352:17;;;;;;;;;;;;;;11315:54;11427:8;11382:18;:32;11401:12;:10;:12::i;:::-;11382:32;;;;;;;;;;;;;;;:42;11415:8;11382:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;11480:8;11451:48;;11466:12;:10;:12::i;:::-;11451:48;;;11490:8;11451:48;;;;;;:::i;:::-;;;;;;;;11220:287;;:::o;12306:370::-;12473:28;12483:4;12489:2;12493:7;12473:9;:28::i;:::-;12516:15;:2;:13;;;:15::i;:::-;12512:157;;;12537:56;12568:4;12574:2;12578:7;12587:5;12537:30;:56::i;:::-;12533:136;;12617:40;;;;;;;;;;;;;;12533:136;12512:157;12306:370;;;;:::o;2842:544::-;2904:7;2923:18;2944:36;2961:9;:15;2971:4;2961:15;;;;;;;;;;;;;;;:18;2977:1;2961:18;;;;;;;;;;;;2944:12;:16;;:36;;;;:::i;:::-;2923:57;;2991:13;3007:31;3019:9;:15;3029:4;3019:15;;;;;;;;;;;;;;;:18;3035:1;3019:18;;;;;;;;;;;;3007:11;:31::i;:::-;2991:47;;3049:11;3063:25;3075:12;3063:11;:25::i;:::-;3049:39;;3099:18;3120:37;3155:1;3120:30;3139:10;3120:14;3130:3;3120:5;:9;;:14;;;;:::i;:::-;:18;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;3099:58;;3250:15;3268:51;3307:11;;3268:34;3283:9;:15;3293:4;3283:15;;;;;;;;;;;;;;;:18;3299:1;3283:18;;;;;;;;;;;;3268:10;:14;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;3250:69;;3337:34;3360:10;3337:9;:15;3347:4;3337:15;;;;;;;;;;;;;;;:18;3353:1;3337:18;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;3330:41;;;;;;;2842:544;;;:::o;9693:318::-;9766:13;9797:16;9805:7;9797;:16::i;:::-;9792:59;;9822:29;;;;;;;;;;;;;;9792:59;9864:21;9888:10;:8;:10::i;:::-;9864:34;;9941:1;9922:7;9916:21;:26;:87;;;;;;;;;;;;;;;;;9969:7;9978:18;:7;:16;:18::i;:::-;9952:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9916:87;9909:94;;;9693:318;;;:::o;5421:164::-;5464:7;5551:15;:13;:15::i;:::-;5536:12;;5523:10;;:25;:43;5516:50;;5421:164;:::o;3878:271::-;3945:7;3964:19;3984:45;4011:17;;3984:22;4001:4;3984:12;:16;;:22;;;;:::i;:::-;:26;;:45;;;;:::i;:::-;3964:65;;4055:54;4094:14;4055:34;4074:14;4055;:18;;:34;;;;:::i;:::-;:38;;:54;;;;:::i;:::-;4040:69;;4127:14;4120:21;;;3878:271;;;:::o;5266:145::-;5310:7;5381:11;;5374:18;;5266:145;:::o;4166:292::-;4234:7;4263:14;4280:31;4303:7;4280:18;4292:5;;4280:7;:11;;:18;;;;:::i;:::-;:22;;:31;;;;:::i;:::-;4263:48;;4339:1;4333:2;4326:6;:9;;;;:::i;:::-;:14;4323:104;;4365:1;4356:10;;4323:104;;;4413:2;4406:6;:9;;;;:::i;:::-;4397:18;;4323:104;4444:6;4437:13;;;4166:292;;;:::o;11578:164::-;11675:4;11699:18;:25;11718:5;11699:25;;;;;;;;;;;;;;;:35;11725:8;11699:35;;;;;;;;;;;;;;;;;;;;;;;;;11692:42;;11578:164;;;;:::o;5602:171::-;5672:7;5731:9;:15;5741:4;5731:15;;;;;;;;;;;;;;;:23;5747:6;5731:23;;;;;;;;;;;;5724:30;;5602:171;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;12890:174:9:-;12947:4;12990:7;12971:15;:13;:15::i;:::-;:26;;:53;;;;;13011:13;;13001:7;:23;12971:53;:85;;;;;13029:11;:20;13041:7;13029:20;;;;;;;;;;;:27;;;;;;;;;;;;13028:28;12971:85;12964:92;;12890:174;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;21894:196:9:-;22036:2;22009:15;:24;22025:7;22009:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;22074:7;22070:2;22054:28;;22063:5;22054:28;;;;;;;;;;;;21894:196;;;:::o;4718:92::-;4774:7;4718:92;:::o;16122:2528::-;16241:19;16263:21;16276:7;16263:12;:21::i;:::-;16241:43;;16324:16;16335:4;16324:10;:16::i;:::-;16303:9;:15;16313:4;16303:15;;;;;;;;;;;;;;;:18;16319:1;16303:18;;;;;;;;;;;:37;;;;16372:35;16395:11;16372:9;:15;16382:4;16372:15;;;;;;;;;;;;;;;:18;16388:1;16372:18;;;;;;;;;;;;:22;;:35;;;;:::i;:::-;16351:9;:15;16361:4;16351:15;;;;;;;;;;;;;;;:18;16367:1;16351:18;;;;;;;;;;;:56;;;;16439:12;16418:9;:15;16428:4;16418:15;;;;;;;;;;;;;;;:18;16434:1;16418:18;;;;;;;;;;;:33;;;;16481:14;16492:2;16481:10;:14::i;:::-;16462:9;:13;16472:2;16462:13;;;;;;;;;;;;;;;:16;16476:1;16462:16;;;;;;;;;;;:33;;;;16525;16546:11;16525:9;:13;16535:2;16525:13;;;;;;;;;;;;;;;:16;16539:1;16525:16;;;;;;;;;;;;:20;;:33;;;;:::i;:::-;16506:9;:13;16516:2;16506:13;;;;;;;;;;;;;;;:16;16520:1;16506:16;;;;;;;;;;;:52;;;;16588:12;16569:9;:13;16579:2;16569:13;;;;;;;;;;;;;;;:16;16583:1;16569:16;;;;;;;;;;;:31;;;;16635:35;16673:21;16686:7;16673:12;:21::i;:::-;16635:59;;16733:4;16711:26;;:13;:18;;;:26;;;16707:67;;16746:28;;;;;;;;;;;;;;16707:67;16787:22;16829:4;16813:20;;:12;:10;:12::i;:::-;:20;;;:73;;;;16850:36;16867:4;16873:12;:10;:12::i;:::-;16850:16;:36::i;:::-;16813:73;:126;;;;16927:12;:10;:12::i;:::-;16903:36;;:20;16915:7;16903:11;:20::i;:::-;:36;;;16813:126;16787:153;;16958:17;16953:66;;16984:35;;;;;;;;;;;;;;16953:66;17048:1;17034:16;;:2;:16;;;17030:52;;17059:23;;;;;;;;;;;;;;17030:52;17095:43;17117:4;17123:2;17127:7;17136:1;17095:21;:43::i;:::-;17203:35;17220:1;17224:7;17233:4;17203:8;:35::i;:::-;17564:1;17534:12;:18;17547:4;17534:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17608:1;17580:12;:16;17593:2;17580:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17626:31;17660:11;:20;17672:7;17660:20;;;;;;;;;;;17626:54;;17711:2;17695:8;:13;;;:18;;;;;;;;;;;;;;;;;;17761:15;17728:8;:23;;;:49;;;;;;;;;;;;;;;;;;18029:19;18061:1;18051:7;:11;18029:33;;18077:31;18111:11;:24;18123:11;18111:24;;;;;;;;;;;18077:58;;18179:1;18154:27;;:8;:13;;;;;;;;;;;;:27;;;18150:384;;18364:13;;18349:11;:28;18345:174;;18418:4;18402:8;:13;;;:20;;;;;;;;;;;;;;;;;;18471:13;:28;;;18445:8;:23;;;:54;;;;;;;;;;;;;;;;;;18345:174;18150:384;17509:1036;;;18581:7;18577:2;18562:27;;18571:4;18562:27;;;;;;;;;;;;18600:42;18621:4;18627:2;18631:7;18640:1;18600:20;:42::i;:::-;16226:2424;;;16122:2528;;;:::o;3465:96:8:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7984:1111:9:-;8046:21;;:::i;:::-;8080:12;8095:7;8080:22;;8163:4;8144:15;:13;:15::i;:::-;:23;8140:888;;8180:13;;8173:4;:20;8169:859;;;8214:31;8248:11;:17;8260:4;8248:17;;;;;;;;;;;8214:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8289:9;:16;;;8284:729;;8360:1;8334:28;;:9;:14;;;:28;;;8330:101;;8398:9;8391:16;;;;;;8330:101;8733:261;8740:4;8733:261;;;8773:6;;;;;;;;8818:11;:17;8830:4;8818:17;;;;;;;;;;;8806:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8892:1;8866:28;;:9;:14;;;:28;;;8862:109;;8934:9;8927:16;;;;;;8862:109;8733:261;;;8284:729;8195:833;8169:859;8140:888;9056:31;;;;;;;;;;;;;;7984:1111;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;22582:667:9:-;22745:4;22782:2;22766:36;;;22803:12;:10;:12::i;:::-;22817:4;22823:7;22832:5;22766:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;22762:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23017:1;23000:6;:13;:18;22996:235;;23046:40;;;;;;;;;;;;;;22996:235;23189:6;23183:13;23174:6;23170:2;23166:15;23159:38;22762:480;22895:45;;;22885:55;;;:6;:55;;;;22878:62;;;22582:667;;;;;;:::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;10259:185:9:-;10310:13;10336:90;;;;;;;;;;;;;;;;;;;10259:185;:::o;392:703:5:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;23897:159:9:-;;;;;:::o;24715:158::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:180::-;12022:77;12019:1;12012:88;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12160:176;12192:1;12209:20;12227:1;12209:20;:::i;:::-;12204:25;;12243:20;12261:1;12243:20;:::i;:::-;12238:25;;12282:1;12272:35;;12287:18;;:::i;:::-;12272:35;12328:1;12325;12321:9;12316:14;;12160:176;;;;:::o;12342:180::-;12390:77;12387:1;12380:88;12487:4;12484:1;12477:15;12511:4;12508:1;12501:15;12528:410;12568:7;12591:20;12609:1;12591:20;:::i;:::-;12586:25;;12625:20;12643:1;12625:20;:::i;:::-;12620:25;;12680:1;12677;12673:9;12702:30;12720:11;12702:30;:::i;:::-;12691:41;;12881:1;12872:7;12868:15;12865:1;12862:22;12842:1;12835:9;12815:83;12792:139;;12911:18;;:::i;:::-;12792:139;12576:362;12528:410;;;;:::o;12944:185::-;12984:1;13001:20;13019:1;13001:20;:::i;:::-;12996:25;;13035:20;13053:1;13035:20;:::i;:::-;13030:25;;13074:1;13064:35;;13079:18;;:::i;:::-;13064:35;13121:1;13118;13114:9;13109:14;;12944:185;;;;:::o;13135:98::-;13186:6;13220:5;13214:12;13204:22;;13135:98;;;:::o;13239:168::-;13322:11;13356:6;13351:3;13344:19;13396:4;13391:3;13387:14;13372:29;;13239:168;;;;:::o;13413:373::-;13499:3;13527:38;13559:5;13527:38;:::i;:::-;13581:70;13644:6;13639:3;13581:70;:::i;:::-;13574:77;;13660:65;13718:6;13713:3;13706:4;13699:5;13695:16;13660:65;:::i;:::-;13750:29;13772:6;13750:29;:::i;:::-;13745:3;13741:39;13734:46;;13503:283;13413:373;;;;:::o;13792:640::-;13987:4;14025:3;14014:9;14010:19;14002:27;;14039:71;14107:1;14096:9;14092:17;14083:6;14039:71;:::i;:::-;14120:72;14188:2;14177:9;14173:18;14164:6;14120:72;:::i;:::-;14202;14270:2;14259:9;14255:18;14246:6;14202:72;:::i;:::-;14321:9;14315:4;14311:20;14306:2;14295:9;14291:18;14284:48;14349:76;14420:4;14411:6;14349:76;:::i;:::-;14341:84;;13792:640;;;;;;;:::o;14438:141::-;14494:5;14525:6;14519:13;14510:22;;14541:32;14567:5;14541:32;:::i;:::-;14438:141;;;;:::o;14585:349::-;14654:6;14703:2;14691:9;14682:7;14678:23;14674:32;14671:119;;;14709:79;;:::i;:::-;14671:119;14829:1;14854:63;14909:7;14900:6;14889:9;14885:22;14854:63;:::i;:::-;14844:73;;14800:127;14585:349;;;;:::o;14940:194::-;14980:4;15000:20;15018:1;15000:20;:::i;:::-;14995:25;;15034:20;15052:1;15034:20;:::i;:::-;15029:25;;15078:1;15075;15071:9;15063:17;;15102:1;15096:4;15093:11;15090:37;;;15107:18;;:::i;:::-;15090:37;14940:194;;;;:::o;15140:191::-;15180:3;15199:20;15217:1;15199:20;:::i;:::-;15194:25;;15233:20;15251:1;15233:20;:::i;:::-;15228:25;;15276:1;15273;15269:9;15262:16;;15297:3;15294:1;15291:10;15288:36;;;15304:18;;:::i;:::-;15288:36;15140:191;;;;:::o;15337:233::-;15376:3;15399:24;15417:5;15399:24;:::i;:::-;15390:33;;15445:66;15438:5;15435:77;15432:103;;15515:18;;:::i;:::-;15432:103;15562:1;15555:5;15551:13;15544:20;;15337:233;;;:::o;15576:180::-;15624:77;15621:1;15614:88;15721:4;15718:1;15711:15;15745:4;15742:1;15735:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2095400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MineStatus(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "3035",
								"blockStatus(uint256)": "infinite",
								"difficult(uint256)": "infinite",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "4598",
								"mineInfo(address,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenIDPower(uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalPower()": "2503",
								"totalSupply()": "4688",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"PowerTrading(address,uint256)": "infinite",
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2484,
									"end": 2826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2574,
									"end": 2579,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2571,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2566,
									"end": 2579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2600,
									"end": 2607,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2597,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2590,
									"end": 2607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2607,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2631,
									"end": 2636,
									"name": "PUSH",
									"source": 9,
									"value": "2710"
								},
								{
									"begin": 2618,
									"end": 2628,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2618,
									"end": 2636,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2618,
									"end": 2636,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2618,
									"end": 2636,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2618,
									"end": 2636,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2663,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2663,
									"end": 2676,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2663,
									"end": 2676,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2663,
									"end": 2678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2660,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2698,
									"end": 2703,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2690,
									"end": 2695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2734,
									"end": 2738,
									"name": "PUSH",
									"source": 9,
									"value": "4563918244F40000"
								},
								{
									"begin": 2717,
									"end": 2731,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2717,
									"end": 2738,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2738,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2738,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2738,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2766,
									"end": 2771,
									"name": "PUSH",
									"source": 9,
									"value": "B3B0"
								},
								{
									"begin": 2752,
									"end": 2763,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2752,
									"end": 2771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2752,
									"end": 2771,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2752,
									"end": 2771,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2752,
									"end": 2771,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2802,
									"end": 2814,
									"name": "NUMBER",
									"source": 9
								},
								{
									"begin": 2782,
									"end": 2799,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2782,
									"end": 2814,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2782,
									"end": 2814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2782,
									"end": 2814,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2782,
									"end": 2814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2484,
									"end": 2826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 4810,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 4718,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4774,
									"end": 4781,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4718,
									"end": 4810,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3336,
									"end": 3360,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3409,
									"end": 3488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3580,
									"end": 3587,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3577,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3560,
									"end": 3569,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3556,
									"end": 3578,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3514,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3307,
									"end": 3598,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3647,
									"end": 3656,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3637,
									"end": 3662,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3707,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3678,
									"end": 3708,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3711,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3882,
									"end": 3889,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3862,
									"end": 3871,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3816,
									"end": 3890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3608,
									"end": 3900,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3939,
									"end": 3941,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3965,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3910,
									"end": 4039,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 24876,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a80fa850639cb4d726bd9806d85cd7d3dd28d33e0c9ebdfc996e1df6af30ae8864736f6c63430008110033",
									".code": [
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "D993226B"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "DB3AD22C"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "E29301F9"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "EFF0730D"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "B8BA6007"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "4BE3403C"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 24876,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6233,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6233,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6233,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9349,
											"end": 9449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 9349,
											"end": 9449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 10944,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10944,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 10944,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 10506,
											"end": 10878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10506,
											"end": 10878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4944,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4944,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 11809,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 11809,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 12050,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 12050,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3457,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3457,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3457,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9157,
											"end": 9282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9157,
											"end": 9282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9157,
											"end": 9282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 6602,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 6602,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 6602,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9518,
											"end": 9622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 9518,
											"end": 9622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 11220,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 11220,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12306,
											"end": 12676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12306,
											"end": 12676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2842,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2842,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2842,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9693,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9693,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 9693,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5421,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5421,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3878,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3878,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3878,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5266,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5266,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4166,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4166,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4166,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 11578,
											"end": 11742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 11578,
											"end": 11742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11578,
											"end": 11742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 5602,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5602,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5602,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6335,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6412,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6412,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6477,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6429,
											"end": 6440,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6429,
											"end": 6477,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6372,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6494,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6372,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9416,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9436,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9429,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9429,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11012,
											"end": 11019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11045,
											"end": 11052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 11037,
											"end": 11053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11053,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11037,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11032,
											"end": 11096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "PUSH",
											"source": 9,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11096,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11096,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11032,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11131,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11116,
											"end": 11140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 11148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 10611,
											"end": 10618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10595,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10619,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 10595,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10640,
											"end": 10645,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10634,
											"end": 10645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10634,
											"end": 10645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10634,
											"end": 10636,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10634,
											"end": 10645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10634,
											"end": 10645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10634,
											"end": 10645,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10630,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10630,
											"end": 10678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "PUSH",
											"source": 9,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10654,
											"end": 10678,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10630,
											"end": 10678,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10630,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10716,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 10695,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10707,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 10695,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 10691,
											"end": 10830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10722,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10739,
											"end": 10744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10746,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 10746,
											"end": 10758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10758,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10746,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10722,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 10722,
											"end": 10759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10722,
											"end": 10759,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10722,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 10718,
											"end": 10830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "PUSH",
											"source": 9,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10818,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10830,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 10718,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10830,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 10691,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10855,
											"end": 10862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10864,
											"end": 10869,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10842,
											"end": 10870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10870,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 10842,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5222,
											"end": 5237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5222,
											"end": 5237,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5222,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5219,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5207,
											"end": 5219,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5219,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5237,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 5256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 11953,
											"end": 11957,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 11961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 11943,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11971,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 11943,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12211,
											"end": 12213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12188,
											"end": 12227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 12188,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3584,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3632,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3615,
											"end": 3632,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3644,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "PUSH",
											"source": 9,
											"value": "A70C3C40A64E6C51999090B65F67D9240000000000000"
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3757,
											"end": 3769,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3747,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3770,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3747,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3818,
											"end": 3832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3802,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 9261,
											"end": 9268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 9248,
											"end": 9269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9269,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 9248,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9241,
											"end": 9274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9241,
											"end": 9274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6686,
											"end": 6746,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "PUSH",
											"source": 9,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6746,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6746,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6686,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6784,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6790,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6791,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6764,
											"end": 6800,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6764,
											"end": 6800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9600,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 9600,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9600,
											"end": 9614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 11331,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11331,
											"end": 11343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11331,
											"end": 11343,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 11331,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11343,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11315,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 11315,
											"end": 11369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11369,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11315,
											"end": 11369,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 11315,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11427,
											"end": 11435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11401,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11401,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11413,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11401,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11414,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11466,
											"end": 11478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11466,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11466,
											"end": 11478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11466,
											"end": 11478,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11466,
											"end": 11478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11490,
											"end": 11498,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11451,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11499,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12473,
											"end": 12501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12483,
											"end": 12487,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12489,
											"end": 12491,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12493,
											"end": 12500,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12473,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 12473,
											"end": 12501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12473,
											"end": 12501,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12473,
											"end": 12501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12516,
											"end": 12518,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12529,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12516,
											"end": 12529,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12516,
											"end": 12531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12531,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12516,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12512,
											"end": 12669,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12568,
											"end": 12572,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12576,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12585,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12592,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12537,
											"end": 12593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12593,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12537,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12533,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12533,
											"end": 12669,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12657,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12533,
											"end": 12669,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12533,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12669,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12512,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2975,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2944,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 2980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3033,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3007,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3038,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3007,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3063,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3088,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3063,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3139,
											"end": 3149,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3130,
											"end": 3133,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3120,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3120,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3120,
											"end": 3154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3307,
											"end": 3318,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3307,
											"end": 3318,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3297,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3268,
											"end": 3282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3268,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3268,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3337,
											"end": 3359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 3386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9779,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9797,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9805,
											"end": 9812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9797,
											"end": 9813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9813,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9797,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9792,
											"end": 9851,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "PUSH",
											"source": 9,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9851,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9851,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9792,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9888,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9888,
											"end": 9898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9888,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 9937,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 9942,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 9976,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 9978,
											"end": 9985,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 9978,
											"end": 9996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 9952,
											"end": 9997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 9997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9916,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 10003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 10003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 10003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 10011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5464,
											"end": 5471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5551,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5551,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5536,
											"end": 5548,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5548,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5516,
											"end": 5566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5516,
											"end": 5566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4001,
											"end": 4005,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3984,
											"end": 4000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3984,
											"end": 4010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3984,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 4029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4094,
											"end": 4108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4069,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4055,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4055,
											"end": 4093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4055,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4040,
											"end": 4109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4040,
											"end": 4109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5317,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5392,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5381,
											"end": 5392,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4292,
											"end": 4297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4292,
											"end": 4297,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4280,
											"end": 4302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4280,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4335,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4326,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4340,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4406,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4323,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11675,
											"end": 11679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11723,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11699,
											"end": 11734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11692,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11692,
											"end": 11734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5740,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5746,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12890,
											"end": 13064,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 12890,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12971,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 12971,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13024,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12971,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13040,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13041,
											"end": 13048,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 13029,
											"end": 13056,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13056,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12971,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12964,
											"end": 13056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12964,
											"end": 13056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 13064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21894,
											"end": 22090,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 21894,
											"end": 22090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22024,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22025,
											"end": 22032,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22074,
											"end": 22081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22070,
											"end": 22072,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22063,
											"end": 22068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22082,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4810,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4718,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 4781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 18650,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 16122,
											"end": 18650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 16276,
											"end": 16283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16263,
											"end": 16275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 16263,
											"end": 16284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 16263,
											"end": 16284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16241,
											"end": 16284,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 16335,
											"end": 16339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16324,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 16324,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16312,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16313,
											"end": 16317,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16303,
											"end": 16318,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16319,
											"end": 16320,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16340,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 16395,
											"end": 16406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16381,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16382,
											"end": 16386,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16389,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16390,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 16372,
											"end": 16394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 16372,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16360,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16361,
											"end": 16365,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16351,
											"end": 16366,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16367,
											"end": 16368,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16351,
											"end": 16369,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16407,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16439,
											"end": 16451,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16427,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16428,
											"end": 16432,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16418,
											"end": 16433,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16435,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16451,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16418,
											"end": 16451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16481,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 16492,
											"end": 16494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16481,
											"end": 16491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 16481,
											"end": 16495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16481,
											"end": 16495,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 16481,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16471,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16472,
											"end": 16474,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16462,
											"end": 16475,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16476,
											"end": 16477,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16462,
											"end": 16478,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16495,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16462,
											"end": 16495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 16546,
											"end": 16557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16534,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16525,
											"end": 16538,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16539,
											"end": 16540,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16541,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 16525,
											"end": 16545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 16525,
											"end": 16558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16515,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16516,
											"end": 16518,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16519,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16520,
											"end": 16521,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16522,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16558,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16506,
											"end": 16558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16588,
											"end": 16600,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16578,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16579,
											"end": 16581,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16582,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16583,
											"end": 16584,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16585,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16600,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16635,
											"end": 16670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 16686,
											"end": 16693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16673,
											"end": 16685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 16673,
											"end": 16694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 16673,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16635,
											"end": 16694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16635,
											"end": 16694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16733,
											"end": 16737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16737,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16711,
											"end": 16737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16737,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16711,
											"end": 16737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16737,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16707,
											"end": 16774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 16707,
											"end": 16774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "PUSH",
											"source": 9,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16774,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16707,
											"end": 16774,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 16707,
											"end": 16774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16833,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16813,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 16813,
											"end": 16825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16825,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16813,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16850,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16867,
											"end": 16871,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16873,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 16873,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 16873,
											"end": 16885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16873,
											"end": 16885,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 16873,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16850,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 16850,
											"end": 16886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16850,
											"end": 16886,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16850,
											"end": 16886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 16813,
											"end": 16886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16927,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16927,
											"end": 16937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 16927,
											"end": 16939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16927,
											"end": 16939,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16927,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16903,
											"end": 16939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 16915,
											"end": 16922,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16903,
											"end": 16923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16903,
											"end": 16939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16939,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 16813,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16958,
											"end": 16975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16953,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 16953,
											"end": 17019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "PUSH",
											"source": 9,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16984,
											"end": 17019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16953,
											"end": 17019,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 16953,
											"end": 17019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17050,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17050,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17050,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17050,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17030,
											"end": 17082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 17030,
											"end": 17082,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "PUSH",
											"source": 9,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17059,
											"end": 17082,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17030,
											"end": 17082,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 17030,
											"end": 17082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17095,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 17117,
											"end": 17121,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17123,
											"end": 17125,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17127,
											"end": 17134,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17136,
											"end": 17137,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17095,
											"end": 17116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 17095,
											"end": 17138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17095,
											"end": 17138,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 17095,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17203,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 17220,
											"end": 17221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17224,
											"end": 17231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17233,
											"end": 17237,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17203,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 17203,
											"end": 17238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17203,
											"end": 17238,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 17203,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17564,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17534,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17551,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 17560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17534,
											"end": 17565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17608,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17580,
											"end": 17592,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17593,
											"end": 17595,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17580,
											"end": 17596,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17580,
											"end": 17604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17580,
											"end": 17609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17626,
											"end": 17657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17660,
											"end": 17671,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17672,
											"end": 17679,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17626,
											"end": 17680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17626,
											"end": 17680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17711,
											"end": 17713,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17695,
											"end": 17708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17761,
											"end": 17776,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17728,
											"end": 17751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17751,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17728,
											"end": 17777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18061,
											"end": 18062,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18051,
											"end": 18058,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18051,
											"end": 18062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18077,
											"end": 18108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18111,
											"end": 18122,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18123,
											"end": 18134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18111,
											"end": 18135,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18077,
											"end": 18135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18077,
											"end": 18135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18179,
											"end": 18180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18154,
											"end": 18167,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18181,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18150,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 18150,
											"end": 18534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18364,
											"end": 18377,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 18364,
											"end": 18377,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18349,
											"end": 18360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18349,
											"end": 18377,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18345,
											"end": 18519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 18345,
											"end": 18519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18418,
											"end": 18422,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18402,
											"end": 18415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18402,
											"end": 18422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18471,
											"end": 18499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18445,
											"end": 18468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18468,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18445,
											"end": 18499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18345,
											"end": 18519,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 18345,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18150,
											"end": 18534,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 18150,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 18545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 18545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 18545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18581,
											"end": 18588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18577,
											"end": 18579,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18571,
											"end": 18575,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18562,
											"end": 18589,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 18600,
											"end": 18642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 18621,
											"end": 18625,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18627,
											"end": 18629,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18631,
											"end": 18638,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18640,
											"end": 18641,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18600,
											"end": 18620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 18600,
											"end": 18642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18600,
											"end": 18642,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 18600,
											"end": 18642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 18650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 18650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8046,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 8046,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8067,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8046,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8080,
											"end": 8092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8144,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8144,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8159,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8144,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8167,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8140,
											"end": 9028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8193,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8180,
											"end": 8193,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8173,
											"end": 8193,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 9028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8169,
											"end": 9028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8259,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8305,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8284,
											"end": 9013,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8362,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8334,
											"end": 8362,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8348,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8362,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8334,
											"end": 8362,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8362,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8330,
											"end": 8431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8398,
											"end": 8407,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8431,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8330,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8744,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8829,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8866,
											"end": 8894,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8866,
											"end": 8894,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8866,
											"end": 8880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8894,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8866,
											"end": 8894,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8894,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 8862,
											"end": 8971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8934,
											"end": 8943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 8971,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 8862,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8733,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 9013,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8284,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 9028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 9028,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8169,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 9028,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8140,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "PUSH",
											"source": 9,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9087,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 9095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 9095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 22749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22782,
											"end": 22784,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22766,
											"end": 22802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22802,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 22803,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 22803,
											"end": 22813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 22803,
											"end": 22815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22803,
											"end": 22815,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 22803,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22817,
											"end": 22821,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22830,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 22832,
											"end": 22837,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 22766,
											"end": 22838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 22766,
											"end": 22838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 22766,
											"end": 22838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23000,
											"end": 23006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23000,
											"end": 23013,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23000,
											"end": 23018,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22996,
											"end": 23231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 22996,
											"end": 23231,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23086,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22996,
											"end": 23231,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 22996,
											"end": 23231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23189,
											"end": 23195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23183,
											"end": 23196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23174,
											"end": 23180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23170,
											"end": 23172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23166,
											"end": 23181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23159,
											"end": 23197,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 22762,
											"end": 23242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22895,
											"end": 22940,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 22895,
											"end": 22940,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 22895,
											"end": 22940,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22885,
											"end": 22940,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 22878,
											"end": 22940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22878,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22878,
											"end": 22940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22582,
											"end": 23249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10259,
											"end": 10444,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 10259,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10323,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH data",
											"source": 9,
											"value": "D8CC7CBF95B52AFA2322FAC553D3C4E20F5096FB87DA64785A945DE91007C7B2"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10444,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 915,
											"end": 925,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24715,
											"end": 24873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "260"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12148,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12209,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12243,
											"end": 12263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12238,
											"end": 12263,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12238,
											"end": 12263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12287,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12328,
											"end": 12329,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12325,
											"end": 12326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12330,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12522,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12342,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12390,
											"end": 12467,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12380,
											"end": 12468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12487,
											"end": 12491,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12484,
											"end": 12485,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12477,
											"end": 12492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12511,
											"end": 12515,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12508,
											"end": 12509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12501,
											"end": 12516,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 12609,
											"end": 12610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12591,
											"end": 12611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12586,
											"end": 12611,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12586,
											"end": 12611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 12643,
											"end": 12644,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12625,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12645,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12673,
											"end": 12682,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 12720,
											"end": 12731,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 12702,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12732,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12881,
											"end": 12882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12879,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12868,
											"end": 12883,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12865,
											"end": 12866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12862,
											"end": 12884,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12842,
											"end": 12843,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12815,
											"end": 12898,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12911,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12576,
											"end": 12938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12528,
											"end": 12938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12984,
											"end": 12985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 13019,
											"end": 13020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 13001,
											"end": 13021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13021,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 13053,
											"end": 13054,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 13035,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13055,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 13035,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13055,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13074,
											"end": 13075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 13064,
											"end": 13099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 13079,
											"end": 13097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13099,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 13064,
											"end": 13099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13121,
											"end": 13122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13114,
											"end": 13123,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13109,
											"end": 13123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13109,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 13129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13233,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13135,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13186,
											"end": 13192,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13226,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13233,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13322,
											"end": 13333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13351,
											"end": 13354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13363,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13400,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13391,
											"end": 13394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13387,
											"end": 13401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13401,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13499,
											"end": 13502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13527,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13559,
											"end": 13564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13527,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13527,
											"end": 13565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13527,
											"end": 13565,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13527,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 13644,
											"end": 13650,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13639,
											"end": 13642,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 13581,
											"end": 13651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13651,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 13581,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13574,
											"end": 13651,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13574,
											"end": 13651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 13718,
											"end": 13724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13713,
											"end": 13716,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13706,
											"end": 13710,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13699,
											"end": 13704,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13695,
											"end": 13711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 13660,
											"end": 13725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13725,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 13660,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13772,
											"end": 13778,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 13750,
											"end": 13779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13750,
											"end": 13779,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13750,
											"end": 13779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13745,
											"end": 13748,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13741,
											"end": 13780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13503,
											"end": 13786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13987,
											"end": 13991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14025,
											"end": 14028,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 14014,
											"end": 14023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14010,
											"end": 14029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14002,
											"end": 14029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14002,
											"end": 14029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 14107,
											"end": 14108,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14083,
											"end": 14089,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 14039,
											"end": 14110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 14039,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 14188,
											"end": 14190,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14177,
											"end": 14186,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14173,
											"end": 14191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14164,
											"end": 14170,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 14120,
											"end": 14192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14192,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 14120,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14259,
											"end": 14268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14255,
											"end": 14273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14246,
											"end": 14252,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 14202,
											"end": 14274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14274,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 14202,
											"end": 14274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14321,
											"end": 14330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14311,
											"end": 14331,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14306,
											"end": 14308,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14295,
											"end": 14304,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14291,
											"end": 14309,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14284,
											"end": 14332,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14420,
											"end": 14424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14411,
											"end": 14417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 14349,
											"end": 14425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14425,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14349,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 14432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14494,
											"end": 14499,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14525,
											"end": 14531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14532,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14510,
											"end": 14532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14510,
											"end": 14532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 14567,
											"end": 14572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 14541,
											"end": 14573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14573,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 14541,
											"end": 14573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14654,
											"end": 14660,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14691,
											"end": 14700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14682,
											"end": 14689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14674,
											"end": 14706,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14790,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14671,
											"end": 14790,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14709,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14709,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14709,
											"end": 14788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14709,
											"end": 14788,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14709,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14671,
											"end": 14790,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14671,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14829,
											"end": 14830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14854,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14909,
											"end": 14916,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14900,
											"end": 14906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14889,
											"end": 14898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14885,
											"end": 14907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14854,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 14854,
											"end": 14917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14854,
											"end": 14917,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14854,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14844,
											"end": 14917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14844,
											"end": 14917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14800,
											"end": 14927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14585,
											"end": 14934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14980,
											"end": 14984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15000,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15018,
											"end": 15019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15000,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 15000,
											"end": 15020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15000,
											"end": 15020,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 15000,
											"end": 15020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14995,
											"end": 15020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14995,
											"end": 15020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 15052,
											"end": 15053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 15034,
											"end": 15054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15054,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 15034,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15078,
											"end": 15079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15075,
											"end": 15076,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15071,
											"end": 15080,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15063,
											"end": 15080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15063,
											"end": 15080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15102,
											"end": 15103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15096,
											"end": 15100,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15093,
											"end": 15104,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15090,
											"end": 15127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15107,
											"end": 15125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15127,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15090,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 15134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15180,
											"end": 15183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15199,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 15217,
											"end": 15218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15199,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 15199,
											"end": 15219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15199,
											"end": 15219,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 15199,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15194,
											"end": 15219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15194,
											"end": 15219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15233,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 15251,
											"end": 15252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15233,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 15233,
											"end": 15253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15233,
											"end": 15253,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 15233,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15228,
											"end": 15253,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15228,
											"end": 15253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15276,
											"end": 15277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15269,
											"end": 15278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15262,
											"end": 15278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15262,
											"end": 15278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15297,
											"end": 15300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15294,
											"end": 15295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15301,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 15288,
											"end": 15324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15304,
											"end": 15322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15324,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 15288,
											"end": 15324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15570,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 15337,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15376,
											"end": 15379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15399,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 15417,
											"end": 15422,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 15399,
											"end": 15423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15423,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 15399,
											"end": 15423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15390,
											"end": 15423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15390,
											"end": 15423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15445,
											"end": 15511,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15438,
											"end": 15443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15435,
											"end": 15512,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 15432,
											"end": 15535,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 15515,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15515,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 15533,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 15515,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15535,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 15432,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15562,
											"end": 15563,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15555,
											"end": 15560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15551,
											"end": 15564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15544,
											"end": 15564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15544,
											"end": 15564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15756,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 15576,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15701,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15621,
											"end": 15622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15614,
											"end": 15702,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15721,
											"end": 15725,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15711,
											"end": 15726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15735,
											"end": 15750,
											"name": "REVERT",
											"source": 12
										}
									],
									".data": {
										"D8CC7CBF95B52AFA2322FAC553D3C4E20F5096FB87DA64785A945DE91007C7B2": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"difficult(uint256)": "d993226b",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mineInfo(address,uint256)": "eff0730d",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIDPower(uint256)": "e29301f9",
							"tokenURI(uint256)": "c87b56dd",
							"totalPower()": "db3ad22c",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"mineInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC721A/ERC721A.sol\":{\"keccak256\":\"0xac038ff6140a1b37678c234deeceb714e0aacbe6056b23b19a9e2ba88bc26b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f306b04a51732446499f50b1de6f642731c3b1363061b8d9d6c3e53ef3285b5\",\"dweb:/ipfs/QmNMHVy98Grjq7rYtK72SxGihtQ8sWwHLoYvZGNkTWQnS8\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]},\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0xe88392f4f78b9db01c57d1fe13580e95e19db8365d84dccd26809ef1adf1601e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c9b47dae487533f25e7ba4a846a9cabfe2a0463f201db52caf29c74771cced\",\"dweb:/ipfs/QmWcZXDCmsog7secieFQL8ma1EP87SPcwBYxLyac9p478E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1081,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_salt",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1083,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_TokenperBlock",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1085,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1087,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_totalPower",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1089,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_Powersold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1091,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1093,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1095,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1097,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 1099,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 1104,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)2852_storage)"
							},
							{
								"astId": 1109,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(AddressData)2861_storage)"
							},
							{
								"astId": 1113,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1119,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1126,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)2861_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)2861_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)2852_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)2852_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)2861_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 2854,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2856,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2858,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2860,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)2852_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 2847,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2849,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2851,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"mine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"blockStatus(uint256)": "4be3403c",
							"difficult(uint256)": "d993226b",
							"tokenIDPower(uint256)": "e29301f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/IDCF/mineInterface.sol\":\"mine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0xe88392f4f78b9db01c57d1fe13580e95e19db8365d84dccd26809ef1adf1601e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c9b47dae487533f25e7ba4a846a9cabfe2a0463f201db52caf29c74771cced\",\"dweb:/ipfs/QmWcZXDCmsog7secieFQL8ma1EP87SPcwBYxLyac9p478E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 740,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								739
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 115,
									"src": "3267:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 115,
									"src": "3834:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:0"
									},
									"scope": 115,
									"src": "4209:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:0"
									},
									"scope": 115,
									"src": "4429:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:0"
									},
									"scope": 115,
									"src": "4657:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4497:0",
							"usedErrors": []
						}
					],
					"src": "108:4640:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								739
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 455,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 455,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															249
														],
														"referencedDeclaration": 249,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 455,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 455,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 261,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 455,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 317,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 455,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 329,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															371
														],
														"referencedDeclaration": 371,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 455,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 349,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													356,
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 369,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 455,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															388,
															423
														],
														"referencedDeclaration": 423,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 386,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 455,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 402,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 401,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 421,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 455,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 435,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 446,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 445,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 443,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 434,
															"id": 437,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 455,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 462,
												"id": 465,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 477,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 477,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"id": 503,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 511,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 557,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 534,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"id": 535,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 544,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 545,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 542,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 537,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 493,
												"id": 563,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 703,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 572,
															"id": 577,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 591,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 572,
												"id": 604,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 703,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 629,
														"indexExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"indexExpression": {
															"hexValue": "31",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 667,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"id": 654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"initializationExpression": {
													"assignments": [
														640
													],
													"declarations": [
														{
															"constant": false,
															"id": 640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 668,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 680,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 703,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 698,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 700,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 703,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							727
						],
						"IERC165": [
							739
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 740,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "754:7:6"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								739
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$739",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 724,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 727,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 732,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 739,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 740,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 742,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 772,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															755
														],
														"declarations": [
															{
																"constant": false,
																"id": 755,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 772,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 754,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 761,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 767,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 753,
															"id": 766,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 769,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 770,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 753,
														"id": 771,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1051,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 800,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 787,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 793,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 785,
															"id": 792,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 796,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 798,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 785,
														"id": 799,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1051,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 842,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 821,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 820,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 842,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 827,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 825,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 828,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 829,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 831,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 837,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 836,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 839,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 813,
														"id": 841,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1051,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 870,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 863,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 855,
															"id": 862,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 855,
														"id": 869,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1051,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 898,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 883,
															"id": 890,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 883,
														"id": 897,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1051,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 909,
												"id": 913,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1051,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 928,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1051,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1051,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 958,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1051,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 973,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1051,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5084:106:8",
										"statements": [
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 988,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5126:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 989,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "5131:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 991,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 987,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 995,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "5172:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 986,
														"id": 997,
														"nodeType": "Return",
														"src": "5161:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4981:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5000:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5019:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:8"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5075:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:8"
									},
									"scope": 1051,
									"src": "4959:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5799:105:8",
										"statements": [
											{
												"id": 1023,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1013,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "5841:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1016,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "5848:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1012,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "5882:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1020,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "5886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1011,
														"id": 1022,
														"nodeType": "Return",
														"src": "5875:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5715:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5734:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:8"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:8"
									},
									"scope": 1051,
									"src": "5674:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "6675:105:8",
										"statements": [
											{
												"id": 1048,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "6717:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1041,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "6724:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1037,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "6758:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6762:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1036,
														"id": 1047,
														"nodeType": "Return",
														"src": "6751:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6572:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6591:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6610:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:8"
									},
									"scope": 1051,
									"src": "6550:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "482:6300:8",
							"usedErrors": []
						}
					],
					"src": "107:6676:8"
				},
				"id": 8
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							455
						],
						"Context": [
							477
						],
						"ERC165": [
							727
						],
						"ERC721A": [
							2797
						],
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2868
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"SafeMath": [
							1051
						],
						"Strings": [
							703
						],
						"mine": [
							2900
						]
					},
					"id": 2798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:9"
						},
						{
							"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 2869,
							"src": "115:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "minerpunk/IDCF/mineInterface.sol",
							"file": "../IDCF/mineInterface.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 2901,
							"src": "141:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 134,
							"src": "178:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 456,
							"src": "246:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 478,
							"src": "299:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 704,
							"src": "352:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1060,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 728,
							"src": "405:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2798,
							"sourceUnit": 1052,
							"src": "471:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1063,
										"name": "Context",
										"nameLocations": [
											"1053:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "1053:7:9"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "1053:7:9"
								},
								{
									"baseName": {
										"id": 1065,
										"name": "ERC165",
										"nameLocations": [
											"1062:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1062:6:9"
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "1062:6:9"
								},
								{
									"baseName": {
										"id": 1067,
										"name": "IERC721A",
										"nameLocations": [
											"1070:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2868,
										"src": "1070:8:9"
									},
									"id": 1068,
									"nodeType": "InheritanceSpecifier",
									"src": "1070:8:9"
								},
								{
									"baseName": {
										"id": 1069,
										"name": "mine",
										"nameLocations": [
											"1079:4:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2900,
										"src": "1079:4:9"
									},
									"id": 1070,
									"nodeType": "InheritanceSpecifier",
									"src": "1079:4:9"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "532:499:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2797,
							"linearizedBaseContracts": [
								2797,
								2900,
								2868,
								160,
								115,
								727,
								739,
								477
							],
							"name": "ERC721A",
							"nameLocation": "1042:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1073,
									"libraryName": {
										"id": 1071,
										"name": "SafeMath",
										"nameLocations": [
											"1097:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "1097:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1091:24:9",
									"typeName": {
										"id": 1072,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1110:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1076,
									"libraryName": {
										"id": 1074,
										"name": "Address",
										"nameLocations": [
											"1127:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "1127:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1121:26:9",
									"typeName": {
										"id": 1075,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1139:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1079,
									"libraryName": {
										"id": 1077,
										"name": "Strings",
										"nameLocations": [
											"1159:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1159:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1153:26:9",
									"typeName": {
										"id": 1078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1081,
									"mutability": "mutable",
									"name": "_salt",
									"nameLocation": "1204:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1187:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1187:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1083,
									"mutability": "mutable",
									"name": "_TokenperBlock",
									"nameLocation": "1235:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1218:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1218:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1085,
									"mutability": "mutable",
									"name": "_startBlockNumber",
									"nameLocation": "1275:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1258:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1258:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1087,
									"mutability": "mutable",
									"name": "_totalPower",
									"nameLocation": "1318:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1301:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1086,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1301:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1089,
									"mutability": "mutable",
									"name": "_Powersold",
									"nameLocation": "1355:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1338:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1088,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1338:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1091,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "1443:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1426:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1090,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1426:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1093,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "1484:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1467:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1092,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1467:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1095,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "1557:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1540:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1094,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1097,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1618:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1603:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1096,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1603:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1099,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1668:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1653:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1098,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1653:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1104,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1902:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1858:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 1103,
										"keyType": {
											"id": 1100,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1866:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1858:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 1102,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1101,
												"name": "TokenOwnership",
												"nameLocations": [
													"1877:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2852,
												"src": "1877:14:9"
											},
											"referencedDeclaration": 2852,
											"src": "1877:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1109,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "2008:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "1968:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 1108,
										"keyType": {
											"id": 1105,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1976:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1968:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 1107,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1106,
												"name": "AddressData",
												"nameLocations": [
													"1987:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2861,
												"src": "1987:11:9"
											},
											"referencedDeclaration": 2861,
											"src": "1987:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$2861_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1113,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2115:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "2079:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1112,
										"keyType": {
											"id": 1110,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2087:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2079:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2098:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2241:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "2188:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1118,
										"keyType": {
											"id": 1114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2196:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2188:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1117,
											"keyType": {
												"id": 1115,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2215:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2207:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1116,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2226:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2268:122:9",
										"text": "[user][1] = last_block\n[user][2] = accumulation_power   \n[user][3] = accumulation_DCF    "
									},
									"id": 1126,
									"mutability": "mutable",
									"name": "_mineInfo",
									"nameLocation": "2454:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2797,
									"src": "2399:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1125,
										"keyType": {
											"id": 1121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2407:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2399:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1124,
											"keyType": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2426:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2418:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2437:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "2555:271:9",
										"statements": [
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1135,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2566:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1136,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "2574:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2566:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "2566:13:9"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1139,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2590:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1140,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "2600:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2590:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "2590:17:9"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1143,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2618:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2631:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2618:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "2618:18:9"
											},
											{
												"expression": {
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "2647:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1148,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2663:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2663:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2647:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "2647:31:9"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "_salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "2690:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "salt_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2698:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2690:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2690:13:9"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "_TokenperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "2717:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35653138",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2734:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"value": "5e18"
													},
													"src": "2717:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "2717:21:9"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1160,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2752:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3436303030",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2766:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_46000_by_1",
															"typeString": "int_const 46000"
														},
														"value": "46000"
													},
													"src": "2752:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2752:19:9"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1164,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2782:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1165,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2802:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2808:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2802:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2782:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2782:32:9"
											}
										]
									},
									"id": 1170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2510:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2496:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2531:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2517:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2517:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "salt_",
												"nameLocation": "2548:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2540:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:59:9"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:0:9"
									},
									"scope": 2797,
									"src": "2484:342:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2878
									],
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "2912:474:9",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "2931:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "2923:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2923:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1183,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "2961:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1185,
																"indexExpression": {
																	"id": 1184,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "2971:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2961:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1187,
															"indexExpression": {
																"hexValue": "31",
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2977:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2961:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1180,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2944:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2950:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2944:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2957:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "2944:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2923:57:9"
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "2999:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "2991:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1193,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3019:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1195,
																"indexExpression": {
																	"id": 1194,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "3029:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3019:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1197,
															"indexExpression": {
																"hexValue": "31",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3035:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3019:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "3007:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:47:9"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "3057:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "3049:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3049:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1203,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3075:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3081:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3075:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "3063:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3049:39:9"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "mined_area",
														"nameLocation": "3107:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "3099:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3099:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3155:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1214,
																	"name": "difference",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3139:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1211,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "3130:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1209,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "3120:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3126:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 915,
																		"src": "3120:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3120:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3135:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3120:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3120:30:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3151:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3120:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3120:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3099:58:9"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "3255:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "3250:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1220,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3250:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"arguments": [
														{
															"id": 1231,
															"name": "_totalPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3307:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1224,
																			"name": "_mineInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "3283:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1226,
																		"indexExpression": {
																			"id": 1225,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "3293:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3283:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1228,
																	"indexExpression": {
																		"hexValue": "32",
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3299:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3283:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1222,
																	"name": "mined_area",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "3268:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3279:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3268:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3268:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3303:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3268:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3250:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "3360:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1234,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3337:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1236,
																"indexExpression": {
																	"id": 1235,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "3347:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3337:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1238,
															"indexExpression": {
																"hexValue": "33",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3353:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3337:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3356:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "3337:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3337:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1242,
												"nodeType": "Return",
												"src": "3330:41:9"
											}
										]
									},
									"functionSelector": "b8ba6007",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "2851:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2887:8:9"
									},
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2870:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2862:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:14:9"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2904:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:9:9"
									},
									"scope": 2797,
									"src": "2842:544:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2885
									],
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "3538:330:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "_BlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "3552:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1253,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3567:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3552:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "3549:95:9",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "3585:59:9",
													"statements": [
														{
															"expression": {
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1255,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "3600:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1256,
																	"name": "_startBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "3615:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3600:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "3600:32:9"
														}
													]
												}
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "DCFperBlock",
														"nameLocation": "3662:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3654:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3654:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653534",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3695:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															},
															"value": "1e54"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															}
														],
														"expression": {
															"id": 1263,
															"name": "_TokenperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3676:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3691:3:9",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "3676:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3654:46:9"
											},
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "3730:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3722:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3722:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"id": 1271,
															"name": "_BlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "3757:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1270,
														"name": "difficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "3747:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3722:48:9"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "DugUP",
														"nameLocation": "3794:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3786:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"arguments": [
														{
															"id": 1278,
															"name": "BlockDifficult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3818:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1276,
															"name": "DCFperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3802:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3814:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3802:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3786:47:9"
											},
											{
												"expression": {
													"id": 1281,
													"name": "DugUP",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1275,
													"src": "3851:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1282,
												"nodeType": "Return",
												"src": "3844:12:9"
											}
										]
									},
									"functionSelector": "4be3403c",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "3466:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3512:8:9"
									},
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "3487:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3479:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:22:9"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3530:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3530:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:9:9"
									},
									"scope": 2797,
									"src": "3457:411:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2899
									],
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "3953:196:9",
										"statements": [
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "3969:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1314,
														"src": "3964:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1292,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3964:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"arguments": [
														{
															"id": 1299,
															"name": "_startBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4011:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4001:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1294,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "3984:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3997:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3984:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3984:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4007:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3984:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3984:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3964:65:9"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "BlockDifficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4040:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1308,
																"name": "BlockDifficult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "4094:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1305,
																		"name": "BlockDifficult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "4074:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1303,
																		"name": "BlockDifficult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "4055:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4070:3:9",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 945,
																	"src": "4055:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4055:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4090:3:9",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 945,
															"src": "4055:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4055:54:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4040:69:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "4040:69:9"
											},
											{
												"expression": {
													"id": 1312,
													"name": "BlockDifficult",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "4127:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1313,
												"nodeType": "Return",
												"src": "4120:21:9"
											}
										]
									},
									"functionSelector": "d993226b",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "difficult",
									"nameLocation": "3887:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3927:8:9"
									},
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "3902:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3897:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3896:19:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3945:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:9:9"
									},
									"scope": 2797,
									"src": "3878:271:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2892
									],
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "4242:216:9",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "_power",
														"nameLocation": "4271:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "4263:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4263:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"arguments": [
														{
															"id": 1330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "4303:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1327,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "4292:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1325,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "4280:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4288:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "4280:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4280:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4299:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "4280:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4280:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4263:48:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1333,
															"name": "_power",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "4326:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3130",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4333:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "4326:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4339:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4326:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "4382:45:9",
													"statements": [
														{
															"expression": {
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1343,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4397:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1344,
																		"name": "_power",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "4406:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4413:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "4406:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4397:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "4397:18:9"
														}
													]
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "4323:104:9",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "4341:37:9",
													"statements": [
														{
															"expression": {
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1338,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "4356:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "4356:10:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1351,
													"name": "_power",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1324,
													"src": "4444:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1322,
												"id": 1352,
												"nodeType": "Return",
												"src": "4437:13:9"
											}
										]
									},
									"functionSelector": "e29301f9",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "4175:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4217:8:9"
									},
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4197:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "4189:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:9"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "4234:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4233:9:9"
									},
									"scope": 2797,
									"src": "4166:292:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "4534:72:9",
										"statements": [
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1361,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "4545:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1364,
															"indexExpression": {
																"id": 1362,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "4555:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4545:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1365,
														"indexExpression": {
															"hexValue": "32",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4561:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4545:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1372,
																"name": "_PowerUnit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "4587:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1366,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "4564:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1368,
																	"indexExpression": {
																		"id": 1367,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "4574:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4564:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1370,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4580:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4564:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4583:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "4564:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4564:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4545:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "4545:53:9"
											}
										]
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "PowerTrading",
									"nameLocation": "4479:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4501:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4493:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_PowerUnit",
												"nameLocation": "4514:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4506:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4506:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:33:9"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4534:0:9"
									},
									"scope": 2797,
									"src": "4470:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "4783:27:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4801:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1382,
												"id": 1384,
												"nodeType": "Return",
												"src": "4794:8:9"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "4629:83:9",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4727:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4740:2:9"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "4774:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:9:9"
									},
									"scope": 2797,
									"src": "4718:92:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2867
									],
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "5006:250:9",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "5159:90:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "5191:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1394,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "5207:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5191:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1396,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "5222:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5222:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5191:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1392,
														"id": 1399,
														"nodeType": "Return",
														"src": "5184:53:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "4818:120:9",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4953:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1389,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4979:8:9"
									},
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4964:2:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "4997:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4996:9:9"
									},
									"scope": 2797,
									"src": "4944:312:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "5319:92:9",
										"statements": [
											{
												"id": 1409,
												"nodeType": "UncheckedBlock",
												"src": "5337:67:9",
												"statements": [
													{
														"expression": {
															"id": 1407,
															"name": "_totalPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "5381:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1406,
														"id": 1408,
														"nodeType": "Return",
														"src": "5374:18:9"
													}
												]
											}
										]
									},
									"functionSelector": "db3ad22c",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPower",
									"nameLocation": "5275:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5285:2:9"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "5310:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5310:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:9:9"
									},
									"scope": 2797,
									"src": "5266:145:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "5473:112:9",
										"statements": [
											{
												"id": 1423,
												"nodeType": "UncheckedBlock",
												"src": "5491:87:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1416,
																	"name": "_maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "5523:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1417,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "5536:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5523:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1419,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "5551:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5551:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5523:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1415,
														"id": 1422,
														"nodeType": "Return",
														"src": "5516:50:9"
													}
												]
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "5430:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5439:2:9"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5464:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5463:9:9"
									},
									"scope": 2797,
									"src": "5421:164:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "5681:92:9",
										"statements": [
											{
												"id": 1440,
												"nodeType": "UncheckedBlock",
												"src": "5699:67:9",
												"statements": [
													{
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1434,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "5731:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1436,
																"indexExpression": {
																	"id": 1435,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "5741:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5731:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1438,
															"indexExpression": {
																"id": 1437,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "5747:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5731:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1433,
														"id": 1439,
														"nodeType": "Return",
														"src": "5724:30:9"
													}
												]
											}
										]
									},
									"functionSelector": "eff0730d",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineInfo",
									"nameLocation": "5611:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5628:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "5620:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "5642:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "5634:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5634:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5619:30:9"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "5672:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5672:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:9:9"
									},
									"scope": 2797,
									"src": "5602:171:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "5934:227:9",
										"statements": [
											{
												"id": 1453,
												"nodeType": "UncheckedBlock",
												"src": "6079:75:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "6111:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1449,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "6127:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6127:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6111:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1447,
														"id": 1452,
														"nodeType": "Return",
														"src": "6104:38:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "5793:79:9",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5887:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5899:2:9"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "5925:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5924:9:9"
									},
									"scope": 2797,
									"src": "5878:283:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										726,
										738
									],
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "6341:197:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "6372:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1468,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "6392:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1467,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6387:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6387:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6401:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6387:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6372:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1472,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "6429:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1474,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "6449:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1473,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6444:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6444:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6466:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6444:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6429:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6372:105:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1481,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "6518:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1479,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "6494:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2797_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6500:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "6494:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6494:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6372:158:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1484,
												"nodeType": "Return",
												"src": "6352:178:9"
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "6169:58:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6242:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1462,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1460,
												"name": "ERC165",
												"nameLocations": [
													"6309:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 727,
												"src": "6309:6:9"
											},
											{
												"id": 1461,
												"name": "IERC165",
												"nameLocations": [
													"6317:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "6317:7:9"
											}
										],
										"src": "6300:25:9"
									},
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6267:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6260:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1457,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6260:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6259:20:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6335:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6335:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6334:6:9"
									},
									"scope": 2797,
									"src": "6233:305:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "6675:133:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "6690:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6699:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1496,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6699:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6699:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6690:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "6686:60:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1501,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "6718:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6718:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1503,
													"nodeType": "RevertStatement",
													"src": "6711:35:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1507,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "6772:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1509,
																"indexExpression": {
																	"id": 1508,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "6785:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6772:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6792:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2854,
															"src": "6772:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6764:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6764:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6764:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1512,
												"nodeType": "Return",
												"src": "6757:43:9"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "6546:50:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6611:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6648:8:9"
									},
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6629:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6621:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:15:9"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "6666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:9"
									},
									"scope": 2797,
									"src": "6602:206:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "6960:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1524,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "6986:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1526,
																"indexExpression": {
																	"id": 1525,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "6999:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6986:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7006:12:9",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2856,
															"src": "6986:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6978:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6978:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6978:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1521,
												"id": 1529,
												"nodeType": "Return",
												"src": "6971:48:9"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "6816:68:9",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6899:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6921:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6913:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6912:15:9"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6951:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6951:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6950:9:9"
									},
									"scope": 2797,
									"src": "6890:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "7195:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1541,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7221:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1543,
																"indexExpression": {
																	"id": 1542,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "7234:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7221:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7241:12:9",
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2858,
															"src": "7221:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7213:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7213:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7213:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1546,
												"nodeType": "Return",
												"src": "7206:48:9"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "7035:84:9",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7134:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7156:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "7148:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7147:15:9"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "7186:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7186:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7185:9:9"
									},
									"scope": 2797,
									"src": "7125:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "7443:49:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1556,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "7461:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 1558,
														"indexExpression": {
															"id": 1557,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "7474:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7461:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$2861_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7481:3:9",
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2860,
													"src": "7461:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1560,
												"nodeType": "Return",
												"src": "7454:30:9"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "7270:104:9",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7389:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7405:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "7397:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7397:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:15:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "7435:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1553,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7435:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:8:9"
									},
									"scope": 2797,
									"src": "7380:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "7734:48:9",
										"statements": [
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1570,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "7745:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 1572,
															"indexExpression": {
																"id": 1571,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "7758:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7745:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7765:3:9",
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2860,
														"src": "7745:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1574,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "7771:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7745:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "7745:29:9"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "7501:174:9",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7690:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7706:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7698:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7698:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7720:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7713:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1566,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7713:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7697:27:9"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7734:0:9"
									},
									"scope": 2797,
									"src": "7681:101:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "8069:1026:9",
										"statements": [
											{
												"assignments": [
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8088:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1651,
														"src": "8080:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8080:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"id": 1589,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1581,
													"src": "8095:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8080:22:9"
											},
											{
												"id": 1647,
												"nodeType": "UncheckedBlock",
												"src": "8115:924:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1591,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "8144:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8144:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1593,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "8163:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8144:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "IfStatement",
														"src": "8140:888:9",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1595,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "8173:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1596,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "8180:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8173:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1645,
															"nodeType": "IfStatement",
															"src": "8169:859:9",
															"trueBody": {
																"id": 1644,
																"nodeType": "Block",
																"src": "8195:833:9",
																"statements": [
																	{
																		"assignments": [
																			1600
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1600,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "8236:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1644,
																				"src": "8214:31:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1599,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1598,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"8214:14:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2852,
																						"src": "8214:14:9"
																					},
																					"referencedDeclaration": 2852,
																					"src": "8214:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1604,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1601,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "8248:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 1603,
																			"indexExpression": {
																				"id": 1602,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "8260:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8248:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8214:51:9"
																	},
																	{
																		"condition": {
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "8288:17:9",
																			"subExpression": {
																				"expression": {
																					"id": 1605,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1600,
																					"src": "8289:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8299:6:9",
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2851,
																				"src": "8289:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1643,
																		"nodeType": "IfStatement",
																		"src": "8284:729:9",
																		"trueBody": {
																			"id": 1642,
																			"nodeType": "Block",
																			"src": "8307:706:9",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1614,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1608,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1600,
																								"src": "8334:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1609,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8344:4:9",
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2847,
																							"src": "8334:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1612,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8360:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1611,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "8352:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1610,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "8352:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1613,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8352:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "8334:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1618,
																					"nodeType": "IfStatement",
																					"src": "8330:101:9",
																					"trueBody": {
																						"id": 1617,
																						"nodeType": "Block",
																						"src": "8364:67:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1615,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1600,
																									"src": "8398:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 1586,
																								"id": 1616,
																								"nodeType": "Return",
																								"src": "8391:16:9"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 1640,
																						"nodeType": "Block",
																						"src": "8746:248:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1621,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "8773:6:9",
																									"subExpression": {
																										"id": 1620,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1588,
																										"src": "8773:4:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1622,
																								"nodeType": "ExpressionStatement",
																								"src": "8773:6:9"
																							},
																							{
																								"expression": {
																									"id": 1627,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1623,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1600,
																										"src": "8806:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1624,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1104,
																											"src": "8818:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 1626,
																										"indexExpression": {
																											"id": 1625,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1588,
																											"src": "8830:4:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8818:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "8806:29:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 1628,
																								"nodeType": "ExpressionStatement",
																								"src": "8806:29:9"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 1635,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1629,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1600,
																											"src": "8866:9:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 1630,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8876:4:9",
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2847,
																										"src": "8866:14:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 1633,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "8892:1:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 1632,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "8884:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 1631,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "8884:7:9",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1634,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8884:10:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "8866:28:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1639,
																								"nodeType": "IfStatement",
																								"src": "8862:109:9",
																								"trueBody": {
																									"id": 1638,
																									"nodeType": "Block",
																									"src": "8896:75:9",
																									"statements": [
																										{
																											"expression": {
																												"id": 1636,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1600,
																												"src": "8934:9:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 1586,
																											"id": 1637,
																											"nodeType": "Return",
																											"src": "8927:16:9"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 1619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8740:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 1641,
																					"nodeType": "WhileStatement",
																					"src": "8733:261:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1648,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2830,
														"src": "9056:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9056:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "RevertStatement",
												"src": "9049:38:9"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "7790:188:9",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "7993:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8014:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "8006:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8005:17:9"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "8046:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1583,
														"name": "TokenOwnership",
														"nameLocations": [
															"8046:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2852,
														"src": "8046:14:9"
													},
													"referencedDeclaration": 2852,
													"src": "8046:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:23:9"
									},
									"scope": 2797,
									"src": "7984:1111:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "9230:52:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1662,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "9261:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1661,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "9248:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2852_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9248:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9270:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2847,
													"src": "9248:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1660,
												"id": 1665,
												"nodeType": "Return",
												"src": "9241:33:9"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "9103:48:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "9166:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1657,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9203:8:9"
									},
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9182:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "9174:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9173:17:9"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "9221:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9221:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9220:9:9"
									},
									"scope": 2797,
									"src": "9157:125:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "9418:31:9",
										"statements": [
											{
												"expression": {
													"id": 1674,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "9436:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1675,
												"nodeType": "Return",
												"src": "9429:12:9"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "9290:53:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9358:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9385:8:9"
									},
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9362:2:9"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "9403:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9403:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:15:9"
									},
									"scope": 2797,
									"src": "9349:100:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "9589:33:9",
										"statements": [
											{
												"expression": {
													"id": 1684,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1099,
													"src": "9607:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1685,
												"nodeType": "Return",
												"src": "9600:14:9"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "9457:55:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9527:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1680,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9556:8:9"
									},
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9533:2:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "9574:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9574:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9573:15:9"
									},
									"scope": 2797,
									"src": "9518:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "9781:230:9",
										"statements": [
											{
												"condition": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9796:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1697,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "9805:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1696,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "9797:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9797:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "9792:59:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1700,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "9822:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1702,
													"nodeType": "RevertStatement",
													"src": "9815:36:9"
												}
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "9878:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1729,
														"src": "9864:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1704,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9864:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1706,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "9888:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9864:34:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1711,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "9922:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9916:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1709,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "9916:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9916:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9931:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9916:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9941:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9916:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10001:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9916:87:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1720,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "9969:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1721,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1690,
																				"src": "9978:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9986:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "9978:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9978:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1718,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "9952:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9956:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "9952:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9952:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9945:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1716,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "9945:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9945:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1728,
												"nodeType": "Return",
												"src": "9909:94:9"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "9630:57:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9702:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9748:8:9"
									},
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9719:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "9711:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9711:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9710:17:9"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "9766:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9766:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9765:15:9"
									},
									"scope": 2797,
									"src": "9693:318:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "10325:119:9",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f",
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10343:83:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/"
												},
												"functionReturnParameters": 1735,
												"id": 1737,
												"nodeType": "Return",
												"src": "10336:90:9"
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "10019:234:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10268:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10276:2:9"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "10310:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1733,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10310:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10309:15:9"
									},
									"scope": 2797,
									"src": "10259:185:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "10568:310:9",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10587:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1784,
														"src": "10579:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10579:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"arguments": [
														{
															"id": 1752,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "10611:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1750,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2797,
															"src": "10595:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2797_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10603:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1667,
														"src": "10595:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10595:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10579:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1755,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "10634:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1756,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "10640:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10634:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "10630:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1758,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2818,
															"src": "10654:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10654:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1760,
													"nodeType": "RevertStatement",
													"src": "10647:31:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1762,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "10695:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10695:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1764,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "10711:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10695:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1777,
												"nodeType": "IfStatement",
												"src": "10691:139:9",
												"trueBody": {
													"condition": {
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "10721:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1767,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "10739:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1768,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "10746:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10746:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1766,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "10722:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10722:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1776,
													"nodeType": "IfStatement",
													"src": "10718:112:9",
													"trueBody": {
														"id": 1775,
														"nodeType": "Block",
														"src": "10761:69:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1772,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2809,
																		"src": "10783:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10783:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1774,
																"nodeType": "RevertStatement",
																"src": "10776:42:9"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "10851:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "10855:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "10864:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1778,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2715,
														"src": "10842:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10842:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "10842:28:9"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "10452:48:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10515:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1746,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10559:8:9"
									},
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10531:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "10523:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10523:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10543:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "10535:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10535:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10522:29:9"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10568:0:9"
									},
									"scope": 2797,
									"src": "10506:372:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "11021:127:9",
										"statements": [
											{
												"condition": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11036:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1795,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "11045:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1794,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "11037:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11037:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "11032:64:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1798,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "11062:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11062:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1800,
													"nodeType": "RevertStatement",
													"src": "11055:41:9"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1802,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "11116:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1804,
													"indexExpression": {
														"id": 1803,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "11132:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11116:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1805,
												"nodeType": "Return",
												"src": "11109:31:9"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "10886:52:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "10953:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10994:8:9"
									},
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10973:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "10965:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10965:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10964:17:9"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "11012:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11011:9:9"
									},
									"scope": 2797,
									"src": "10944:204:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "11304:203:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1816,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "11319:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1817,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "11331:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11331:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11319:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1823,
												"nodeType": "IfStatement",
												"src": "11315:54:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1820,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "11352:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11352:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1822,
													"nodeType": "RevertStatement",
													"src": "11345:24:9"
												}
											},
											{
												"expression": {
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1824,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "11382:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1828,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1825,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "11401:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11401:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11382:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1829,
														"indexExpression": {
															"id": 1827,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "11415:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11382:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1830,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "11427:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11382:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "11382:53:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1834,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "11466:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11466:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "11480:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1837,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "11490:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1833,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "11451:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11451:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "EmitStatement",
												"src": "11446:53:9"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "11156:58:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "11229:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1814,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11295:8:9"
									},
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11255:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "11247:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11247:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "11265:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11265:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11246:33:9"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11304:0:9"
									},
									"scope": 2797,
									"src": "11220:287:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "11681:61:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1852,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "11699:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1854,
														"indexExpression": {
															"id": 1853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "11718:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11699:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1856,
													"indexExpression": {
														"id": 1855,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "11725:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11699:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1857,
												"nodeType": "Return",
												"src": "11692:42:9"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "11515:57:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "11587:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1848,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11657:8:9"
									},
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11612:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "11604:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11604:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11627:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "11619:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11619:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11603:33:9"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "11675:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11675:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11674:6:9"
									},
									"scope": 2797,
									"src": "11578:164:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "11932:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1871,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "11953:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "11959:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "11963:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1870,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "11943:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11943:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "11943:28:9"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "11750:53:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11818:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1868,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11923:8:9"
									},
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11849:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "11841:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11841:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11872:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "11864:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11864:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11893:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "11885:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11830:77:9"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11932:0:9"
									},
									"scope": 2797,
									"src": "11809:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "12177:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1889,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "12205:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1890,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "12211:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1891,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "12215:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12224:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1888,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1896,
															1932
														],
														"referencedDeclaration": 1932,
														"src": "12188:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12188:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "12188:39:9"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "11987:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "12059:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1886,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12168:8:9"
									},
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12094:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "12086:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12086:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12117:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "12109:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12138:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "12130:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12130:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12075:77:9"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12177:0:9"
									},
									"scope": 2797,
									"src": "12050:185:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "12462:214:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "12483:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "12489:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "12493:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1909,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "12473:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12473:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "12473:28:9"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1915,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "12516:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12519:10:9",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "12516:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12516:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "12512:157:9",
												"trueBody": {
													"condition": {
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12536:57:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1919,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "12568:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1920,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "12574:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1921,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "12578:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1922,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "12587:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1918,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "12537:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12537:56:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1929,
													"nodeType": "IfStatement",
													"src": "12533:136:9",
													"trueBody": {
														"id": 1928,
														"nodeType": "Block",
														"src": "12595:74:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1925,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2839,
																		"src": "12617:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12617:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1927,
																"nodeType": "RevertStatement",
																"src": "12610:47:9"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "12243:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "12315:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1907,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12453:8:9"
									},
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12350:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "12342:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12342:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12373:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "12365:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12365:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12394:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "12386:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12386:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12425:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "12412:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12412:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12331:106:9"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12462:0:9"
									},
									"scope": 2797,
									"src": "12306:370:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "12953:111:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1940,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "12971:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12971:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1942,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "12990:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12971:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "13001:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1945,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "13011:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13001:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "12971:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13028:28:9",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1948,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "13029:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1950,
																"indexExpression": {
																	"id": 1949,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "13041:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13029:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13050:6:9",
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2851,
															"src": "13029:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12971:85:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1954,
												"nodeType": "Return",
												"src": "12964:92:9"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "12684:200:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   (`_mint`),"
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "12899:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12915:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "12907:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:17:9"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "12947:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12947:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12946:6:9"
									},
									"scope": 2797,
									"src": "12890:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "13206:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1965,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "13227:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1966,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "13231:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13241:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1964,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1971,
															2202
														],
														"referencedDeclaration": 2202,
														"src": "13217:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13217:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "13217:27:9"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "13072:70:9",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13157:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13175:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "13167:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13167:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "13187:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "13179:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13179:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13166:30:9"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13206:0:9"
									},
									"scope": 2797,
									"src": "13148:104:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "13737:2124:9",
										"statements": [
											{
												"assignments": [
													1982
												],
												"declarations": [
													{
														"constant": false,
														"id": 1982,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "13759:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "13751:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"id": 1983,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1091,
													"src": "13774:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13751:36:9"
											},
											{
												"expression": {
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1985,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "13814:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1989,
															"indexExpression": {
																"expression": {
																	"id": 1986,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13824:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13828:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13824:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13814:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1990,
														"indexExpression": {
															"hexValue": "33",
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13836:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13814:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1992,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13852:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13856:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13852:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1991,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "13841:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13841:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13814:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "13814:49:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1997,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "13905:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13919:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13911:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1998,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13911:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13911:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13905:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2006,
												"nodeType": "IfStatement",
												"src": "13901:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2003,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "13930:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13930:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2005,
													"nodeType": "RevertStatement",
													"src": "13923:26:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "13964:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13976:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13964:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "13960:44:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2010,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2827,
															"src": "13986:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13986:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2012,
													"nodeType": "RevertStatement",
													"src": "13979:25:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14047:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14039:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14039:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14039:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "14051:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2020,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "14055:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2021,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "14069:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2014,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "14017:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14017:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "14017:61:9"
											},
											{
												"id": 2180,
												"nodeType": "UncheckedBlock",
												"src": "14330:1403:9",
												"statements": [
													{
														"expression": {
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2024,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "14355:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2026,
																	"indexExpression": {
																		"id": 2025,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "14368:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14355:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14372:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2854,
																"src": "14355:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "14390:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14383:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2028,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "14383:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14383:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14355:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2033,
														"nodeType": "ExpressionStatement",
														"src": "14355:44:9"
													},
													{
														"expression": {
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2034,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "14414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2036,
																	"indexExpression": {
																		"id": 2035,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "14427:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14414:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14431:12:9",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2856,
																"src": "14414:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2040,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "14454:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14447:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2038,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "14447:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14447:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14414:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2043,
														"nodeType": "ExpressionStatement",
														"src": "14414:49:9"
													},
													{
														"expression": {
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2044,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "14480:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2046,
																	"indexExpression": {
																		"id": 2045,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "14492:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14480:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14506:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2847,
																"src": "14480:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "14513:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14480:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "14480:35:9"
													},
													{
														"expression": {
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2051,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "14530:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2053,
																	"indexExpression": {
																		"id": 2052,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "14542:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14530:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14556:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2849,
																"src": "14530:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2057,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "14580:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14586:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "14580:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14573:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2055,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "14573:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14573:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14530:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2061,
														"nodeType": "ExpressionStatement",
														"src": "14530:66:9"
													},
													{
														"assignments": [
															2063
														],
														"declarations": [
															{
																"constant": false,
																"id": 2063,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "14621:12:9",
																"nodeType": "VariableDeclaration",
																"scope": 2180,
																"src": "14613:20:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2062,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14613:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2065,
														"initialValue": {
															"id": 2064,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "14636:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14613:35:9"
													},
													{
														"assignments": [
															2067
														],
														"declarations": [
															{
																"constant": false,
																"id": 2067,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "14671:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 2180,
																"src": "14663:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2066,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14663:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2071,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2068,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "14677:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2069,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "14692:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14677:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14663:37:9"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2072,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "14721:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14724:10:9",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "14721:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14721:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "15381:298:9",
															"statements": [
																{
																	"body": {
																		"id": 2169,
																		"nodeType": "Block",
																		"src": "15403:233:9",
																		"statements": [
																			{
																				"assignments": [
																					2137
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2137,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "15431:5:9",
																						"nodeType": "VariableDeclaration",
																						"scope": 2169,
																						"src": "15426:10:9",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2136,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "15426:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2141,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2139,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2063,
																							"src": "15452:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2138,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "15439:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15439:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "15426:39:9"
																			},
																			{
																				"expression": {
																					"id": 2157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2142,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1126,
																								"src": "15488:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2146,
																							"indexExpression": {
																								"expression": {
																									"id": 2143,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "15498:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2144,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15502:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "15498:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15488:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2147,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2145,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15510:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "15488:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2155,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2137,
																								"src": "15542:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2148,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1126,
																										"src": "15513:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2151,
																									"indexExpression": {
																										"expression": {
																											"id": 2149,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "15523:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2150,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "15527:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "15523:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15513:21:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2153,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2152,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15535:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "15513:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2154,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15538:3:9",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 915,
																							"src": "15513:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2156,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15513:35:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15488:60:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2158,
																				"nodeType": "ExpressionStatement",
																				"src": "15488:60:9"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2162,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15593:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2161,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15585:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2160,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15585:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15585:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2164,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "15597:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2166,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "15601:14:9",
																							"subExpression": {
																								"id": 2165,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2063,
																								"src": "15601:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2159,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "15576:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15576:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2168,
																				"nodeType": "EmitStatement",
																				"src": "15571:45:9"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2170,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2063,
																			"src": "15644:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2171,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "15659:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15644:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2173,
																	"nodeType": "DoWhileStatement",
																	"src": "15400:264:9"
																}
															]
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "14717:962:9",
														"trueBody": {
															"id": 2135,
															"nodeType": "Block",
															"src": "14738:637:9",
															"statements": [
																{
																	"body": {
																		"id": 2123,
																		"nodeType": "Block",
																		"src": "14760:451:9",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2078,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14805:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2077,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14797:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2076,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14797:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2079,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14797:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2080,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "14809:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2081,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2063,
																							"src": "14813:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2075,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "14788:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2082,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14788:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2083,
																				"nodeType": "EmitStatement",
																				"src": "14783:43:9"
																			},
																			{
																				"assignments": [
																					2085
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2085,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "14854:5:9",
																						"nodeType": "VariableDeclaration",
																						"scope": 2123,
																						"src": "14849:10:9",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2084,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "14849:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2089,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2087,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2063,
																							"src": "14875:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2086,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "14862:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14862:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "14849:39:9"
																			},
																			{
																				"expression": {
																					"id": 2105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2090,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1126,
																								"src": "14911:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2094,
																							"indexExpression": {
																								"expression": {
																									"id": 2091,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "14921:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2092,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "14925:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "14921:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14911:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2095,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2093,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14933:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "14911:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2103,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2085,
																								"src": "14965:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2096,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1126,
																										"src": "14936:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2099,
																									"indexExpression": {
																										"expression": {
																											"id": 2097,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "14946:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2098,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "14950:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "14946:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "14936:21:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2101,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2100,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14958:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14936:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14961:3:9",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 915,
																							"src": "14936:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14936:35:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14911:60:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2106,
																				"nodeType": "ExpressionStatement",
																				"src": "14911:60:9"
																			},
																			{
																				"condition": {
																					"id": 2117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "14998:70:9",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2110,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15038:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2109,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "15030:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2108,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "15030:7:9",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2111,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15030:10:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2112,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1974,
																								"src": "15042:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "15046:14:9",
																								"subExpression": {
																									"id": 2113,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2063,
																									"src": "15046:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2115,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1978,
																								"src": "15062:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2107,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2770,
																							"src": "14999:30:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14999:69:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2122,
																				"nodeType": "IfStatement",
																				"src": "14994:198:9",
																				"trueBody": {
																					"id": 2121,
																					"nodeType": "Block",
																					"src": "15070:122:9",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2118,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2839,
																									"src": "15104:38:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2119,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15104:40:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2120,
																							"nodeType": "RevertStatement",
																							"src": "15097:47:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2124,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2063,
																			"src": "15219:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2125,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "15234:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15219:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2127,
																	"nodeType": "DoWhileStatement",
																	"src": "14757:482:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2128,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "15320:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2129,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "15337:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15320:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2134,
																	"nodeType": "IfStatement",
																	"src": "15316:43:9",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2131,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "15351:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15351:8:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2133,
																		"nodeType": "ExpressionStatement",
																		"src": "15351:8:9"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2176,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "15693:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2177,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "15709:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15693:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2179,
														"nodeType": "ExpressionStatement",
														"src": "15693:28:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15772:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15764:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15764:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15764:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2186,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "15776:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2187,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "15780:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2188,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "15794:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2181,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2796,
														"src": "15743:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15743:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "15743:60:9"
											},
											{
												"expression": {
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2191,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "15814:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2195,
															"indexExpression": {
																"expression": {
																	"id": 2192,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15824:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15828:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15824:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15814:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2196,
														"indexExpression": {
															"hexValue": "31",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15836:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15814:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2197,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15841:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15847:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "15841:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15814:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "15814:39:9"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "13260:359:9",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13634:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13662:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13654:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "13683:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13675:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13675:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13715:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "13702:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13702:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13643:84:9"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13737:0:9"
									},
									"scope": 2797,
									"src": "13625:2236:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "16226:2424:9",
										"statements": [
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "16249:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "16241:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16241:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"arguments": [
														{
															"id": 2215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "16276:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2214,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "16263:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16263:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16241:43:9"
											},
											{
												"expression": {
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2218,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16303:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2221,
															"indexExpression": {
																"id": 2219,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "16313:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16303:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2222,
														"indexExpression": {
															"hexValue": "33",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16319:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16303:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2224,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "16335:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2223,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "16324:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16324:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16303:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "16303:37:9"
											},
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2228,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16351:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2231,
															"indexExpression": {
																"id": 2229,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "16361:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16351:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2232,
														"indexExpression": {
															"hexValue": "32",
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16367:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16351:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2239,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "16395:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2233,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "16372:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2235,
																	"indexExpression": {
																		"id": 2234,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "16382:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16372:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2237,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16388:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16372:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16391:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "16372:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16372:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16351:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "16351:56:9"
											},
											{
												"expression": {
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2243,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16418:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2246,
															"indexExpression": {
																"id": 2244,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "16428:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16418:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2247,
														"indexExpression": {
															"hexValue": "31",
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16434:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16418:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2248,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16439:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16445:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16439:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16418:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "16418:33:9"
											},
											{
												"expression": {
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2252,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16462:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2255,
															"indexExpression": {
																"id": 2253,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "16472:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16462:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2256,
														"indexExpression": {
															"hexValue": "33",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16476:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16462:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2258,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "16492:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2257,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "16481:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16481:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16462:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "16462:33:9"
											},
											{
												"expression": {
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2262,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16506:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2265,
															"indexExpression": {
																"id": 2263,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "16516:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16506:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2266,
														"indexExpression": {
															"hexValue": "32",
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16520:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16506:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2273,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "16546:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2267,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "16525:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2269,
																	"indexExpression": {
																		"id": 2268,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "16535:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16525:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2271,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16539:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16525:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16542:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "16525:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16525:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16506:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "16506:52:9"
											},
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2277,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16569:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2280,
															"indexExpression": {
																"id": 2278,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "16579:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16569:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2281,
														"indexExpression": {
															"hexValue": "31",
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16583:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16569:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2282,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16588:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16594:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16588:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16569:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "16569:31:9"
											},
											{
												"assignments": [
													2288
												],
												"declarations": [
													{
														"constant": false,
														"id": 2288,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "16657:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "16635:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2287,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2286,
																"name": "TokenOwnership",
																"nameLocations": [
																	"16635:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2852,
																"src": "16635:14:9"
															},
															"referencedDeclaration": 2852,
															"src": "16635:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2292,
												"initialValue": {
													"arguments": [
														{
															"id": 2290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "16686:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2289,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "16673:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2852_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16673:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16635:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2293,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2288,
															"src": "16711:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16725:4:9",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2847,
														"src": "16711:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2295,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "16733:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16711:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2300,
												"nodeType": "IfStatement",
												"src": "16707:67:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2297,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "16746:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16746:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2299,
													"nodeType": "RevertStatement",
													"src": "16739:35:9"
												}
											},
											{
												"assignments": [
													2302
												],
												"declarations": [
													{
														"constant": false,
														"id": 2302,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "16792:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "16787:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16787:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "16813:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16813:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2305,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "16829:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16813:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2308,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2205,
																			"src": "16867:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2309,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "16873:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16873:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2307,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "16850:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16850:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16813:73:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2314,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "16915:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2313,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "16903:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16903:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2316,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "16927:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16927:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16903:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16813:126:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2320,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16812:128:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16787:153:9"
											},
											{
												"condition": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16957:18:9",
													"subExpression": {
														"id": 2322,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "16958:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2327,
												"nodeType": "IfStatement",
												"src": "16953:66:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2324,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "16984:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16984:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2326,
													"nodeType": "RevertStatement",
													"src": "16977:42:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2328,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "17034:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17048:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17040:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2329,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17040:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17040:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17034:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2337,
												"nodeType": "IfStatement",
												"src": "17030:52:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2334,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2842,
															"src": "17059:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17059:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2336,
													"nodeType": "RevertStatement",
													"src": "17052:30:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2339,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "17117:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2340,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "17123:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2341,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "17127:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17136:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2338,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "17095:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17095:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "17095:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17220:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17212:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17212:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17212:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "17224:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "17233:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2345,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2715,
														"src": "17203:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17203:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2353,
												"nodeType": "ExpressionStatement",
												"src": "17203:35:9"
											},
											{
												"id": 2431,
												"nodeType": "UncheckedBlock",
												"src": "17509:1036:9",
												"statements": [
													{
														"expression": {
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2354,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "17534:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2356,
																	"indexExpression": {
																		"id": 2355,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "17547:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17534:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17553:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2854,
																"src": "17534:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17564:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17534:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2360,
														"nodeType": "ExpressionStatement",
														"src": "17534:31:9"
													},
													{
														"expression": {
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2361,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "17580:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2363,
																	"indexExpression": {
																		"id": 2362,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "17593:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17580:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17597:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2854,
																"src": "17580:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17608:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17580:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2367,
														"nodeType": "ExpressionStatement",
														"src": "17580:29:9"
													},
													{
														"assignments": [
															2370
														],
														"declarations": [
															{
																"constant": false,
																"id": 2370,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "17649:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "17626:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2369,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2368,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"17626:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2852,
																		"src": "17626:14:9"
																	},
																	"referencedDeclaration": 2852,
																	"src": "17626:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2374,
														"initialValue": {
															"baseExpression": {
																"id": 2371,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "17660:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2373,
															"indexExpression": {
																"id": 2372,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "17672:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17660:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17626:54:9"
													},
													{
														"expression": {
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2375,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "17695:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2377,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17704:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2847,
																"src": "17695:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2378,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "17711:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17695:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2380,
														"nodeType": "ExpressionStatement",
														"src": "17695:18:9"
													},
													{
														"expression": {
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2381,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "17728:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17737:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2849,
																"src": "17728:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2386,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "17761:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17767:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "17761:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17754:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2384,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "17754:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17754:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "17728:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2390,
														"nodeType": "ExpressionStatement",
														"src": "17728:49:9"
													},
													{
														"assignments": [
															2392
														],
														"declarations": [
															{
																"constant": false,
																"id": 2392,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "18037:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "18029:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18029:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2396,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2393,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "18051:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18051:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18029:33:9"
													},
													{
														"assignments": [
															2399
														],
														"declarations": [
															{
																"constant": false,
																"id": 2399,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "18100:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "18077:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2398,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2397,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18077:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2852,
																		"src": "18077:14:9"
																	},
																	"referencedDeclaration": 2852,
																	"src": "18077:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2403,
														"initialValue": {
															"baseExpression": {
																"id": 2400,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "18111:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2402,
															"indexExpression": {
																"id": 2401,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "18123:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18111:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18077:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2404,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "18154:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18163:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2847,
																"src": "18154:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18179:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18171:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2406,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18171:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18171:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18154:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2430,
														"nodeType": "IfStatement",
														"src": "18150:384:9",
														"trueBody": {
															"id": 2429,
															"nodeType": "Block",
															"src": "18183:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2411,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "18349:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2412,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "18364:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18349:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2428,
																	"nodeType": "IfStatement",
																	"src": "18345:174:9",
																	"trueBody": {
																		"id": 2427,
																		"nodeType": "Block",
																		"src": "18379:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2414,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2399,
																							"src": "18402:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2416,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18411:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2847,
																						"src": "18402:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2417,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2205,
																						"src": "18418:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "18402:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2419,
																				"nodeType": "ExpressionStatement",
																				"src": "18402:20:9"
																			},
																			{
																				"expression": {
																					"id": 2425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2420,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2399,
																							"src": "18445:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2422,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18454:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2849,
																						"src": "18445:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2423,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2288,
																							"src": "18471:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2424,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18485:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2849,
																						"src": "18471:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "18445:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2426,
																				"nodeType": "ExpressionStatement",
																				"src": "18445:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2433,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "18571:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2434,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "18577:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2435,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "18581:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2432,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "18562:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18562:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2437,
												"nodeType": "EmitStatement",
												"src": "18557:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "18621:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "18627:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "18631:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18640:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2438,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2796,
														"src": "18600:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18600:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "18600:42:9"
											}
										]
									},
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "15876:240:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16131:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16159:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "16151:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16151:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16182:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "16174:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16174:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "16195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16140:77:9"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16226:0:9"
									},
									"scope": 2797,
									"src": "16122:2528:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "18777:40:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "18794:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18803:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2452,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2458,
															2692
														],
														"referencedDeclaration": 2692,
														"src": "18788:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18788:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "18788:21:9"
											}
										]
									},
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "18658:64:9",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18737:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18751:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "18743:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18743:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18742:17:9"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18777:0:9"
									},
									"scope": 2797,
									"src": "18728:89:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "19115:2661:9",
										"statements": [
											{
												"assignments": [
													2467
												],
												"declarations": [
													{
														"constant": false,
														"id": 2467,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "19136:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2691,
														"src": "19128:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19128:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"arguments": [
														{
															"id": 2469,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "19163:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2468,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "19150:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19150:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19128:43:9"
											},
											{
												"expression": {
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2472,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19190:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2476,
															"indexExpression": {
																"expression": {
																	"id": 2473,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19200:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19204:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19200:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19190:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2477,
														"indexExpression": {
															"hexValue": "33",
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19212:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19190:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2479,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19228:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19232:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19228:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2478,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "19217:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19217:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19190:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "19190:49:9"
											},
											{
												"expression": {
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2484,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19250:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2488,
															"indexExpression": {
																"expression": {
																	"id": 2485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19260:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19264:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19260:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19250:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2489,
														"indexExpression": {
															"hexValue": "32",
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19272:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19250:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2497,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "19306:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2490,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "19277:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2493,
																	"indexExpression": {
																		"expression": {
																			"id": 2491,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19287:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19291:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19287:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19277:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2495,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19299:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19277:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19302:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "19277:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19277:41:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19250:68:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "19250:68:9"
											},
											{
												"expression": {
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2501,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19329:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2505,
															"indexExpression": {
																"expression": {
																	"id": 2502,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19339:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19343:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19339:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19329:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2506,
														"indexExpression": {
															"hexValue": "31",
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19351:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19329:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2507,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "19356:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19362:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "19356:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19329:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "19329:39:9"
											},
											{
												"expression": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2511,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "19379:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2514,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "19409:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2512,
																"name": "_totalPower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "19393:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19405:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "19393:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19393:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19379:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2517,
												"nodeType": "ExpressionStatement",
												"src": "19379:42:9"
											},
											{
												"assignments": [
													2520
												],
												"declarations": [
													{
														"constant": false,
														"id": 2520,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "19469:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2691,
														"src": "19447:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2519,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2518,
																"name": "TokenOwnership",
																"nameLocations": [
																	"19447:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2852,
																"src": "19447:14:9"
															},
															"referencedDeclaration": 2852,
															"src": "19447:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2524,
												"initialValue": {
													"arguments": [
														{
															"id": 2522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "19498:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2521,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "19485:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2852_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19485:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19447:59:9"
											},
											{
												"assignments": [
													2526
												],
												"declarations": [
													{
														"constant": false,
														"id": 2526,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "19528:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2691,
														"src": "19520:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19520:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2529,
												"initialValue": {
													"expression": {
														"id": 2527,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "19535:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19549:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2847,
													"src": "19535:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19520:33:9"
											},
											{
												"condition": {
													"id": 2530,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2463,
													"src": "19570:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2559,
												"nodeType": "IfStatement",
												"src": "19566:290:9",
												"trueBody": {
													"id": 2558,
													"nodeType": "Block",
													"src": "19585:271:9",
													"statements": [
														{
															"assignments": [
																2532
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2532,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "19605:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2558,
																	"src": "19600:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2531,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "19600:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2551,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2533,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "19626:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19626:12:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2535,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2526,
																					"src": "19642:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "19626:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2538,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2526,
																						"src": "19684:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2539,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 467,
																							"src": "19690:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19690:12:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2537,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1859,
																					"src": "19667:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19667:36:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19626:77:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2544,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2461,
																						"src": "19736:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2543,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1807,
																					"src": "19724:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19724:20:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2546,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "19748:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19748:12:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "19724:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "19626:134:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19625:136:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19600:161:9"
														},
														{
															"condition": {
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "19782:18:9",
																"subExpression": {
																	"id": 2552,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "19783:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2557,
															"nodeType": "IfStatement",
															"src": "19778:66:9",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2554,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2833,
																		"src": "19809:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19809:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2556,
																"nodeType": "RevertStatement",
																"src": "19802:42:9"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "19890:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19896:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19896:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19896:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2566,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "19908:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19917:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2560,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "19868:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19868:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2569,
												"nodeType": "ExpressionStatement",
												"src": "19868:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20001:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19993:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19993:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19993:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "20005:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "20014:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2570,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2715,
														"src": "19984:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "19984:35:9"
											},
											{
												"id": 2667,
												"nodeType": "UncheckedBlock",
												"src": "20290:1213:9",
												"statements": [
													{
														"assignments": [
															2581
														],
														"declarations": [
															{
																"constant": false,
																"id": 2581,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "20335:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2667,
																"src": "20315:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2861_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 2580,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2579,
																		"name": "AddressData",
																		"nameLocations": [
																			"20315:11:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2861,
																		"src": "20315:11:9"
																	},
																	"referencedDeclaration": 2861,
																	"src": "20315:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2585,
														"initialValue": {
															"baseExpression": {
																"id": 2582,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "20349:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2861_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 2584,
															"indexExpression": {
																"id": 2583,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2526,
																"src": "20362:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20349:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2861_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20315:52:9"
													},
													{
														"expression": {
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2586,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2581,
																	"src": "20382:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20394:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2854,
																"src": "20382:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20405:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20382:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2591,
														"nodeType": "ExpressionStatement",
														"src": "20382:24:9"
													},
													{
														"expression": {
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2592,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2581,
																	"src": "20421:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2861_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20433:12:9",
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2858,
																"src": "20421:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20449:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20421:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2597,
														"nodeType": "ExpressionStatement",
														"src": "20421:29:9"
													},
													{
														"assignments": [
															2600
														],
														"declarations": [
															{
																"constant": false,
																"id": 2600,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "20572:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2667,
																"src": "20549:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2599,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2598,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"20549:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2852,
																		"src": "20549:14:9"
																	},
																	"referencedDeclaration": 2852,
																	"src": "20549:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2604,
														"initialValue": {
															"baseExpression": {
																"id": 2601,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "20583:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2603,
															"indexExpression": {
																"id": 2602,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2461,
																"src": "20595:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20583:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20549:54:9"
													},
													{
														"expression": {
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2605,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "20618:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20627:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2847,
																"src": "20618:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2608,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2526,
																"src": "20634:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20618:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2610,
														"nodeType": "ExpressionStatement",
														"src": "20618:20:9"
													},
													{
														"expression": {
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2611,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "20653:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20662:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2849,
																"src": "20653:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2616,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "20686:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20692:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "20686:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20679:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2614,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "20679:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20679:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "20653:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2620,
														"nodeType": "ExpressionStatement",
														"src": "20653:49:9"
													},
													{
														"expression": {
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2621,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "20717:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20726:6:9",
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2851,
																"src": "20717:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20735:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "20717:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "ExpressionStatement",
														"src": "20717:22:9"
													},
													{
														"assignments": [
															2628
														],
														"declarations": [
															{
																"constant": false,
																"id": 2628,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "20995:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2667,
																"src": "20987:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2627,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20987:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2632,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2461,
																"src": "21009:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21019:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "21009:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20987:33:9"
													},
													{
														"assignments": [
															2635
														],
														"declarations": [
															{
																"constant": false,
																"id": 2635,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "21058:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2667,
																"src": "21035:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2634,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2633,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"21035:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2852,
																		"src": "21035:14:9"
																	},
																	"referencedDeclaration": 2852,
																	"src": "21035:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2639,
														"initialValue": {
															"baseExpression": {
																"id": 2636,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "21069:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2852_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2638,
															"indexExpression": {
																"id": 2637,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "21081:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21069:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21035:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2640,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2635,
																	"src": "21112:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21121:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2847,
																"src": "21112:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21137:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21129:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2642,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21129:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21129:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21112:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2666,
														"nodeType": "IfStatement",
														"src": "21108:384:9",
														"trueBody": {
															"id": 2665,
															"nodeType": "Block",
															"src": "21141:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2647,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "21307:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2648,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "21322:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21307:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2664,
																	"nodeType": "IfStatement",
																	"src": "21303:174:9",
																	"trueBody": {
																		"id": 2663,
																		"nodeType": "Block",
																		"src": "21337:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 2654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2650,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2635,
																							"src": "21360:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2652,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "21369:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2847,
																						"src": "21360:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2653,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2526,
																						"src": "21376:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "21360:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2655,
																				"nodeType": "ExpressionStatement",
																				"src": "21360:20:9"
																			},
																			{
																				"expression": {
																					"id": 2661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2656,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2635,
																							"src": "21403:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2658,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "21412:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2849,
																						"src": "21403:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2659,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2520,
																							"src": "21429:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2852_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2660,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "21443:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2849,
																						"src": "21429:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "21403:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2662,
																				"nodeType": "ExpressionStatement",
																				"src": "21403:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2669,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "21529:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21543:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21535:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2670,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21535:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21535:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2674,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "21547:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2668,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "21520:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21520:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2676,
												"nodeType": "EmitStatement",
												"src": "21515:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2678,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "21587:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21601:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21593:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21593:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21593:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2683,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "21605:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21614:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2677,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2796,
														"src": "21566:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21566:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "21566:50:9"
											},
											{
												"id": 2690,
												"nodeType": "UncheckedBlock",
												"src": "21718:51:9",
												"statements": [
													{
														"expression": {
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "21743:14:9",
															"subExpression": {
																"id": 2687,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "21743:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2689,
														"nodeType": "ExpressionStatement",
														"src": "21743:14:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "18825:215:9",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19055:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19069:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "19061:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19061:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "19083:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "19078:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19078:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19060:37:9"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19115:0:9"
									},
									"scope": 2797,
									"src": "19046:2730:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "21998:92:9",
										"statements": [
											{
												"expression": {
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2702,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "22009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2704,
														"indexExpression": {
															"id": 2703,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "22025:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22009:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2705,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2695,
														"src": "22036:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22009:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2707,
												"nodeType": "ExpressionStatement",
												"src": "22009:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2709,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "22063:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "22070:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2711,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "22074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2708,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "22054:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22054:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2713,
												"nodeType": "EmitStatement",
												"src": "22049:33:9"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "21784:104:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21903:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21930:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "21922:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21922:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21951:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "21943:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21943:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21977:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "21969:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21969:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21911:78:9"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21998:0:9"
									},
									"scope": 2797,
									"src": "21894:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "22751:498:9",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2750,
															"nodeType": "Block",
															"src": "22863:89:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2742,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "22885:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2744,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2720,
																							"src": "22911:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2743,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "22895:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22895:19:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "22915:16:9",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "22895:36:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22932:8:9",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "22895:45:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "22885:55:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2728,
																	"id": 2749,
																	"nodeType": "Return",
																	"src": "22878:62:9"
																}
															]
														},
														"errorName": "",
														"id": 2751,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2741,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2740,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "22855:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2751,
																	"src": "22848:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2739,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "22848:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "22847:15:9"
														},
														"src": "22839:113:9"
													},
													{
														"block": {
															"id": 2766,
															"nodeType": "Block",
															"src": "22981:261:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2755,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2753,
																				"src": "23000:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "23007:6:9",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "23000:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23017:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "23000:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2764,
																		"nodeType": "Block",
																		"src": "23108:123:9",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "23136:80:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "23170:2:9",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "23174:6:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "23166:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "23166:15:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "23189:6:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "23183:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "23183:13:9"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "23159:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23159:38:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "23159:38:9"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2753,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "23174:6:9",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2753,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "23189:6:9",
																						"valueSize": 1
																					}
																				],
																				"id": 2763,
																				"nodeType": "InlineAssembly",
																				"src": "23127:89:9"
																			}
																		]
																	},
																	"id": 2765,
																	"nodeType": "IfStatement",
																	"src": "22996:235:9",
																	"trueBody": {
																		"id": 2762,
																		"nodeType": "Block",
																		"src": "23020:82:9",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2759,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2839,
																						"src": "23046:38:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23046:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2761,
																				"nodeType": "RevertStatement",
																				"src": "23039:47:9"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2767,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2754,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2753,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "22973:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2767,
																	"src": "22960:19:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2752,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "22960:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "22959:21:9"
														},
														"src": "22953:289:9"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2733,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "22803:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22803:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2735,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2718,
															"src": "22817:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2736,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "22823:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2737,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "22832:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2730,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "22782:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2729,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "22766:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22766:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22786:16:9",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "22766:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22766:72:9",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2768,
												"nodeType": "TryStatement",
												"src": "22762:480:9"
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "22098:478:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "22591:30:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "22632:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22632:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22663:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "22655:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22655:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22684:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "22676:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22676:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "22715:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "22702:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22702:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22621:106:9"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "22745:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22745:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22744:6:9"
									},
									"scope": 2797,
									"src": "22582:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "24054:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "23257:634:9",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "23906:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23946:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "23938:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23938:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23969:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "23961:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23961:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "23990:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "23982:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23982:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24021:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "24013:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24013:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23927:109:9"
									},
									"returnParameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24054:0:9"
									},
									"scope": 2797,
									"src": "23897:159:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "24871:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "24064:645:9",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "24724:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24763:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "24755:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24755:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24786:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "24778:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24778:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24807:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "24799:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24799:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24838:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "24830:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24744:109:9"
									},
									"returnParameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24871:0:9"
									},
									"scope": 2797,
									"src": "24715:158:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2798,
							"src": "1033:23843:9",
							"usedErrors": [
								2809,
								2812,
								2815,
								2818,
								2821,
								2824,
								2827,
								2830,
								2833,
								2836,
								2839,
								2842,
								2845
							]
						}
					],
					"src": "88:24788:9"
				},
				"id": 9
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2868
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 2869,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2799,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2869,
							"sourceUnit": 116,
							"src": "115:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 2801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2869,
							"sourceUnit": 161,
							"src": "175:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2803,
										"name": "IERC721",
										"nameLocations": [
											"341:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "341:7:10"
									},
									"id": 2804,
									"nodeType": "InheritanceSpecifier",
									"src": "341:7:10"
								},
								{
									"baseName": {
										"id": 2805,
										"name": "IERC721Metadata",
										"nameLocations": [
											"350:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "350:15:10"
									},
									"id": 2806,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:10"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2802,
								"nodeType": "StructuredDocumentation",
								"src": "256:61:10",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2868,
							"linearizedBaseContracts": [
								2868,
								160,
								115,
								739
							],
							"name": "IERC721A",
							"nameLocation": "329:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2807,
										"nodeType": "StructuredDocumentation",
										"src": "373:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2809,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "463:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:10"
									},
									"src": "457:42:10"
								},
								{
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "507:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2812,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "565:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:10"
									},
									"src": "559:41:10"
								},
								{
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "608:68:10",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 2815,
									"name": "ApproveToCaller",
									"nameLocation": "688:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:10"
									},
									"src": "682:24:10"
								},
								{
									"documentation": {
										"id": 2816,
										"nodeType": "StructuredDocumentation",
										"src": "714:68:10",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 2818,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "794:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:10"
									},
									"src": "788:31:10"
								},
								{
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "827:67:10",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2821,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "906:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:10"
									},
									"src": "900:35:10"
								},
								{
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "943:53:10",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2824,
									"name": "MintToZeroAddress",
									"nameLocation": "1008:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:10"
									},
									"src": "1002:26:10"
								},
								{
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "1036:74:10",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2827,
									"name": "MintZeroQuantity",
									"nameLocation": "1122:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:10"
									},
									"src": "1116:25:10"
								},
								{
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "1149:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2830,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "1207:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:10"
									},
									"src": "1201:38:10"
								},
								{
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "1247:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2833,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1337:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:10"
									},
									"src": "1331:42:10"
								},
								{
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "1381:55:10",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2836,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1448:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:10"
									},
									"src": "1442:35:10"
								},
								{
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "1485:111:10",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2839,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1608:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:10"
									},
									"src": "1602:47:10"
								},
								{
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "1657:57:10",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2842,
									"name": "TransferToZeroAddress",
									"nameLocation": "1726:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:10"
									},
									"src": "1720:30:10"
								},
								{
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "1758:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2845,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1816:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:10"
									},
									"src": "1810:36:10"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2852,
									"members": [
										{
											"constant": false,
											"id": 2847,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1992:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2852,
											"src": "1984:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2846,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1984:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2849,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2107:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 2852,
											"src": "2100:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2848,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2100:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2851,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2184:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2852,
											"src": "2179:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2850,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2179:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1920:14:10",
									"nodeType": "StructDefinition",
									"scope": 2868,
									"src": "1913:285:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 2861,
									"members": [
										{
											"constant": false,
											"id": 2854,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2358:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2861,
											"src": "2351:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2853,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2351:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2856,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2459:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2861,
											"src": "2452:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2855,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2452:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2858,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "2565:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2861,
											"src": "2558:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2857,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2558:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2860,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "2796:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 2861,
											"src": "2789:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2859,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2789:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2272:11:10",
									"nodeType": "StructDefinition",
									"scope": 2868,
									"src": "2265:542:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2862,
										"nodeType": "StructuredDocumentation",
										"src": "2815:198:10",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n \n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 2867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3028:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3039:2:10"
									},
									"returnParameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "3065:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:9:10"
									},
									"scope": 2868,
									"src": "3019:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2869,
							"src": "319:2762:10",
							"usedErrors": [
								2809,
								2812,
								2815,
								2818,
								2821,
								2824,
								2827,
								2830,
								2833,
								2836,
								2839,
								2842,
								2845
							]
						}
					],
					"src": "88:2993:10"
				},
				"id": 10
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"ast": {
					"absolutePath": "minerpunk/IDCF/mineInterface.sol",
					"exportedSymbols": {
						"mine": [
							2900
						]
					},
					"id": 2901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2870,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "mine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2871,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:11",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2900,
							"linearizedBaseContracts": [
								2900
							],
							"name": "mine",
							"nameLocation": "192:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b8ba6007",
									"id": 2878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "219:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "230:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:11"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "265:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:11"
									},
									"scope": 2900,
									"src": "210:64:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4be3403c",
									"id": 2885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "294:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "315:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "307:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:22:11"
									},
									"returnParameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "351:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:11"
									},
									"scope": 2900,
									"src": "285:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e29301f9",
									"id": 2892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "375:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "397:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "389:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:11"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "427:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:9:11"
									},
									"scope": 2900,
									"src": "366:70:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d993226b",
									"id": 2899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "difficult",
									"nameLocation": "451:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "466:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "461:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:19:11"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "502:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:9:11"
									},
									"scope": 2900,
									"src": "442:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2901,
							"src": "182:340:11",
							"usedErrors": []
						}
					],
					"src": "88:434:11"
				},
				"id": 11
			}
		}
	}
}